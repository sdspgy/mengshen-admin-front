{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/dict-manage/dictManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/dict-manage/dictManage.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getAllDictList,\n  addDict,\n  editDict,\n  deleteDict,\n  searchDict,\n  getAllDictDataList,\n  addDictData,\n  editDictData,\n  deleteData\n} from \"@/api/index\";\nexport default {\n  name: \"dic-manage\",\n  data() {\n    return {\n      treeLoading: false, // 树加载状态\n      maxHeight: \"500px\",\n      loading: false, // 表格加载状态\n      editTitle: \"\", // 编辑节点名称\n      searchKey: \"\", // 搜索树\n      expand: true,\n      span: 18,\n      expandIcon: \"ios-arrow-back\",\n      selectNode: {},\n      treeData: [], // 树数据\n      selectCount: 0, // 多选计数\n      selectList: [], // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        status: \"\",\n        pageNumber: 1, // 当前页数\n        pageSize: 10, // 页面大小\n        sort: \"sortOrder\", // 默认排序字段\n        order: \"asc\" // 默认排序方式\n      },\n      modalType: 0, // 添加或编辑标识\n      modalVisible: false, // 添加或编辑显示\n      dictModalVisible: false,\n      dictModalTitle: \"\",\n      modalTitle: \"\", // 添加或编辑标题\n      dictForm: {\n        title: \"\",\n        type: \"\",\n        description: \"\",\n        sortOrder: 0\n      },\n      form: {\n        // 添加或编辑表单对象初始化数据\n        title: \"\",\n        value: \"\",\n        status: 0,\n        description: \"\",\n        sortOrder: 0\n      },\n      dictFormValidate: {\n        // 表单验证规则\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        type: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      formValidate: {\n        // 表单验证规则\n        title: [{ required: true, message: \"不能为空\", trigger: \"blur\" }],\n        value: [{ required: true, message: \"不能为空\", trigger: \"blur\" }]\n      },\n      columns: [\n        // 表头\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"名称\",\n          key: \"title\",\n          minWidth: 150,\n          sortable: true\n        },\n        {\n          title: \"数据值\",\n          key: \"value\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"备注\",\n          key: \"description\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"排序值\",\n          key: \"sortOrder\",\n          width: 100,\n          sortable: true,\n          sortType: \"asc\"\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 130,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"正常启用\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"禁用\"\n                  }\n                })\n              ]);\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          width: 250,\n          sortable: true\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 160,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"primary\",\n                    size: \"small\"\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\"\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      submitLoading: false, // 添加或编辑提交状态\n      data: [], //表单数据\n      total: 0 // 表单数据总数\n    };\n  },\n  methods: {\n    init() {\n      // 获取树数据\n      this.getAllDict();\n      // 获取表单数据\n      this.getDataList();\n    },\n    getAllDict() {\n        if (!this.$route.meta.permTypes.includes('view')){\n            this.treeLoading = false;\n            return;\n        }\n      this.treeLoading = true;\n      getAllDictList().then(res => {\n        this.treeLoading = false;\n        if (res.success) {\n          this.treeData = res.result;\n        }\n      });\n    },\n    search() {\n      // 搜索树\n      if (this.searchKey) {\n        this.treeLoading = true;\n        searchDict({ key: this.searchKey }).then(res => {\n          this.treeLoading = false;\n          if (res.success) {\n            this.treeData = res.result;\n          }\n        });\n      } else {\n        // 为空重新加载\n        this.getAllDict();\n      }\n    },\n    selectTree(v) {\n      if (v.length > 0) {\n        this.$refs.dictForm.resetFields();\n        // 转换null为\"\"\n        for (let attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n        let str = JSON.stringify(v[0]);\n        let data = JSON.parse(str);\n        this.selectNode = data;\n        this.dictForm = data;\n        this.editTitle = data.title + \"(\" + data.type + \")\";\n        // 重新加载表\n        this.searchForm.pageNumber = 1;\n        this.searchForm.pageSize = 10;\n        this.getDataList();\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      let data = this.$refs.tree.getSelectedNodes()[0];\n      if (data) {\n        data.selected = false;\n      }\n      // 取消选择后获取全部数据\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    changeExpand() {\n      this.expand = !this.expand;\n      if (this.expand) {\n        this.expandIcon = \"ios-arrow-back\";\n        this.span = 18;\n      } else {\n        this.expandIcon = \"ios-arrow-forward\";\n        this.span = 23;\n      }\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList() {\n        if (!this.$route.meta.permTypes.includes('other')){\n            this.treeLoading = false;\n            return;\n        }\n      this.loading = true;\n      if (this.selectNode.id) {\n        this.searchForm.dictId = this.selectNode.id;\n      } else {\n        delete this.searchForm.dictId;\n      }\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n      getAllDictDataList(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total\n          if (res.result.content || res.result.totalElements){\n            this.data =  res.result.content;\n            this.total = res.result.totalElements;\n          }\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      // 重新加载数据\n      this.getDataList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getDataList();\n    },\n    showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    refreshDict() {\n      this.getAllDict();\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    handleDropdown(name) {\n      if (name == \"editDcit\") {\n        if (!this.selectNode.id) {\n          this.$Message.warning(\"您还未选择要编辑的字典\");\n          return;\n        }\n        this.editDcit();\n      } else if (name == \"delDcit\") {\n        this.delDcit();\n      } else if (name == \"refreshDcit\") {\n        this.refreshDict();\n      }\n    },\n    addDcit() {\n      this.modalType = 0;\n      this.dictModalTitle = \"添加字典\";\n      this.$refs.dictForm.resetFields();\n      this.dictModalVisible = true;\n    },\n    editDcit() {\n      this.modalType = 1;\n      this.dictModalTitle = \"编辑字典\";\n      this.dictModalVisible = true;\n    },\n    delDcit() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"您还未选择要删除的字典\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        loading: true,\n        content: \"您确认要删除 \" + this.selectNode.title + \" ?\",\n        onOk: () => {\n          // 删除\n          deleteDict(this.selectNode.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.refreshDict();\n            }\n          });\n        }\n      });\n    },\n    add() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"请先选择一个字典类别\");\n        return;\n      }\n      this.modalType = 0;\n      this.modalTitle = \"添加字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    handelSubmitDict() {\n      this.$refs.dictForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.dictForm.id;\n            addDict(this.dictForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getAllDict();\n                this.dictModalVisible = false;\n              }\n            });\n          } else if (this.modalType == 1) {\n            // 编辑\n            editDict(this.dictForm).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getAllDict();\n                this.dictModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    handelSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          if (this.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete this.form.id;\n            this.form.dictId = this.selectNode.id;\n            addDictData(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getDataList();\n                this.modalVisible = false;\n              }\n            });\n          } else if (this.modalType == 1) {\n            // 编辑\n            editDictData(this.form).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getDataList();\n                this.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除 \" + v.title + \" ?\",\n        loading: true,\n        onOk: () => {\n          // 删除\n          deleteData(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          // 批量删除\n          deleteData(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    // 计算高度\n    let height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};\n",null]}