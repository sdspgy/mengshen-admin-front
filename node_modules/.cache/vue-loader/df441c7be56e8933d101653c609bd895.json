{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/server-manage/serverManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/server-manage/serverManage.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getServerByPage,addServer,updateServer,disableServer,enableServer,setDefaultServer,getDefaultServer,getServerListByParentId} from \"@/api/index\";\nexport default {\n    name: \"serverManage\",\n    data(){\n        return{\n            currServer: \"\",\n            loading: true,\n            selectList: [],\n            selectCount: 0,\n            dialogFormVisible: false,\n            viewDialogFormVisible: false,\n            dialogFormTitle: '',\n            isEdit: false,\n            columns: [\n                {\n                    type: \"selection\",\n                    width: 60,\n                    align: \"center\"\n                },\n                {\n                    type: \"index\",\n                    width: 60,\n                    align: \"center\"\n                },\n                {\n                    title: \"服务器名称\",\n                    key: \"name\",\n                    align: \"center\",\n                    width: 150,\n                    sortable: true\n                },\n                {\n                    title: \"服务器地址\",\n                    key: \"address\",\n                    align: \"center\",\n                    width: 150,\n                    sortable: true\n                },\n                {\n                    title: \"端口\",\n                    key: \"port\",\n                    align: \"center\",\n                    width: 100,\n                },\n                {\n                    title: \"状态\",\n                    key: \"state\",\n                    align: \"center\",\n                    width: 100,\n                    sortable: true,\n                    render: (h, params) => {\n                        if (params.row.status == 0) {\n                            return h(\"div\", [h(\"Tag\", {props: {color: \"blue\"}}, \"正常\")]);\n                        } else if (params.row.status == -1) {\n                            return h(\"div\", [h(\"Tag\", {props: {color: \"red\"}}, \"弃用\")]);\n                        }\n                    }\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"createTime\",\n                    align: \"center\",\n                    width: 180,\n                    sortable: true,\n                    sortType: \"desc\"\n                },\n                {\n                    title: \"更新时间\",\n                    key: \"updateTime\",\n                    align: \"center\",\n                    width: 180,\n                    sortable: true\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    align: \"center\",\n                    width: 300,\n                    render: (h, params) => {\n                        let enableOrDisable = \"\";\n                        let showButton = \"\";\n                        let editButton = h(\"Button\", {props: {type: \"primary\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('edit')}, style: {marginRight: \"5px\"}, on: {click: () => {this.openEditDialog(params.row);}}}, \"编辑\");\n                        if (params.row.status == 0) {\n                            enableOrDisable = h(\"Button\", {props: {size: \"small\",disabled:!this.$route.meta.permTypes.includes('disable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.disable(params.row);}}}, \"禁用\");\n                        } else {\n                            enableOrDisable = h(\"Button\", {props: {type: \"success\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('enable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.enable(params.row);}}}, \"启用\");\n                        };\n                        let setDefaultButton = \"\";\n                        if (params.row.parentId == \"0\") {\n                            showButton = h(\"Button\", {props: {type: \"info\", size: \"small\"}, style: {marginRight: \"5px\"}, on: {click: () => {this.openShowDialog(params.row);}}}, \"查看\");\n                            setDefaultButton = h(\"Button\", {props: {type: \"info\", size: \"small\",disabled:this.currServer.id == params.row.id}, style: {marginRight: \"5px\"}, on: {click: () => {this.setDefault(params.row);}}}, \"设为操作服\");\n                        }\n                        return h(\"div\", [showButton,editButton, enableOrDisable, setDefaultButton]);\n                    }\n                }\n            ],\n            data: [],\n            childrenData: [],\n            serverForm: {\n                name: \"\",\n                address: \"\",\n                port:\"\",\n                parentId: \"0\"\n            },\n            viewServer: {},\n            sortColumn: \"createTime\",\n            sortType: \"desc\",\n            pageNumber: 1,\n            pageSize: 10,\n            total: 0,\n        }\n    },\n    methods:{\n        init(){\n            this.getServerByPage();\n            this.getDefault();\n        },\n        getServerByPage(){\n            let params = {\n                pageNumber: this.pageNumber,\n                pageSize: this.pageSize,\n                sort: this.sortColumn,\n                order: this.sort,\n            };\n            this.loading = true;\n          getServerByPage(params).then(res=>{\n              this.loading = false;\n              if (res.success) {\n                  this.data = res.result.records;\n                  this.total = res.result.total\n                  if (res.result.content || res.result.totalElements){\n                      this.data =  res.result.content;\n                      this.total = res.result.totalElements;\n                  }\n              }\n          })\n        },\n        refresh(){\n            if (this.viewDialogFormVisible){\n                this.getServerListByParentId()\n            } else {\n                this.getServerByPage();\n            }\n        },\n        addServer(){\n            if (!this.checkFormData()) {\n                return;\n            }\n            addServer(this.serverForm).then(res=>{\n                if (res.success) {\n                    this.hideAddDialog();\n                    this.refresh();\n                }\n            })\n        },\n        editServer(){\n            if (!this.checkFormData()) {\n                return;\n            }\n            updateServer(this.serverForm).then(res=>{\n                if (res.success) {\n                    this.hideAddDialog();\n                    this.refresh();\n                }\n            })\n        },\n        checkFormData(){\n            if (!this.serverForm.name){\n                this.$Message.error(\"请输入服务器名称\");\n                return false;\n            }\n            if (!this.serverForm.address){\n                this.$Message.error(\"请输入服务器地址\");\n                return false;\n            }\n            if (!this.serverForm.port){\n                this.serverForm.port = 80;\n            }\n            return true;\n        },\n        clearSelectAll() {\n            this.$refs.table.selectAll(false);\n        },\n        changeSelect(e) {\n            this.selectList = e;\n            this.selectCount = e.length;\n        },\n        changePage(v) {\n            this.pageNumber = v;\n            this.getServerByPage();\n            this.clearSelectAll();\n        },\n        changePageSize(v) {\n            this.pageSize = v;\n            this.getServerByPage();\n        },\n        changeSort(e) {\n            this.sortColumn = e.key;\n            this.sortType = e.order;\n            if (e.order == \"normal\") {\n                this.sortType = \"\";\n            }\n            this.getServerByPage();\n        },\n        openAddDialog() {\n            this.dialogFormTitle = '添加服务器';\n            this.serverForm = {};\n            this.serverForm.parentId = \"0\";\n            this.isEdit = false;\n            this.dialogFormVisible = true;\n        },\n        hideAddDialog() {\n            this.dialogFormVisible = false;\n            this.refresh();\n        },\n        openAddDialogWithChildren() {\n            this.openAddDialog();\n            this.dialogFormTitle = '添加子服务器';\n            this.serverForm.parentId = this.viewServer.id;\n        },\n        hideViewDialog() {\n            this.viewDialogFormVisible = false;\n            this.getServerByPage();\n        },\n        openShowDialog(scopeRow){\n            this.viewServer = scopeRow;\n            this.getServerListByParentId();\n            this.viewDialogFormVisible = true;\n        },\n        getServerListByParentId(){\n            getServerListByParentId({parentId:this.viewServer.id}).then(res=>{\n                if (res.success) {\n                    this.childrenData = res.result;\n                }\n            })\n        },\n        openEditDialog(scopeRow) {\n            this.dialogFormTitle = '修改服务器';\n            this.isEdit = true;\n            this.serverForm = scopeRow;\n            this.dialogFormVisible = true;\n        },\n        enable(v) {\n            this.$Modal.confirm({\n                title: \"确认启用\",\n                content: \"您确认要启用服务器 \" + v.name + \" ?\",\n                loading: true,\n                onOk: () => {\n                    enableServer({id:v.id}).then(res => {\n                        this.$Modal.remove();\n                        if (res.success) {\n                            this.$Message.success(\"操作成功\");\n                            this.refresh();\n                        }\n                    });\n                }\n            });\n        },\n        disable(v) {\n            this.$Modal.confirm({\n                title: \"确认禁用\",\n                content: \"您确认要禁用服务器 \" + v.name + \" ?\",\n                loading: true,\n                onOk: () => {\n                    disableServer({id:v.id}).then(res => {\n                        this.$Modal.remove();\n                        if (res.success) {\n                            this.$Message.success(\"操作成功\");\n                            this.refresh();\n                        }\n                    });\n                }\n            });\n        },\n        setDefault(v) {\n            this.$Modal.confirm({\n                title: \"确认设置\",\n                content: \"您确认要 \" + v.name + \" 为默认操作服务器?\",\n                loading: true,\n                onOk: () => {\n                    setDefaultServer({id:v.id}).then(res => {\n                        this.$Modal.remove();\n                        if (res.success) {\n                            this.$Message.success(res.message);\n                        }else {\n                            this.$Message.error(res.message);\n                        }\n                        this.getDefault();\n                    });\n                }\n            });\n        },\n        getDefault(){\n            this.currServer = \"\";\n            getDefaultServer().then(res => {\n                if (res.success) {\n                    this.currServer = res.result;\n                }\n            })\n        }\n    },\n    mounted() {\n        this.init();\n    }\n}\n",null]}