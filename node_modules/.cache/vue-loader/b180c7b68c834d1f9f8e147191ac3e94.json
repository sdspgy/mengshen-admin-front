{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/menu-manage/menuManage.vue?vue&type=template&id=2e3e5088&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/menu-manage/menuManage.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"search\" },\n    [\n      _c(\n        \"Card\",\n        [\n          _c(\n            \"Row\",\n            { staticClass: \"operation\" },\n            [\n              _c(\n                \"Button\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: this.$route.meta.permTypes.includes(\"add\"),\n                      expression: \"this.$route.meta.permTypes.includes('add')\"\n                    }\n                  ],\n                  attrs: { type: \"primary\", icon: \"md-add\" },\n                  on: { click: _vm.addMenu }\n                },\n                [_vm._v(\"添加子节点\")]\n              ),\n              _c(\n                \"Button\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: this.$route.meta.permTypes.includes(\"add\"),\n                      expression: \"this.$route.meta.permTypes.includes('add')\"\n                    }\n                  ],\n                  attrs: { icon: \"md-add\" },\n                  on: { click: _vm.addRootMenu }\n                },\n                [_vm._v(\"添加顶部菜单\")]\n              ),\n              _c(\n                \"Button\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: this.$route.meta.permTypes.includes(\"delete\"),\n                      expression:\n                        \"this.$route.meta.permTypes.includes('delete')\"\n                    }\n                  ],\n                  attrs: { icon: \"md-trash\" },\n                  on: { click: _vm.delAll }\n                },\n                [_vm._v(\"批量删除\")]\n              ),\n              _c(\n                \"Dropdown\",\n                { on: { \"on-click\": _vm.handleDropdown } },\n                [\n                  _c(\n                    \"Button\",\n                    [\n                      _vm._v(\"\\n          更多操作\\n          \"),\n                      _c(\"Icon\", { attrs: { type: \"md-arrow-dropdown\" } })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"DropdownMenu\",\n                    { attrs: { slot: \"list\" }, slot: \"list\" },\n                    [\n                      _c(\n                        \"DropdownItem\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: this.$route.meta.permTypes.includes(\n                                \"view\"\n                              ),\n                              expression:\n                                \"this.$route.meta.permTypes.includes('view')\"\n                            }\n                          ],\n                          attrs: { name: \"refresh\" }\n                        },\n                        [_vm._v(\"刷新\")]\n                      ),\n                      _c(\"DropdownItem\", { attrs: { name: \"expandOne\" } }, [\n                        _vm._v(\"收合所有\")\n                      ]),\n                      _c(\"DropdownItem\", { attrs: { name: \"expandTwo\" } }, [\n                        _vm._v(\"仅展开一级\")\n                      ]),\n                      _c(\"DropdownItem\", { attrs: { name: \"expandThree\" } }, [\n                        _vm._v(\"仅展开两级\")\n                      ]),\n                      _c(\"DropdownItem\", { attrs: { name: \"expandAll\" } }, [\n                        _vm._v(\"展开所有\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"i-switch\",\n                {\n                  staticStyle: { \"margin-left\": \"5px\" },\n                  attrs: { size: \"large\" },\n                  model: {\n                    value: _vm.strict,\n                    callback: function($$v) {\n                      _vm.strict = $$v\n                    },\n                    expression: \"strict\"\n                  }\n                },\n                [\n                  _c(\"span\", { attrs: { slot: \"open\" }, slot: \"open\" }, [\n                    _vm._v(\"级联\")\n                  ]),\n                  _c(\"span\", { attrs: { slot: \"close\" }, slot: \"close\" }, [\n                    _vm._v(\"单选\")\n                  ])\n                ]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"Row\",\n            {\n              staticClass: \"code-row-bg\",\n              attrs: { type: \"flex\", justify: \"start\" }\n            },\n            [\n              _c(\n                \"Col\",\n                { attrs: { span: \"6\" } },\n                [\n                  _c(\"Alert\", { attrs: { \"show-icon\": \"\" } }, [\n                    _vm._v(\"\\n          当前选择编辑：\\n          \"),\n                    _c(\"span\", { staticClass: \"select-title\" }, [\n                      _vm._v(_vm._s(_vm.editTitle))\n                    ]),\n                    _vm.menuForm.id\n                      ? _c(\n                          \"a\",\n                          {\n                            staticClass: \"select-clear\",\n                            on: { click: _vm.cancelEdit }\n                          },\n                          [_vm._v(\"取消选择\")]\n                        )\n                      : _vm._e()\n                  ]),\n                  _c(\"Input\", {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: this.$route.meta.permTypes.includes(\"search\"),\n                        expression:\n                          \"this.$route.meta.permTypes.includes('search')\"\n                      }\n                    ],\n                    attrs: {\n                      suffix: \"ios-search\",\n                      placeholder: \"输入菜单名搜索\",\n                      clearable: \"\"\n                    },\n                    on: { \"on-change\": _vm.search },\n                    model: {\n                      value: _vm.searchKey,\n                      callback: function($$v) {\n                        _vm.searchKey = $$v\n                      },\n                      expression: \"searchKey\"\n                    }\n                  }),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"tree-bar\",\n                      style: { maxHeight: _vm.maxHeight }\n                    },\n                    [\n                      _c(\"Tree\", {\n                        ref: \"tree\",\n                        attrs: {\n                          data: _vm.data,\n                          \"show-checkbox\": \"\",\n                          render: _vm.renderContent,\n                          \"check-strictly\": !_vm.strict\n                        },\n                        on: { \"on-check-change\": _vm.changeSelect }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm.loading\n                    ? _c(\"Spin\", { attrs: { size: \"large\", fix: \"\" } })\n                    : _vm._e()\n                ],\n                1\n              ),\n              _c(\n                \"Col\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\" },\n                  attrs: { span: \"9\" }\n                },\n                [\n                  _c(\n                    \"Form\",\n                    {\n                      ref: \"menuForm\",\n                      attrs: {\n                        model: _vm.menuForm,\n                        \"label-width\": 100,\n                        rules: _vm.menuFormValidate\n                      }\n                    },\n                    [\n                      _c(\n                        \"FormItem\",\n                        { attrs: { label: \"类型\", prop: \"type\" } },\n                        [\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: _vm.menuForm.type == -1,\n                                  expression: \"menuForm.type==-1\"\n                                }\n                              ]\n                            },\n                            [\n                              _c(\"Icon\", {\n                                staticStyle: { margin: \"0 5px 3px 0\" },\n                                attrs: {\n                                  type: \"ios-navigate-outline\",\n                                  size: \"16\"\n                                }\n                              }),\n                              _c(\"span\", [_vm._v(\"顶部菜单\")])\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: _vm.menuForm.type == 0,\n                                  expression: \"menuForm.type==0\"\n                                }\n                              ]\n                            },\n                            [\n                              _c(\"Icon\", {\n                                staticStyle: { margin: \"0 5px 3px 0\" },\n                                attrs: {\n                                  type: \"ios-list-box-outline\",\n                                  size: \"16\"\n                                }\n                              }),\n                              _c(\"span\", [_vm._v(\"页面菜单\")])\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: _vm.menuForm.type == 1,\n                                  expression: \"menuForm.type==1\"\n                                }\n                              ]\n                            },\n                            [\n                              _c(\"Icon\", {\n                                staticStyle: { margin: \"0 5px 3px 0\" },\n                                attrs: {\n                                  type: \"md-radio-button-on\",\n                                  size: \"16\"\n                                }\n                              }),\n                              _c(\"span\", [_vm._v(\"操作按钮\")])\n                            ],\n                            1\n                          )\n                        ]\n                      ),\n                      _vm.menuForm.type == -1 || _vm.menuForm.type == 0\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"名称\", prop: \"title\" } },\n                            [\n                              _c(\"Input\", {\n                                model: {\n                                  value: _vm.menuForm.title,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.menuForm, \"title\", $$v)\n                                  },\n                                  expression: \"menuForm.title\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == 1\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"名称\", prop: \"title\" } },\n                            [\n                              _c(\n                                \"Tooltip\",\n                                {\n                                  attrs: {\n                                    placement: \"right\",\n                                    content: \"操作按钮名称不得重复\"\n                                  }\n                                },\n                                [\n                                  _c(\"Input\", {\n                                    model: {\n                                      value: _vm.menuForm.title,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.menuForm, \"title\", $$v)\n                                      },\n                                      expression: \"menuForm.title\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == 0\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"路径\", prop: \"path\" } },\n                            [\n                              _c(\"Input\", {\n                                model: {\n                                  value: _vm.menuForm.path,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.menuForm, \"path\", $$v)\n                                  },\n                                  expression: \"menuForm.path\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == 1\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"请求路径\", prop: \"path\" } },\n                            [\n                              _c(\n                                \"Tooltip\",\n                                {\n                                  attrs: {\n                                    placement: \"right\",\n                                    \"max-width\": 230,\n                                    transfer: \"\",\n                                    content:\n                                      \"填写后台请求URL，后台将作权限拦截，若无可填写'无'或其他\"\n                                  }\n                                },\n                                [\n                                  _c(\"Input\", {\n                                    model: {\n                                      value: _vm.menuForm.path,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.menuForm, \"path\", $$v)\n                                      },\n                                      expression: \"menuForm.path\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == 1\n                        ? _c(\n                            \"FormItem\",\n                            {\n                              attrs: {\n                                label: \"按钮权限类型\",\n                                prop: \"buttonType\"\n                              }\n                            },\n                            [\n                              _c(\n                                \"Select\",\n                                {\n                                  attrs: {\n                                    placeholder: \"请选择或输入搜索\",\n                                    filterable: \"\",\n                                    clearable: \"\"\n                                  },\n                                  model: {\n                                    value: _vm.menuForm.buttonType,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.menuForm, \"buttonType\", $$v)\n                                    },\n                                    expression: \"menuForm.buttonType\"\n                                  }\n                                },\n                                _vm._l(_vm.dictPermissions, function(item, i) {\n                                  return _c(\n                                    \"Option\",\n                                    { key: i, attrs: { value: item.value } },\n                                    [_vm._v(_vm._s(item.title))]\n                                  )\n                                }),\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == -1\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"英文名\", prop: \"name\" } },\n                            [\n                              _c(\n                                \"Tooltip\",\n                                {\n                                  attrs: {\n                                    placement: \"right\",\n                                    content: \"需唯一\"\n                                  }\n                                },\n                                [\n                                  _c(\"Input\", {\n                                    model: {\n                                      value: _vm.menuForm.name,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.menuForm, \"name\", $$v)\n                                      },\n                                      expression: \"menuForm.name\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == 0\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"路由英文名\", prop: \"name\" } },\n                            [\n                              _c(\n                                \"Tooltip\",\n                                {\n                                  attrs: {\n                                    placement: \"right\",\n                                    content: \"需唯一\"\n                                  }\n                                },\n                                [\n                                  _c(\"Input\", {\n                                    model: {\n                                      value: _vm.menuForm.name,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.menuForm, \"name\", $$v)\n                                      },\n                                      expression: \"menuForm.name\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == -1 || _vm.menuForm.type == 0\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"图标\", prop: \"icon\" } },\n                            [\n                              _c(\"icon-choose\", {\n                                model: {\n                                  value: _vm.menuForm.icon,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.menuForm, \"icon\", $$v)\n                                  },\n                                  expression: \"menuForm.icon\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == 0\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"前端组件\", prop: \"component\" } },\n                            [\n                              _c(\"Input\", {\n                                model: {\n                                  value: _vm.menuForm.component,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.menuForm, \"component\", $$v)\n                                  },\n                                  expression: \"menuForm.component\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _vm.menuForm.type == 0\n                        ? _c(\n                            \"FormItem\",\n                            { attrs: { label: \"第三方网页链接\", prop: \"url\" } },\n                            [\n                              _c(\n                                \"Tooltip\",\n                                {\n                                  attrs: {\n                                    placement: \"right\",\n                                    content:\n                                      \"前端组件需为 sys/monitor/monitor 时生效\"\n                                  }\n                                },\n                                [\n                                  _c(\"Input\", {\n                                    attrs: { placeholder: \"http://\" },\n                                    model: {\n                                      value: _vm.menuForm.url,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.menuForm, \"url\", $$v)\n                                      },\n                                      expression: \"menuForm.url\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _c(\n                        \"FormItem\",\n                        { attrs: { label: \"排序值\", prop: \"sortOrder\" } },\n                        [\n                          _c(\"InputNumber\", {\n                            attrs: { max: 1000, min: 0 },\n                            model: {\n                              value: _vm.menuForm.sortOrder,\n                              callback: function($$v) {\n                                _vm.$set(_vm.menuForm, \"sortOrder\", $$v)\n                              },\n                              expression: \"menuForm.sortOrder\"\n                            }\n                          }),\n                          _c(\n                            \"span\",\n                            { staticStyle: { \"margin-left\": \"5px\" } },\n                            [_vm._v(\"值越小越靠前，支持小数\")]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm.menuForm.level == 1\n                        ? _c(\n                            \"FormItem\",\n                            {\n                              attrs: { label: \"始终显示\", prop: \"showAlways\" }\n                            },\n                            [\n                              _c(\n                                \"i-switch\",\n                                {\n                                  attrs: { size: \"large\" },\n                                  model: {\n                                    value: _vm.menuForm.showAlways,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.menuForm, \"showAlways\", $$v)\n                                    },\n                                    expression: \"menuForm.showAlways\"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"span\",\n                                    { attrs: { slot: \"open\" }, slot: \"open\" },\n                                    [_vm._v(\"启用\")]\n                                  ),\n                                  _c(\n                                    \"span\",\n                                    { attrs: { slot: \"close\" }, slot: \"close\" },\n                                    [_vm._v(\"禁用\")]\n                                  )\n                                ]\n                              ),\n                              _c(\n                                \"Tooltip\",\n                                {\n                                  staticStyle: {\n                                    display: \"inline-block !important\"\n                                  },\n                                  attrs: {\n                                    content:\n                                      \"当设为不始终显示时，一级菜单下仅有一个子级菜单只会显示该子级菜单，避免用户多次点击\",\n                                    placement: \"right\",\n                                    transfer: \"\",\n                                    \"max-width\": \"280\"\n                                  }\n                                },\n                                [\n                                  _c(\"Icon\", {\n                                    staticStyle: {\n                                      \"margin-left\": \"10px\",\n                                      cursor: \"pointer\"\n                                    },\n                                    attrs: {\n                                      type: \"md-help-circle\",\n                                      size: \"20\",\n                                      color: \"#c5c5c5\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        : _vm._e(),\n                      _c(\n                        \"FormItem\",\n                        { attrs: { label: \"是否启用\", prop: \"status\" } },\n                        [\n                          _c(\n                            \"i-switch\",\n                            {\n                              attrs: {\n                                size: \"large\",\n                                \"true-value\": 0,\n                                \"false-value\": -1\n                              },\n                              model: {\n                                value: _vm.menuForm.status,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.menuForm, \"status\", $$v)\n                                },\n                                expression: \"menuForm.status\"\n                              }\n                            },\n                            [\n                              _c(\n                                \"span\",\n                                { attrs: { slot: \"open\" }, slot: \"open\" },\n                                [_vm._v(\"启用\")]\n                              ),\n                              _c(\n                                \"span\",\n                                { attrs: { slot: \"close\" }, slot: \"close\" },\n                                [_vm._v(\"禁用\")]\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"Form-item\",\n                        [\n                          _c(\n                            \"Button\",\n                            {\n                              staticStyle: { \"margin-right\": \"5px\" },\n                              attrs: {\n                                loading: _vm.submitLoading,\n                                type: \"primary\",\n                                icon: \"ios-create-outline\",\n                                disabled: !this.$route.meta.permTypes.includes(\n                                  \"edit\"\n                                )\n                              },\n                              on: { click: _vm.submitEdit }\n                            },\n                            [_vm._v(\"修改并保存\")]\n                          ),\n                          _c(\"Button\", { on: { click: _vm.handleReset } }, [\n                            _vm._v(\"重置\")\n                          ])\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"Modal\",\n        {\n          attrs: {\n            draggable: \"\",\n            title: _vm.modalTitle,\n            \"mask-closable\": false,\n            width: 500,\n            styles: { top: \"30px\" }\n          },\n          model: {\n            value: _vm.menuModalVisible,\n            callback: function($$v) {\n              _vm.menuModalVisible = $$v\n            },\n            expression: \"menuModalVisible\"\n          }\n        },\n        [\n          _c(\n            \"Form\",\n            {\n              ref: \"menuFormAdd\",\n              attrs: {\n                model: _vm.menuFormAdd,\n                \"label-width\": 100,\n                rules: _vm.menuFormValidate\n              }\n            },\n            [\n              _vm.showParent\n                ? _c(\n                    \"div\",\n                    [\n                      _c(\"FormItem\", { attrs: { label: \"上级节点：\" } }, [\n                        _vm._v(_vm._s(_vm.parentTitle))\n                      ])\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\"FormItem\", { attrs: { label: \"类型\", prop: \"type\" } }, [\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.menuFormAdd.type == -1,\n                        expression: \"menuFormAdd.type==-1\"\n                      }\n                    ]\n                  },\n                  [\n                    _c(\"Icon\", {\n                      staticStyle: { margin: \"0 5px 3px 0\" },\n                      attrs: { type: \"ios-navigate-outline\", size: \"16\" }\n                    }),\n                    _c(\"span\", [_vm._v(\"顶部菜单\")])\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.menuFormAdd.type == 0,\n                        expression: \"menuFormAdd.type==0\"\n                      }\n                    ]\n                  },\n                  [\n                    _c(\"Icon\", {\n                      staticStyle: { margin: \"0 5px 3px 0\" },\n                      attrs: { type: \"ios-list-box-outline\", size: \"16\" }\n                    }),\n                    _c(\"span\", [_vm._v(\"页面菜单\")])\n                  ],\n                  1\n                ),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.menuFormAdd.type == 1,\n                        expression: \"menuFormAdd.type==1\"\n                      }\n                    ]\n                  },\n                  [\n                    _c(\"Icon\", {\n                      staticStyle: { margin: \"0 5px 3px 0\" },\n                      attrs: { type: \"md-radio-button-on\", size: \"16\" }\n                    }),\n                    _c(\"span\", [_vm._v(\"操作按钮\")])\n                  ],\n                  1\n                )\n              ]),\n              _vm.menuFormAdd.type == -1 || _vm.menuFormAdd.type == 0\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"名称\", prop: \"title\" } },\n                    [\n                      _c(\"Input\", {\n                        model: {\n                          value: _vm.menuFormAdd.title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.menuFormAdd, \"title\", $$v)\n                          },\n                          expression: \"menuFormAdd.title\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"名称\", prop: \"title\" } },\n                    [\n                      _c(\n                        \"Tooltip\",\n                        {\n                          attrs: {\n                            placement: \"right\",\n                            content: \"操作按钮名称不得重复\"\n                          }\n                        },\n                        [\n                          _c(\"Input\", {\n                            staticStyle: { width: \"368px\" },\n                            model: {\n                              value: _vm.menuFormAdd.title,\n                              callback: function($$v) {\n                                _vm.$set(_vm.menuFormAdd, \"title\", $$v)\n                              },\n                              expression: \"menuFormAdd.title\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == 0\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"路径\", prop: \"path\" } },\n                    [\n                      _c(\"Input\", {\n                        model: {\n                          value: _vm.menuFormAdd.path,\n                          callback: function($$v) {\n                            _vm.$set(_vm.menuFormAdd, \"path\", $$v)\n                          },\n                          expression: \"menuFormAdd.path\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"请求路径\", prop: \"path\" } },\n                    [\n                      _c(\n                        \"Tooltip\",\n                        {\n                          attrs: {\n                            placement: \"right\",\n                            \"max-width\": 230,\n                            transfer: \"\",\n                            content:\n                              \"填写后台请求URL，后台将作权限拦截，若无可填写'无'或其他\"\n                          }\n                        },\n                        [\n                          _c(\"Input\", {\n                            staticStyle: { width: \"368px\" },\n                            model: {\n                              value: _vm.menuFormAdd.path,\n                              callback: function($$v) {\n                                _vm.$set(_vm.menuFormAdd, \"path\", $$v)\n                              },\n                              expression: \"menuFormAdd.path\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"按钮权限类型\", prop: \"buttonType\" } },\n                    [\n                      _c(\n                        \"Select\",\n                        {\n                          attrs: {\n                            placeholder: \"请选择或输入搜索\",\n                            filterable: \"\",\n                            clearable: \"\"\n                          },\n                          model: {\n                            value: _vm.menuFormAdd.buttonType,\n                            callback: function($$v) {\n                              _vm.$set(_vm.menuFormAdd, \"buttonType\", $$v)\n                            },\n                            expression: \"menuFormAdd.buttonType\"\n                          }\n                        },\n                        _vm._l(_vm.dictPermissions, function(item, i) {\n                          return _c(\n                            \"Option\",\n                            { key: i, attrs: { value: item.value } },\n                            [_vm._v(_vm._s(item.title))]\n                          )\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == -1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"英文名\", prop: \"name\" } },\n                    [\n                      _c(\n                        \"Tooltip\",\n                        { attrs: { placement: \"right\", content: \"需唯一\" } },\n                        [\n                          _c(\"Input\", {\n                            model: {\n                              value: _vm.menuFormAdd.name,\n                              callback: function($$v) {\n                                _vm.$set(_vm.menuFormAdd, \"name\", $$v)\n                              },\n                              expression: \"menuFormAdd.name\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == 0\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"路由英文名\", prop: \"name\" } },\n                    [\n                      _c(\n                        \"Tooltip\",\n                        { attrs: { placement: \"right\", content: \"需唯一\" } },\n                        [\n                          _c(\"Input\", {\n                            staticStyle: { width: \"368px\" },\n                            model: {\n                              value: _vm.menuFormAdd.name,\n                              callback: function($$v) {\n                                _vm.$set(_vm.menuFormAdd, \"name\", $$v)\n                              },\n                              expression: \"menuFormAdd.name\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == -1 || _vm.menuFormAdd.type == 0\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"图标\", prop: \"icon\" } },\n                    [\n                      _c(\"icon-choose\", {\n                        model: {\n                          value: _vm.menuFormAdd.icon,\n                          callback: function($$v) {\n                            _vm.$set(_vm.menuFormAdd, \"icon\", $$v)\n                          },\n                          expression: \"menuFormAdd.icon\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == 0\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"前端组件\", prop: \"component\" } },\n                    [\n                      _c(\"Input\", {\n                        model: {\n                          value: _vm.menuFormAdd.component,\n                          callback: function($$v) {\n                            _vm.$set(_vm.menuFormAdd, \"component\", $$v)\n                          },\n                          expression: \"menuFormAdd.component\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.menuFormAdd.type == 0\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"第三方网页链接\", prop: \"url\" } },\n                    [\n                      _c(\n                        \"Tooltip\",\n                        {\n                          attrs: {\n                            placement: \"right\",\n                            content: \"前端组件需为 sys/monitor/monitor 时生效\"\n                          }\n                        },\n                        [\n                          _c(\"Input\", {\n                            staticStyle: { width: \"368px\" },\n                            attrs: { placeholder: \"http://\" },\n                            model: {\n                              value: _vm.menuFormAdd.url,\n                              callback: function($$v) {\n                                _vm.$set(_vm.menuFormAdd, \"url\", $$v)\n                              },\n                              expression: \"menuFormAdd.url\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"排序值\", prop: \"sortOrder\" } },\n                [\n                  _c(\"InputNumber\", {\n                    attrs: { max: 1000, min: 0 },\n                    model: {\n                      value: _vm.menuFormAdd.sortOrder,\n                      callback: function($$v) {\n                        _vm.$set(_vm.menuFormAdd, \"sortOrder\", $$v)\n                      },\n                      expression: \"menuFormAdd.sortOrder\"\n                    }\n                  }),\n                  _c(\"span\", { staticStyle: { \"margin-left\": \"5px\" } }, [\n                    _vm._v(\"值越小越靠前，支持小数\")\n                  ])\n                ],\n                1\n              ),\n              _vm.menuFormAdd.level == 1\n                ? _c(\n                    \"FormItem\",\n                    { attrs: { label: \"始终显示\", prop: \"showAlways\" } },\n                    [\n                      _c(\n                        \"i-switch\",\n                        {\n                          attrs: { size: \"large\" },\n                          model: {\n                            value: _vm.menuFormAdd.showAlways,\n                            callback: function($$v) {\n                              _vm.$set(_vm.menuFormAdd, \"showAlways\", $$v)\n                            },\n                            expression: \"menuFormAdd.showAlways\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"span\",\n                            { attrs: { slot: \"open\" }, slot: \"open\" },\n                            [_vm._v(\"启用\")]\n                          ),\n                          _c(\n                            \"span\",\n                            { attrs: { slot: \"close\" }, slot: \"close\" },\n                            [_vm._v(\"禁用\")]\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"Tooltip\",\n                        {\n                          staticStyle: { display: \"inline-block !important\" },\n                          attrs: {\n                            content:\n                              \"当设为不始终显示时，一级菜单下仅有一个子级菜单只会显示该子级菜单，避免用户多次点击\",\n                            placement: \"right\",\n                            transfer: \"\",\n                            \"max-width\": \"280\"\n                          }\n                        },\n                        [\n                          _c(\"Icon\", {\n                            staticStyle: {\n                              \"margin-left\": \"10px\",\n                              cursor: \"pointer\"\n                            },\n                            attrs: {\n                              type: \"md-help-circle\",\n                              size: \"20\",\n                              color: \"#c5c5c5\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\n                \"FormItem\",\n                { attrs: { label: \"是否启用\", prop: \"status\" } },\n                [\n                  _c(\n                    \"i-switch\",\n                    {\n                      attrs: {\n                        size: \"large\",\n                        \"true-value\": 0,\n                        \"false-value\": -1\n                      },\n                      model: {\n                        value: _vm.menuFormAdd.status,\n                        callback: function($$v) {\n                          _vm.$set(_vm.menuFormAdd, \"status\", $$v)\n                        },\n                        expression: \"menuFormAdd.status\"\n                      }\n                    },\n                    [\n                      _c(\"span\", { attrs: { slot: \"open\" }, slot: \"open\" }, [\n                        _vm._v(\"启用\")\n                      ]),\n                      _c(\"span\", { attrs: { slot: \"close\" }, slot: \"close\" }, [\n                        _vm._v(\"禁用\")\n                      ])\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            { attrs: { slot: \"footer\" }, slot: \"footer\" },\n            [\n              _c(\n                \"Button\",\n                { attrs: { type: \"text\" }, on: { click: _vm.cancelAdd } },\n                [_vm._v(\"取消\")]\n              ),\n              _c(\n                \"Button\",\n                {\n                  attrs: { type: \"primary\", loading: _vm.submitLoading },\n                  on: { click: _vm.submitAdd }\n                },\n                [_vm._v(\"提交\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}