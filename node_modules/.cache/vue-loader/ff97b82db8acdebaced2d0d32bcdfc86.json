{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/role-manage/roleManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/role-manage/roleManage.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getRoleList,\n  getAllPermissionList,\n  addRole,\n  editRole,\n  deleteRole,\n  setDefaultRole,\n  editRolePerm,\n} from \"@/api/index\";\nimport util from \"@/libs/util.js\";\nexport default {\n  name: \"role-manage\",\n  data() {\n    return {\n      openLevel: \"0\",\n      loading: true,\n      treeLoading: true,\n      depTreeLoading: true,\n      submitPermLoading: false,\n      submitDepLoading: false,\n      searchKey: \"\",\n      sortColumn: \"createTime\",\n      sortType: \"desc\",\n      modalType: 0,\n      roleModalVisible: false,\n      permModalVisible: false,\n      depModalVisible: false,\n      modalTitle: \"\",\n      roleForm: {\n        name: \"\",\n        description: \"\"\n      },\n      roleFormValidate: {\n        name: [{ required: true, message: \"角色名称不能为空\", trigger: \"blur\" }]\n      },\n      submitLoading: false,\n      selectList: [],\n      selectCount: 0,\n      columns: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\"\n        },\n        {\n          title: \"角色名称\",\n          key: \"name\",\n          width: 150,\n          sortable: true\n        },\n        {\n          title: \"备注\",\n          key: \"description\",\n          minWidth: 190,\n          sortable: true\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          width: 160,\n          sortable: true,\n          sortType: \"desc\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\",\n          width: 160,\n          sortable: true\n        },\n        {\n          title: \"是否设置为注册用户默认角色\",\n          key: \"defaultRole\",\n          align: \"center\",\n          width: 180,\n          render: (h, params) => {\n            if (params.row.defaultRole) {\n              return h(\"div\", [\n                h(\n                  \"Button\",\n                  {\n                    props: {\n                      type: \"success\",\n                      size: \"small\",\n                      disabled:!this.$route.meta.permTypes.includes('setDefault')\n                    },\n                    style: {\n                      marginRight: \"5px\"\n                    },\n                    on: {\n                      click: () => {\n                        this.cancelDefault(params.row);\n                      }\n                    }\n                  },\n                  \"取消默认\"\n                )\n              ]);\n            } else {\n              return h(\"div\", [\n                h(\n                  \"Button\",\n                  {\n                    props: {\n                      type: \"info\",\n                      size: \"small\",\n                      disabled:!this.$route.meta.permTypes.includes('setDefault')\n                    },\n                    style: {\n                      marginRight: \"5px\"\n                    },\n                    on: {\n                      click: () => {\n                        this.setDefault(params.row);\n                      }\n                    }\n                  },\n                  \"设为默认\"\n                )\n              ]);\n            }\n          }\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          align: \"center\",\n          fixed: \"right\",\n          width: 300,\n          render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"warning\",\n                    size: \"small\",\n                    disabled:!this.$route.meta.permTypes.includes('editPerm')\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.editPerm(params.row);\n                    }\n                  }\n                },\n                \"菜单权限\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    size: \"small\",\n                    disabled:!this.$route.meta.permTypes.includes('edit')\n                  },\n                  style: {\n                    marginRight: \"5px\"\n                  },\n                  on: {\n                    click: () => {\n                      this.edit(params.row);\n                    }\n                  }\n                },\n                \"编辑\"\n              ),\n              h(\n                \"Button\",\n                {\n                  props: {\n                    type: \"error\",\n                    size: \"small\",\n                    disabled:!this.$route.meta.permTypes.includes('delete')\n                  },\n                  on: {\n                    click: () => {\n                      this.remove(params.row);\n                    }\n                  }\n                },\n                \"删除\"\n              )\n            ]);\n          }\n        }\n      ],\n      data: [],\n      pageNumber: 1,\n      pageSize: 10,\n      total: 0,\n      permData: [],\n      editRolePermId: \"\",\n      selectAllFlag: false,\n      depData: [],\n      dataType: 0,\n    };\n  },\n  methods: {\n    init() {\n      this.getRoleList();\n      // 获取所有菜单权限树\n      this.getPermList();\n    },\n    renderContent(h, { root, node, data }) {\n      let icon = \"\";\n      if (data.level == 0) {\n        icon = \"ios-navigate\";\n      } else if (data.level == 1) {\n        icon = \"md-list-box\";\n      } else if (data.level == 2) {\n        icon = \"md-list\";\n      } else if (data.level == 3) {\n        icon = \"md-radio-button-on\";\n      } else {\n        icon = \"md-radio-button-off\";\n      }\n      return h(\n        \"span\",\n        {\n          style: {\n            display: \"inline-block\",\n            cursor: \"pointer\"\n          },\n          on: {\n            click: () => {\n              data.checked = !data.checked;\n            }\n          }\n        },\n        [\n          h(\"span\", [\n            h(\"Icon\", {\n              props: {\n                type: icon,\n                size: \"16\"\n              },\n              style: {\n                \"margin-right\": \"8px\",\n                \"margin-bottom\": \"3px\"\n              }\n            }),\n            h(\"span\", { class: \"ivu-tree-title\" }, data.title)\n          ])\n        ]\n      );\n    },\n    changePage(v) {\n      this.pageNumber = v;\n      this.getRoleList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.pageSize = v;\n      this.getRoleList();\n    },\n    changeSort(e) {\n      this.sortColumn = e.key;\n      this.sortType = e.order;\n      if (e.order == \"normal\") {\n        this.sortType = \"\";\n      }\n      this.getRoleList();\n    },\n    getRoleList() {\n      if (!this.$route.meta.permTypes.includes('view')){\n        this.loading = false;\n        return;\n      }\n      this.loading = true;\n      let params = {\n        pageNumber: this.pageNumber,\n        pageSize: this.pageSize,\n        sort: this.sortColumn,\n        order: this.sort\n      };\n      getRoleList(params).then(res => {\n        this.loading = false;\n        if (res.success) {\n          this.data = res.result.records;\n          this.total = res.result.total\n          if (res.result.content || res.result.totalElements){\n            this.data =  res.result.content;\n            this.total = res.result.totalElements;\n          }\n        }\n      });\n    },\n    getPermList() {\n      if (!this.$route.meta.permTypes.includes('view')){\n        return;\n      }\n      this.treeLoading = true;\n      getAllPermissionList().then(res => {\n        this.treeLoading = false;\n        if (res.success) {\n          this.deleteDisableNode(res.result);\n          this.permData = res.result;\n        }\n      });\n    },\n    // 递归标记禁用节点\n    deleteDisableNode(permData) {\n      let that = this;\n      permData.forEach(function(e) {\n        if (e.status == -1) {\n          e.title = \"[已禁用] \" + e.title;\n          e.disabled = true;\n        }\n        if (e.children && e.children.length > 0) {\n          that.deleteDisableNode(e.children);\n        }\n      });\n    },\n    cancelRole() {\n      this.roleModalVisible = false;\n    },\n    submitRole() {\n      this.$refs.roleForm.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加\n            this.submitLoading = true;\n            addRole({name:this.roleForm.name,description:this.roleForm.description}).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getRoleList();\n                this.roleModalVisible = false;\n              }\n            });\n          } else {\n            this.submitLoading = true;\n            editRole({id:this.roleForm.id,name:this.roleForm.name,description:this.roleForm.description}).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getRoleList();\n                this.roleModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    addRole() {\n      this.modalType = 0;\n      this.modalTitle = \"添加角色\";\n      this.$refs.roleForm.resetFields();\n      delete this.roleForm.id;\n      this.roleModalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑角色\";\n      this.$refs.roleForm.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let roleInfo = JSON.parse(str);\n      this.roleForm = roleInfo;\n      this.roleModalVisible = true;\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除角色 \" + v.name + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteRole(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    setDefault(v) {\n      this.$Modal.confirm({\n        title: \"确认设置\",\n        content: \"您确认要设置所选的 \" + v.name + \" 为注册用户默认角色?\",\n        loading: true,\n        onOk: () => {\n          let params = {\n            id: v.id,\n            isDefault: true\n          };\n          setDefaultRole(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    cancelDefault(v) {\n      this.$Modal.confirm({\n        title: \"确认取消\",\n        content: \"您确认要取消所选的 \" + v.name + \" 角色为默认?\",\n        loading: true,\n        onOk: () => {\n          let params = {\n            id: v.id,\n            isDefault: false\n          };\n          setDefaultRole(params).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    changeSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteRole(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.clearSelectAll();\n              this.getRoleList();\n            }\n          });\n        }\n      });\n    },\n    editPerm(v) {\n      this.editRolePermId = v.id;\n      this.modalTitle = \"分配 \" + v.name + \" 的菜单权限\";\n      // 匹配勾选\n      let rolePerms = v.permissions;\n      // 递归判断子节点\n      this.checkPermTree(this.permData, rolePerms);\n      this.permModalVisible = true;\n    },\n    // 递归判断子节点\n    checkPermTree(permData, rolePerms) {\n      let that = this;\n      permData.forEach(function(p) {\n        if (that.hasPerm(p, rolePerms) && p.status != -1) {\n          p.checked = true;\n        } else {\n          p.checked = false;\n        }\n        if (p.children && p.children.length > 0) {\n          that.checkPermTree(p.children, rolePerms);\n        }\n      });\n    },\n    // 判断角色拥有的权限节点勾选\n    hasPerm(p, rolePerms) {\n      let flag = false;\n      for (let i = 0; i < rolePerms.length; i++) {\n        if (p.id == rolePerms[i].permissionId) {\n          flag = true;\n          break;\n        }\n      }\n      if (flag) {\n        return true;\n      }\n      return false;\n    },\n    // 全选反选\n    selectTreeAll() {\n      this.selectAllFlag = !this.selectAllFlag;\n      let select = this.selectAllFlag;\n      this.selectedTreeAll(this.permData, select);\n    },\n    // 递归全选节点\n    selectedTreeAll(permData, select) {\n      let that = this;\n      permData.forEach(function(e) {\n        e.checked = select;\n        if (e.children && e.children.length > 0) {\n          that.selectedTreeAll(e.children, select);\n        }\n      });\n    },\n    submitPermEdit() {\n      this.submitPermLoading = true;\n      let permIds = \"\";\n      let selectedNodes = this.$refs.tree.getCheckedNodes();\n      selectedNodes.forEach(function(e) {\n        permIds += e.id + \",\";\n      });\n      permIds = permIds.substring(0, permIds.length - 1);\n      editRolePerm({\n        roleId: this.editRolePermId,\n        permIds: permIds\n      }).then(res => {\n        this.submitPermLoading = false;\n        if (res.success) {\n          this.$Message.success(\"操作成功\");\n          // 标记重新获取菜单数据\n          this.$store.commit(\"setAdded\", false);\n          util.initRouter(this);\n          this.getRoleList();\n          this.permModalVisible = false;\n        }\n      });\n    },\n    cancelPermEdit() {\n      this.permModalVisible = false;\n    },\n    changeOpen(v) {\n      if (v == \"0\") {\n        this.permData.forEach(e => {\n          e.expand = true;\n          if (e.children && e.children.length > 0) {\n            e.children.forEach(c => {\n              c.expand = true;\n              if (c.children && c.children.length > 0) {\n                c.children.forEach(function(b) {\n                  b.expand = true;\n                });\n              }\n            });\n          }\n        });\n      } else if (v == \"1\") {\n        this.permData.forEach(e => {\n          e.expand = false;\n          if (e.children && e.children.length > 0) {\n            e.children.forEach(c => {\n              c.expand = false;\n              if (c.children && c.children.length > 0) {\n                c.children.forEach(function(b) {\n                  b.expand = false;\n                });\n              }\n            });\n          }\n        });\n      } else if (v == \"2\") {\n        this.permData.forEach(e => {\n          e.expand = true;\n          if (e.children && e.children.length > 0) {\n            e.children.forEach(c => {\n              c.expand = false;\n              if (c.children && c.children.length > 0) {\n                c.children.forEach(function(b) {\n                  b.expand = false;\n                });\n              }\n            });\n          }\n        });\n      } else if (v == \"3\") {\n        this.permData.forEach(e => {\n          e.expand = true;\n          if (e.children && e.children.length > 0) {\n            e.children.forEach(c => {\n              c.expand = true;\n              if (c.children && c.children.length > 0) {\n                c.children.forEach(function(b) {\n                  b.expand = false;\n                });\n              }\n            });\n          }\n        });\n      }\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n",null]}