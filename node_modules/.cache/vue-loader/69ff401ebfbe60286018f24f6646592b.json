{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/rbac/upload-pic-thumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/rbac/upload-pic-thumb.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { uploadFile } from \"@/api/index\";\nexport default {\n  name: \"uploadPicThumb\",\n  props: {\n    value: Object,\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    limit: {\n      type: Number,\n      default: 10\n    }\n  },\n  data() {\n    return {\n      accessToken: {},\n      uploadFileUrl: uploadFile,\n      uploadList: [],\n      viewImage: false,\n      imgUrl: \"\"\n    };\n  },\n  methods: {\n    init() {\n      this.accessToken = {\n        accessToken: this.getStore(\"accessToken\")\n      };\n    },\n    handleView(imgUrl) {\n      this.imgUrl = imgUrl;\n      this.viewImage = true;\n    },\n    handleRemove(file) {\n      const uploadList = this.uploadList;\n      this.uploadList.splice(uploadList.indexOf(file), 1);\n      this.returnValue();\n    },\n    handleSuccess(res, file) {\n      if (res.success) {\n        file.url = res.result;\n        // 单张图片处理\n        if (!this.multiple && this.uploadList.length > 0) {\n          // 删除第一张\n          this.uploadList.splice(0, 1);\n        }\n        this.uploadList.push(file);\n        // 返回组件值\n        this.returnValue();\n      } else {\n        this.$Message.error(res.message);\n      }\n    },\n    handleError(error, file, fileList) {\n      this.$Message.error(error.toString());\n    },\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: \"不支持的文件格式\",\n        desc:\n          \"所选文件‘ \" +\n          file.name +\n          \" ’格式不正确, 请选择 .jpg .jpeg .png .gif图片格式文件\"\n      });\n    },\n    handleMaxSize(file) {\n      this.$Notice.warning({\n        title: \"文件大小过大\",\n        desc: \"所选文件‘ \" + file.name + \" ’大小过大, 不得超过 5M.\"\n      });\n    },\n    handleBeforeUpload() {\n      if(this.multiple&&this.uploadList.length>=this.limit){\n        this.$Message.warning(\"最多只能上传\"+this.limit+\"张图片\");\n        return false;\n      }\n      return true;\n    },\n    returnValue() {\n      if (!this.uploadList || this.uploadList.length < 1) {\n        if (!this.multiple) {\n          this.$emit(\"on-change\", \"\");\n        } else {\n          this.$emit(\"on-change\", []);\n        }\n        return;\n      }\n      if (!this.multiple) {\n        // 单张\n        let v = this.uploadList[0].url;\n        this.$emit(\"on-change\", v);\n      } else {\n        let v = [];\n        this.uploadList.forEach(e => {\n          v.push(e.url);\n        });\n        this.$emit(\"on-change\", v);\n      }\n    },\n    setData(v) {\n      if(this.multiple&&v.length>this.limit){\n        this.$Message.warning(\"设置图片数据失败，最多只能设置\"+this.limit+\"张图片\");\n        return;\n      }\n      if (typeof v == \"string\") {\n        this.uploadList = [];\n        let item = {\n          url: v,\n          status: \"finished\"\n        };\n        this.uploadList.push(item);\n      } else if (typeof v == \"object\") {\n        this.uploadList = [];\n        v.forEach(e => {\n          let item = {\n            url: e,\n            status: \"finished\"\n          };\n          this.uploadList.push(item);\n        });\n      }\n      this.returnValue();\n    }\n  },\n  mounted() {\n    this.init();\n  }\n};\n",null]}