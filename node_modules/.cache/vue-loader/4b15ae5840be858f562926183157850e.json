{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/user-manage/userManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/user-manage/userManage.vue","mtime":1577936875615},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getUserListData,\n  getAllRoleList,\n  addUser,\n  editUser,\n  enableUser,\n  disableUser,\n  deleteUser,\n  getAllUserData,\n  resetUserPass\n} from \"@/api/index\";\nimport expandRow from \"./expand.vue\";\nimport { validateMobile, validatePassword } from \"@/libs/validate\";\nimport uploadPicInput from \"../../my-components/rbac/upload-pic-input\";\nimport circleLoading from \"../../my-components/circle-loading.vue\";\nimport checkPassword from \"@/views/my-components/rbac/check-password\";\nexport default {\n  name: \"user-manage\",\n  components: {\n    circleLoading,\n    expandRow,\n    uploadPicInput,\n    checkPassword\n  },\n  data() {\n    return {\n      loading: true,\n      operationLoading: false,\n      loadingExport: true,\n      modalExportAll: false,\n      drop: false,\n      dropDownContent: \"展开\",\n      dropDownIcon: \"ios-arrow-down\",\n      selectCount: 0,\n      selectList: [],\n      dataDep: [],\n      searchKey: \"\",\n      searchForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      selectDate: null,\n      modalType: 0,\n      userModalVisible: false,\n      modalTitle: \"\",\n      userForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"保密\",\n        type: 0,\n        avatar: \"\",\n        roles: [],\n      },\n      userRoles: [],\n      roleList: [],\n      errorPass: \"\",\n      /** 表单验证，未使用 */\n      userFormValidate: {\n        username: [\n          { required: true, message: \"账号不能为空\", trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\n          { validator: validateMobile, trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"请输入邮箱地址\" },\n          { type: \"email\", message: \"邮箱格式不正确\" }\n        ]\n      },\n      submitLoading: false,\n      columns: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          type: \"expand\",\n          width: 50,\n          fixed: \"left\",\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row\n              }\n            });\n          }\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          title: \"用户名\",\n          key: \"username\",\n          minWidth: 145,\n          sortable: true,\n          fixed: \"left\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\",\n          width: 80,\n          align: \"center\",\n          render: (h, params) => {\n            return h(\"Avatar\", {\n              props: {\n                src: params.row.avatar\n              }\n            });\n          }\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\",\n          width: 115,\n          sortable: true\n        },\n        {\n          title: \"邮箱\",\n          key: \"email\",\n          width: 180,\n          sortable: true\n        },\n        {\n          title: \"性别\",\n          key: \"sex\",\n          width: 70,\n          align: \"center\"\n        },\n        {\n          title: \"用户类型\",\n          key: \"type\",\n          align: \"center\",\n          width: 100,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.type == 1) {\n              re = \"管理员\";\n            } else if (params.row.type == 0) {\n              re = \"普通用户\";\n            }\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 140,\n          render: (h, params) => {\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"正常启用\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"禁用\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"正常启用\",\n              value: 0\n            },\n            {\n              label: \"禁用\",\n              value: -1\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value == 0) {\n              return row.status == 0;\n            } else if (value == -1) {\n              return row.status == -1;\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          sortable: true,\n          sortType: \"desc\",\n          width: 150\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 200,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            let enableOrDisable = \"\";\n            let editButton = h(\"Button\", {props: {type: \"primary\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('edit')}, style: {marginRight: \"5px\"}, on: {click: () => {this.edit(params.row);}}}, \"编辑\");\n            if (params.row.status == 0) {\n              enableOrDisable = h(\"Button\", {props: {size: \"small\",disabled:!this.$route.meta.permTypes.includes('disable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.disable(params.row);}}}, \"禁用\");\n            } else {\n              enableOrDisable = h(\"Button\", {props: {type: \"success\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('enable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.enable(params.row);}}}, \"启用\");\n            };\n            let deleteButton =  h(\"Button\", {props: {type: \"error\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('delete')}, on: {click: () => {this.remove(params.row);}}}, \"删除\");\n            return h(\"div\", [editButton, enableOrDisable, deleteButton]);\n          }\n        }\n      ],\n      exportColumns: [\n        {\n          title: \"用户名\",\n          key: \"username\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\"\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\"\n        },\n        {\n          title: \"邮箱\",\n          key: \"email\"\n        },\n        {\n          title: \"性别\",\n          key: \"sex\"\n        },\n        {\n          title: \"用户类型\",\n          key: \"type\"\n        },\n        {\n          title: \"状态\",\n          key: \"status\"\n        },\n        {\n          title: \"删除标志\",\n          key: \"delFlag\"\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\"\n        }\n      ],\n      data: [],\n      exportData: [],\n      total: 0,\n      dictSex: this.$store.state.dict.sex\n    };\n  },\n  methods: {\n    init() {\n      this.getUserList();\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getUserList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getUserList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getUserList() {\n      if (!this.$route.meta.permTypes.includes('view')){\n        this.loading = false;\n        return;\n      }\n      // 多条件搜索用户列表\n      this.loading = true;\n      // 避免后台默认值\n      if (!this.searchForm.type) {\n        this.searchForm.type = \"\";\n      }\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n      getUserListData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n            this.data = res.result.records;\n            this.total = res.result.total\n            if (res.result.content || res.result.totalElements){\n                this.data =  res.result.content;\n                this.total = res.result.totalElements;\n            }\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getUserList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.selectDep = [];\n      // 重新加载数据\n      this.getUserList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getUserList();\n    },\n    getRoleList() {\n      getAllRoleList().then(res => {\n        if (res.success) {\n          this.roleList = res.result;\n        }\n      });\n    },\n    handleDropdown(name) {\n      if (name == \"refresh\") {\n        this.getUserList();\n      } else if (name == \"reset\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要重置密码的用户\");\n          return;\n        }\n        this.$refs.checkPass.show();\n      } else if (name == \"exportData\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要导出的数据\");\n          return;\n        }\n        this.$Modal.confirm({\n          title: \"确认导出\",\n          content: \"您确认要导出所选 \" + this.selectCount + \" 条数据?\",\n          onOk: () => {\n            this.$refs.exportTable.exportCsv({\n              filename: \"用户数据\"\n            });\n          }\n        });\n      } else if (name == \"exportAll\") {\n        this.modalExportAll = true;\n      }\n    },\n    exportAll() {\n      getAllUserData().then(res => {\n        this.modalExportAll = false;\n        if (res.success) {\n          this.exportData = res.result;\n          setTimeout(() => {\n            this.$refs.exportTable.exportCsv({\n              filename: \"用户全部数据\"\n            });\n          }, 1000);\n        }\n      });\n    },\n    resetPass() {\n      this.$Modal.confirm({\n        title: \"确认重置\",\n        content:\n          \"您确认要重置所选的 \" +\n          this.selectCount +\n          \" 条用户数据密码为【123456】?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          resetUserPass({ ids: ids }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    submitUser() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加用户 避免编辑后传入id\n            delete this.userForm.id;\n            delete this.userForm.status;\n            if (\n              this.userForm.password == \"\" ||\n              this.userForm.password == undefined\n            ) {\n              this.errorPass = \"密码不能为空\";\n              return;\n            }\n            if (this.userForm.password.length < 6) {\n              this.errorPass = \"密码长度不得少于6位\";\n              return;\n            }\n            this.submitLoading = true;\n            addUser({\n                username: this.userForm.username,\n                password:this.userForm.password,\n                mobile: this.userForm.mobile,\n                email: this.userForm.email,\n                sex: this.userForm.sex,\n                type: this.userForm.type,\n                avatar: this.userForm.avatar,\n                roles0: this.userForm.roles,\n            }).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getUserList();\n                this.userModalVisible = false;\n              }\n            });\n          } else {\n            // 编辑\n            this.submitLoading = true;\n            editUser({\n                id:this.userForm.id,\n                username: this.userForm.username,\n                mobile: this.userForm.mobile,\n                email: this.userForm.email,\n                sex: this.userForm.sex,\n                type: this.userForm.type,\n                avatar: this.userForm.avatar,\n                status:this.userForm.status,\n                roles0: this.userForm.roles,\n            }).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getUserList();\n                this.userModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加用户\";\n      this.$refs.userForm.resetFields();\n      this.userModalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑用户\";\n      this.$refs.userForm.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.userForm = data;\n      let selectRolesId = [];\n      this.userForm.roles.forEach(function(e) {\n        selectRolesId.push(e.id);\n      });\n      this.userForm.roles = selectRolesId;\n      this.userModalVisible = true;\n    },\n    enable(v) {\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        content: \"您确认要启用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          enableUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    disable(v) {\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        content: \"您确认要禁用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          disableUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n      this.drop = !this.drop;\n    },\n    showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteUser(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.clearSelectAll();\n              this.getUserList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n    this.getRoleList();\n  }\n};\n",{"version":3,"sources":["userManage.vue"],"names":[],"mappingsfile":"userManage.vue","sourceRoot":"src/views/sys/user-manage","sourcesContent":["<style lang=\"less\">\n@import \"./userManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Row>\n      <Col>\n        <Card>\n          <Row>\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\" v-show=\"this.$route.meta.permTypes.includes('view')\">\n              <Form-item label=\"用户名称\" prop=\"username\">\n                <Input\n                  type=\"text\"\n                  v-model=\"searchForm.username\"\n                  clearable\n                  placeholder=\"请输入用户名\"\n                  style=\"width: 200px\"\n                />\n              </Form-item>\n              <span v-if=\"drop\">\n                <Form-item label=\"手机号\" prop=\"mobile\">\n                  <Input\n                    type=\"text\"\n                    v-model=\"searchForm.mobile\"\n                    clearable\n                    placeholder=\"请输入手机号\"\n                    style=\"width: 200px\"\n                  />\n                </Form-item>\n                <Form-item label=\"邮箱\" prop=\"email\">\n                  <Input\n                    type=\"text\"\n                    v-model=\"searchForm.email\"\n                    clearable\n                    placeholder=\"请输入邮箱\"\n                    style=\"width: 200px\"\n                  />\n                </Form-item>\n                <Form-item label=\"性别\" prop=\"sex\">\n                  <Select v-model=\"searchForm.sex\" placeholder=\"请选择\" clearable style=\"width: 200px\">\n                    <Option v-for=\"(item, i) in dictSex\" :key=\"i\" :value=\"item.value\">{{item.title}}</Option>\n                  </Select>\n                </Form-item>\n                <Form-item label=\"用户类型\" prop=\"type\">\n                  <Select\n                    v-model=\"searchForm.type\"\n                    placeholder=\"请选择\"\n                    clearable\n                    style=\"width: 200px\"\n                  >\n                    <Option value=\"0\">普通用户</Option>\n                    <Option value=\"1\">管理员</Option>\n                  </Select>\n                </Form-item>\n                <Form-item label=\"用户状态\" prop=\"status\">\n                  <Select\n                    v-model=\"searchForm.status\"\n                    placeholder=\"请选择\"\n                    clearable\n                    style=\"width: 200px\"\n                  >\n                    <Option value=\"0\">正常</Option>\n                    <Option value=\"-1\">禁用</Option>\n                  </Select>\n                </Form-item>\n                <Form-item label=\"创建时间\">\n                  <DatePicker\n                    v-model=\"selectDate\"\n                    type=\"daterange\"\n                    format=\"yyyy-MM-dd\"\n                    clearable\n                    @on-change=\"selectDateRange\"\n                    placeholder=\"选择起始时间\"\n                    style=\"width: 200px\"\n                  ></DatePicker>\n                </Form-item>\n              </span>\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n                <Button @click=\"handleReset\">重置</Button>\n                <a class=\"drop-down\" @click=\"dropDown\">\n                  {{dropDownContent}}\n                  <Icon :type=\"dropDownIcon\"></Icon>\n                </a>\n              </Form-item>\n            </Form>\n          </Row>\n          <Row class=\"operation\">\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\" v-show=\"this.$route.meta.permTypes.includes('add')\">添加用户</Button>\n            <Button @click=\"delAll\" icon=\"md-trash\" v-show=\"this.$route.meta.permTypes.includes('delete')\">批量删除</Button>\n            <Dropdown @on-click=\"handleDropdown\">\n              <Button>\n                更多操作\n                <Icon type=\"md-arrow-dropdown\" />\n              </Button>\n              <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"refresh\">刷新</DropdownItem>\n                <DropdownItem name=\"reset\" v-show=\"this.$route.meta.permTypes.includes('other')\">重置用户密码</DropdownItem>\n                <DropdownItem name=\"exportData\">导出所选数据</DropdownItem>\n                <DropdownItem name=\"exportAll\">导出全部数据</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n            <circleLoading v-if=\"operationLoading\" />\n          </Row>\n          <Row>\n            <Alert show-icon>\n              已选择\n              <span class=\"select-count\">{{selectCount}}</span> 项\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n            </Alert>\n          </Row>\n          <Row>\n            <Table\n              :loading=\"loading\"\n              border\n              :columns=\"columns\"\n              :data=\"data\"\n              sortable=\"custom\"\n              @on-sort-change=\"changeSort\"\n              @on-selection-change=\"showSelect\"\n              ref=\"table\"\n            ></Table>\n            <Table\n              :columns=\"exportColumns\"\n              :data=\"exportData\"\n              ref=\"exportTable\"\n              style=\"display:none\"\n            ></Table>\n          </Row>\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\n            <Page\n              :current=\"searchForm.pageNumber\"\n              :total=\"total\"\n              :page-size=\"searchForm.pageSize\"\n              @on-change=\"changePage\"\n              @on-page-size-change=\"changePageSize\"\n              :page-size-opts=\"[10,20,50]\"\n              size=\"small\"\n              show-total\n              show-elevator\n              show-sizer\n            ></Page>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n    <Modal\n      :title=\"modalTitle\"\n      v-model=\"userModalVisible\"\n      :mask-closable=\"false\"\n      :width=\"500\"\n      :styles=\"{top: '30px'}\"\n    >\n      <Form ref=\"userForm\" :model=\"userForm\" :label-width=\"70\">\n        <FormItem label=\"用户名\" prop=\"username\">\n          <Input v-model=\"userForm.username\" autocomplete=\"off\" />\n        </FormItem>\n        <FormItem label=\"密码\" prop=\"password\" v-if=\"modalType==0\" :error=\"errorPass\">\n          <Input type=\"password\" v-model=\"userForm.password\" autocomplete=\"off\" />\n        </FormItem>\n        <FormItem label=\"邮箱\" prop=\"email\">\n          <Input v-model=\"userForm.email\" />\n        </FormItem>\n        <FormItem label=\"手机号\" prop=\"mobile\">\n          <Input v-model=\"userForm.mobile\" />\n        </FormItem>\n        <FormItem label=\"性别\" prop=\"sex\">\n          <RadioGroup v-model=\"userForm.sex\">\n            <Radio v-for=\"(item, i) in dictSex\" :key=\"i\" :label=\"item.value\">{{item.title}}</Radio>\n          </RadioGroup>\n        </FormItem>\n        <Form-item label=\"头像\" prop=\"avatar\">\n          <upload-pic-input v-model=\"userForm.avatar\"></upload-pic-input>\n        </Form-item>\n        <FormItem label=\"用户类型\" prop=\"type\">\n          <Select v-model=\"userForm.type\" placeholder=\"请选择\">\n            <Option :value=\"0\">普通用户</Option>\n            <Option :value=\"1\">管理员</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"角色分配\" prop=\"roles\">\n          <Select v-model=\"userForm.roles\" multiple>\n            <Option v-for=\"item in roleList\" :value=\"item.id\" :key=\"item.id\" :label=\"item.name\">\n              <span style=\"margin-right:10px;\">{{ item.name }}</span>\n              <span style=\"color:#ccc;\">{{ item.description }}</span>\n            </Option>\n          </Select>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"userModalVisible = false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitUser\">提交</Button>\n      </div>\n    </Modal>\n    <Modal v-model=\"modalExportAll\" title=\"确认导出\" :loading=\"loadingExport\" @on-ok=\"exportAll\">\n      <p>您确认要导出全部 {{total}} 条数据？</p>\n    </Modal>\n\n    <check-password ref=\"checkPass\" @on-success=\"resetPass\" />\n  </div>\n</template>\n\n<script>\nimport {\n  getUserListData,\n  getAllRoleList,\n  addUser,\n  editUser,\n  enableUser,\n  disableUser,\n  deleteUser,\n  getAllUserData,\n  resetUserPass\n} from \"@/api/index\";\nimport expandRow from \"./expand.vue\";\nimport { validateMobile, validatePassword } from \"@/libs/validate\";\nimport uploadPicInput from \"../../my-components/rbac/upload-pic-input\";\nimport circleLoading from \"../../my-components/circle-loading.vue\";\nimport checkPassword from \"@/views/my-components/rbac/check-password\";\nexport default {\n  name: \"user-manage\",\n  components: {\n    circleLoading,\n    expandRow,\n    uploadPicInput,\n    checkPassword\n  },\n  data() {\n    return {\n      loading: true,\n      operationLoading: false,\n      loadingExport: true,\n      modalExportAll: false,\n      drop: false,\n      dropDownContent: \"展开\",\n      dropDownIcon: \"ios-arrow-down\",\n      selectCount: 0,\n      selectList: [],\n      dataDep: [],\n      searchKey: \"\",\n      searchForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      selectDate: null,\n      modalType: 0,\n      userModalVisible: false,\n      modalTitle: \"\",\n      userForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"保密\",\n        type: 0,\n        avatar: \"\",\n        roles: [],\n      },\n      userRoles: [],\n      roleList: [],\n      errorPass: \"\",\n      /** 表单验证，未使用 */\n      userFormValidate: {\n        username: [\n          { required: true, message: \"账号不能为空\", trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\n          { validator: validateMobile, trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"请输入邮箱地址\" },\n          { type: \"email\", message: \"邮箱格式不正确\" }\n        ]\n      },\n      submitLoading: false,\n      columns: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          type: \"expand\",\n          width: 50,\n          fixed: \"left\",\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row\n              }\n            });\n          }\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          title: \"用户名\",\n          key: \"username\",\n          minWidth: 145,\n          sortable: true,\n          fixed: \"left\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\",\n          width: 80,\n          align: \"center\",\n          render: (h, params) => {\n            return h(\"Avatar\", {\n              props: {\n                src: params.row.avatar\n              }\n            });\n          }\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\",\n          width: 115,\n          sortable: true\n        },\n        {\n          title: \"邮箱\",\n          key: \"email\",\n          width: 180,\n          sortable: true\n        },\n        {\n          title: \"性别\",\n          key: \"sex\",\n          width: 70,\n          align: \"center\"\n        },\n        {\n          title: \"用户类型\",\n          key: \"type\",\n          align: \"center\",\n          width: 100,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.type == 1) {\n              re = \"管理员\";\n            } else if (params.row.type == 0) {\n              re = \"普通用户\";\n            }\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 140,\n          render: (h, params) => {\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"正常启用\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"禁用\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"正常启用\",\n              value: 0\n            },\n            {\n              label: \"禁用\",\n              value: -1\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value == 0) {\n              return row.status == 0;\n            } else if (value == -1) {\n              return row.status == -1;\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          sortable: true,\n          sortType: \"desc\",\n          width: 150\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 200,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            let enableOrDisable = \"\";\n            let editButton = h(\"Button\", {props: {type: \"primary\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('edit')}, style: {marginRight: \"5px\"}, on: {click: () => {this.edit(params.row);}}}, \"编辑\");\n            if (params.row.status == 0) {\n              enableOrDisable = h(\"Button\", {props: {size: \"small\",disabled:!this.$route.meta.permTypes.includes('disable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.disable(params.row);}}}, \"禁用\");\n            } else {\n              enableOrDisable = h(\"Button\", {props: {type: \"success\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('enable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.enable(params.row);}}}, \"启用\");\n            };\n            let deleteButton =  h(\"Button\", {props: {type: \"error\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('delete')}, on: {click: () => {this.remove(params.row);}}}, \"删除\");\n            return h(\"div\", [editButton, enableOrDisable, deleteButton]);\n          }\n        }\n      ],\n      exportColumns: [\n        {\n          title: \"用户名\",\n          key: \"username\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\"\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\"\n        },\n        {\n          title: \"邮箱\",\n          key: \"email\"\n        },\n        {\n          title: \"性别\",\n          key: \"sex\"\n        },\n        {\n          title: \"用户类型\",\n          key: \"type\"\n        },\n        {\n          title: \"状态\",\n          key: \"status\"\n        },\n        {\n          title: \"删除标志\",\n          key: \"delFlag\"\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\"\n        }\n      ],\n      data: [],\n      exportData: [],\n      total: 0,\n      dictSex: this.$store.state.dict.sex\n    };\n  },\n  methods: {\n    init() {\n      this.getUserList();\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getUserList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getUserList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getUserList() {\n      if (!this.$route.meta.permTypes.includes('view')){\n        this.loading = false;\n        return;\n      }\n      // 多条件搜索用户列表\n      this.loading = true;\n      // 避免后台默认值\n      if (!this.searchForm.type) {\n        this.searchForm.type = \"\";\n      }\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n      getUserListData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n            this.data = res.result.records;\n            this.total = res.result.total\n            if (res.result.content || res.result.totalElements){\n                this.data =  res.result.content;\n                this.total = res.result.totalElements;\n            }\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getUserList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.selectDep = [];\n      // 重新加载数据\n      this.getUserList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getUserList();\n    },\n    getRoleList() {\n      getAllRoleList().then(res => {\n        if (res.success) {\n          this.roleList = res.result;\n        }\n      });\n    },\n    handleDropdown(name) {\n      if (name == \"refresh\") {\n        this.getUserList();\n      } else if (name == \"reset\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要重置密码的用户\");\n          return;\n        }\n        this.$refs.checkPass.show();\n      } else if (name == \"exportData\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要导出的数据\");\n          return;\n        }\n        this.$Modal.confirm({\n          title: \"确认导出\",\n          content: \"您确认要导出所选 \" + this.selectCount + \" 条数据?\",\n          onOk: () => {\n            this.$refs.exportTable.exportCsv({\n              filename: \"用户数据\"\n            });\n          }\n        });\n      } else if (name == \"exportAll\") {\n        this.modalExportAll = true;\n      }\n    },\n    exportAll() {\n      getAllUserData().then(res => {\n        this.modalExportAll = false;\n        if (res.success) {\n          this.exportData = res.result;\n          setTimeout(() => {\n            this.$refs.exportTable.exportCsv({\n              filename: \"用户全部数据\"\n            });\n          }, 1000);\n        }\n      });\n    },\n    resetPass() {\n      this.$Modal.confirm({\n        title: \"确认重置\",\n        content:\n          \"您确认要重置所选的 \" +\n          this.selectCount +\n          \" 条用户数据密码为【123456】?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          resetUserPass({ ids: ids }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    submitUser() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加用户 避免编辑后传入id\n            delete this.userForm.id;\n            delete this.userForm.status;\n            if (\n              this.userForm.password == \"\" ||\n              this.userForm.password == undefined\n            ) {\n              this.errorPass = \"密码不能为空\";\n              return;\n            }\n            if (this.userForm.password.length < 6) {\n              this.errorPass = \"密码长度不得少于6位\";\n              return;\n            }\n            this.submitLoading = true;\n            addUser({\n                username: this.userForm.username,\n                password:this.userForm.password,\n                mobile: this.userForm.mobile,\n                email: this.userForm.email,\n                sex: this.userForm.sex,\n                type: this.userForm.type,\n                avatar: this.userForm.avatar,\n                roles0: this.userForm.roles,\n            }).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getUserList();\n                this.userModalVisible = false;\n              }\n            });\n          } else {\n            // 编辑\n            this.submitLoading = true;\n            editUser({\n                id:this.userForm.id,\n                username: this.userForm.username,\n                mobile: this.userForm.mobile,\n                email: this.userForm.email,\n                sex: this.userForm.sex,\n                type: this.userForm.type,\n                avatar: this.userForm.avatar,\n                status:this.userForm.status,\n                roles0: this.userForm.roles,\n            }).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getUserList();\n                this.userModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加用户\";\n      this.$refs.userForm.resetFields();\n      this.userModalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑用户\";\n      this.$refs.userForm.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.userForm = data;\n      let selectRolesId = [];\n      this.userForm.roles.forEach(function(e) {\n        selectRolesId.push(e.id);\n      });\n      this.userForm.roles = selectRolesId;\n      this.userModalVisible = true;\n    },\n    enable(v) {\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        content: \"您确认要启用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          enableUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    disable(v) {\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        content: \"您确认要禁用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          disableUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n      this.drop = !this.drop;\n    },\n    showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteUser(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.clearSelectAll();\n              this.getUserList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n    this.getRoleList();\n  }\n};\n</script>\n"]}]}