{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/main-components/tags-page-opened.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/main-components/tags-page-opened.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n@import \"../main.less\";\n",{"version":3,"sources":["tags-page-opened.vue"],"names":[],"mappings":";AACA","file":"tags-page-opened.vue","sourceRoot":"src/views/main-components","sourcesContent":["<style lang=\"less\">\n@import \"../main.less\";\n</style>\n\n<template>\n    <div ref=\"scrollCon\" @DOMMouseScroll=\"handlescroll\" @mousewheel=\"handlescroll\" class=\"tags-outer-scroll-con\">\n        <div class=\"close-all-tag-con\">\n            <Dropdown transfer @on-click=\"handleTagsOption\">\n                <Button size=\"small\" type=\"primary\">\n                        {{ $t('tagOption') }}\n                        <Icon type=\"md-arrow-dropdown\"></Icon>\n                    </Button>\n                <DropdownMenu slot=\"list\">\n                    <DropdownItem name=\"clearAll\">{{ $t('closeAll') }}</DropdownItem>\n                    <DropdownItem name=\"clearOthers\">{{ $t('closeOthers') }}</DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n        </div>\n        <div ref=\"scrollBody\" class=\"tags-inner-scroll-body\" :style=\"{left: tagBodyLeft + 'px'}\">\n            <transition-group name=\"taglist-moving-animation\">\n                <Tag type=\"dot\" v-for=\"(item, index) in pageTagsList\" ref=\"tagsPageOpened\" :key=\"item.name\" :name=\"item.name\" @on-close=\"closePage\" @click.native=\"linkTo(item)\" :closable=\"item.name=='home_index'?false:true\" :color=\"item.children?(item.children[0].name==currentPageName?'primary':'default'):(item.name==currentPageName?'primary':'default')\">{{ itemTitle(item) }}</Tag>\n            </transition-group>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport VueI18n from \"vue-i18n\";\nVue.use(VueI18n);\nexport default {\n  name: \"tagsPageOpened\",\n  data() {\n    return {\n      currentPageName: this.$route.name,\n      tagBodyLeft: 0,\n      refsTag: [],\n      tagsCount: 1\n    };\n  },\n  props: {\n    pageTagsList: Array,\n    beforePush: {\n      type: Function,\n      default: item => {\n        return true;\n      }\n    }\n  },\n  computed: {\n    title() {\n      return this.$store.state.app.currentTitle;\n    },\n    tagsList() {\n      return this.$store.state.app.pageOpenedList;\n    }\n  },\n  methods: {\n    itemTitle(item) {\n      if (typeof item.title == \"object\") {\n        return this.$t(item.title.i18n);\n      } else {\n        return item.title;\n      }\n    },\n    closePage(event, name) {\n      let pageOpenedList = this.$store.state.app.pageOpenedList;\n      let lastPageObj = pageOpenedList[0];\n      if (this.currentPageName == name) {\n        let len = pageOpenedList.length;\n        for (let i = 1; i < len; i++) {\n          if (pageOpenedList[i].name == name) {\n            if (i < len - 1) {\n              lastPageObj = pageOpenedList[i + 1];\n            } else {\n              lastPageObj = pageOpenedList[i - 1];\n            }\n            break;\n          }\n        }\n      } else {\n        let tagWidth = event.target.parentNode.offsetWidth;\n        this.tagBodyLeft = Math.min(this.tagBodyLeft + tagWidth, 0);\n      }\n      this.$store.commit(\"removeTag\", name);\n      this.$store.commit(\"closePage\", name);\n      pageOpenedList = this.$store.state.app.pageOpenedList;\n      localStorage.pageOpenedList = JSON.stringify(pageOpenedList);\n      if (this.currentPageName == name) {\n        this.linkTo(lastPageObj);\n      }\n    },\n    linkTo(item) {\n      let routerObj = {};\n      routerObj.name = item.name;\n      if (item.argu) {\n        routerObj.params = item.argu;\n      }\n      if (item.query) {\n        routerObj.query = item.query;\n      }\n      if (this.beforePush(item)) {\n        this.$router.push(routerObj);\n      }\n    },\n    handlescroll(e) {\n      var type = e.type;\n      let delta = 0;\n      if (type == \"DOMMouseScroll\" || type == \"mousewheel\") {\n        delta = e.wheelDelta ? e.wheelDelta : -(e.detail || 0) * 40;\n      }\n      let left = 0;\n      if (delta > 0) {\n        left = Math.min(0, this.tagBodyLeft + delta);\n      } else {\n        if (\n          this.$refs.scrollCon.offsetWidth - 100 <\n          this.$refs.scrollBody.offsetWidth\n        ) {\n          if (\n            this.tagBodyLeft <\n            -(\n              this.$refs.scrollBody.offsetWidth -\n              this.$refs.scrollCon.offsetWidth +\n              100\n            )\n          ) {\n            left = this.tagBodyLeft;\n          } else {\n            left = Math.max(\n              this.tagBodyLeft + delta,\n              this.$refs.scrollCon.offsetWidth -\n                this.$refs.scrollBody.offsetWidth -\n                100\n            );\n          }\n        } else {\n          this.tagBodyLeft = 0;\n        }\n      }\n      this.tagBodyLeft = left;\n    },\n    handleTagsOption(type) {\n      if (type == \"clearAll\") {\n        this.$store.commit(\"clearAllTags\");\n        this.$router.push({\n          name: \"home_index\"\n        });\n      } else {\n        this.$store.commit(\"clearOtherTags\", this);\n      }\n      this.tagBodyLeft = 0;\n    },\n    moveToView(tag) {\n      if (tag.offsetLeft < -this.tagBodyLeft) {\n        // 标签在可视区域左侧\n        this.tagBodyLeft = -tag.offsetLeft + 10;\n      } else if (\n        tag.offsetLeft + 10 > -this.tagBodyLeft &&\n        tag.offsetLeft + tag.offsetWidth <\n          -this.tagBodyLeft + this.$refs.scrollCon.offsetWidth - 100\n      ) {\n        // 标签在可视区域\n        this.tagBodyLeft = Math.min(\n          0,\n          this.$refs.scrollCon.offsetWidth -\n            100 -\n            tag.offsetWidth -\n            tag.offsetLeft -\n            20\n        );\n      } else {\n        // 标签在可视区域右侧\n        this.tagBodyLeft = -(\n          tag.offsetLeft -\n          (this.$refs.scrollCon.offsetWidth - 100 - tag.offsetWidth) +\n          20\n        );\n      }\n    }\n  },\n  mounted() {\n    this.refsTag = this.$refs.tagsPageOpened;\n    setTimeout(() => {\n      this.refsTag.forEach((item, index) => {\n        if (this.$route.name == item.name) {\n          let tag = this.refsTag[index].$el;\n          this.moveToView(tag);\n        }\n      });\n    }, 1); // 这里不设定时器就会有偏移bug\n    this.tagsCount = this.tagsList.length;\n  },\n  watch: {\n    $route(to) {\n      this.currentPageName = to.name;\n      this.$nextTick(() => {\n        this.refsTag.forEach((item, index) => {\n          if (to.name == item.name) {\n            let tag = this.refsTag[index].$el;\n            this.moveToView(tag);\n          }\n        });\n      });\n      this.tagsCount = this.tagsList.length;\n    }\n  }\n};\n</script>\n"]}]}