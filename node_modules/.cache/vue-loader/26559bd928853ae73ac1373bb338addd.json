{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/main-components/shrinkable-menu/components/sidebarMenuShrink.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/main-components/shrinkable-menu/components/sidebarMenuShrink.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'sidebarMenuShrink',\n    props: {\n        menuList: {\n            type: Array\n        },\n        iconColor: {\n            type: String,\n            default: 'white'\n        },\n        menuTheme: {\n            type: String,\n            default: 'dark'\n        }\n    },\n    methods: {\n        changeMenu (active) {\n            this.$emit('on-change', active);\n        },\n        itemTitle (item) {\n            if (typeof item.title == 'object') {\n                return this.$t(item.title.i18n);\n            } else {\n                return item.title;\n            }\n        }\n    }\n};\n",{"version":3,"sources":["sidebarMenuShrink.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sidebarMenuShrink.vue","sourceRoot":"src/views/main-components/shrinkable-menu/components","sourcesContent":["<template>\n    <div>\n        <template v-for=\"(item, index) in menuList\">\n            <div style=\"text-align: center;\" :key=\"index\">\n                <Dropdown transfer v-if=\"item.children.length !== 1\" placement=\"right-start\" :key=\"index\" @on-click=\"changeMenu\">\n                    <Button style=\"width: 70px;margin-left: -5px;padding:10px 0;\" type=\"text\">\n                        <Icon :size=\"20\" :color=\"iconColor\" :type=\"item.icon\"></Icon>\n                    </Button>\n                    <DropdownMenu style=\"width: 200px;\" slot=\"list\">\n                        <template v-for=\"(child, i) in item.children\">\n                            <DropdownItem :name=\"child.name\" :key=\"i\"><Icon :type=\"child.icon\"></Icon><span style=\"padding-left:10px;\">{{ itemTitle(child) }}</span></DropdownItem>\n                        </template>\n                    </DropdownMenu>\n                </Dropdown>\n                <Dropdown transfer v-else placement=\"right-start\" :key=\"index\" @on-click=\"changeMenu\">\n                    <Button @click=\"changeMenu(item.children[0].name)\" style=\"width: 70px;margin-left: -5px;padding:10px 0;\" type=\"text\">\n                        <Icon :size=\"20\" :color=\"iconColor\" :type=\"item.children[0].icon || item.icon\"></Icon>\n                    </Button>\n                    <DropdownMenu style=\"width: 200px;\" slot=\"list\">\n                        <DropdownItem :name=\"item.children[0].name\" :key=\"'d' + index\"><Icon :type=\"item.children[0].icon || item.icon\"></Icon><span style=\"padding-left:10px;\">{{ itemTitle(item.children[0]) }}</span></DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n        </template>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'sidebarMenuShrink',\n    props: {\n        menuList: {\n            type: Array\n        },\n        iconColor: {\n            type: String,\n            default: 'white'\n        },\n        menuTheme: {\n            type: String,\n            default: 'dark'\n        }\n    },\n    methods: {\n        changeMenu (active) {\n            this.$emit('on-change', active);\n        },\n        itemTitle (item) {\n            if (typeof item.title == 'object') {\n                return this.$t(item.title.i18n);\n            } else {\n                return item.title;\n            }\n        }\n    }\n};\n</script>\n"]}]}