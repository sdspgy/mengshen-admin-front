{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/game/activity/activity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/game/activity/activity.vue","mtime":1574332719565},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {showActs, changeAct} from \"@/api/index\";\nimport util from \"../../../libs/util\";\nimport BreadcrumbNav from \"../../main-components/breadcrumb-nav\";\nexport default {\n    name: \"showActs\",\n    components: {BreadcrumbNav},\n    mounted() {\n        this.showActs();\n    },\n    data() {\n        return {\n            columns:[\n                {type: \"index\", width: 60, align: \"center\"},\n                {title: \"activityId\", key: \"activityId\", width: 100,align: \"center\",render: (h, params) => {return h(\"div\", params.row.activityId);}},\n                {title: \"templateId\", key: \"templateId\", width: 100,align: \"center\",render: (h, params) => {return h(\"div\", params.row.templateId);}},\n                {title: \"status\", key: \"status\", width: 200,align: \"center\"},\n                {title: \"openTime\", key: \"openTime\", width: 200,align: \"center\", render: (h, params) => {return h(\"div\", util.Time2DefaultFormat(params.row.openTime))}},\n                {title: \"endTime\", key: \"endTime\", width: 200,align: \"center\",render: (h, params) => {return h(\"div\", util.Time2DefaultFormat(params.row.endTime))}},\n                 {title: \"操作\", key: \"action\", width: 200, align: \"center\",\n                    render: (h, params) => {\n                        return h(\"div\", [\n                            h(\"Button\", {props: {type: \"info\", size: \"small\"}, on: {click: () => {this.openEditDialog(params.row);}}}, \"编辑\"),\n                            h(\"Button\", {props: {type: \"error\", size: \"small\"}, on: {click: () => {this.deleteNotice(params.row.id);}}}, \"删除\")]);\n                    }\n                }\n                ], \n            \n            activityId: '',\n            templateId: '',\n            activityDuration: [],\n            activities:[],\n            dialogFormVisible: false,\n             disabledDate: {\n                disabledDate(date) {\n                    return date.getTime() < new Date(new Date().toLocaleDateString()).getTime();\n                }\n            }\n        }\n    },\n    methods: {\n        showActs() {\n            showActs().then(res=>{\n                if (res.status === 200) {\n                    console.log(res.data.activities)\n                    this.activities = res.data.activities;\n                }\n            })\n        },\n        changeAct() {\n            changeAct({activityId: this.activityId, openTime: this.activityDuration[0].getTime(), endTime: this.activityDuration[1].getTime()}).then(res=>{\n                if (res.status === 200) {\n                    console.log(res.data.activities)\n                    this.activities = res.data.activities;\n                }else{\n                   this.$Message.error(res.data); \n                }\n\n                this.hideDialog();\n            })\n           \n        },\n        hideDialog() {\n            this.dialogFormVisible = false;\n        },\n        openEditDialog(scopeRow) {\n            this.dialogFormVisible = true;\n            this.activityId = scopeRow.activityId;\n            this.templateId = scopeRow.templateId;\n            this.activityDuration.push(new Date(scopeRow.openTime));\n            this.activityDuration.push(new Date(scopeRow.endTime));\n        },\n    },\n\n}\n",{"version":3,"sources":["activity.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"activity.vue","sourceRoot":"src/views/game/activity","sourcesContent":["<template>\n<div>\n  <Row>\n    <Table :columns=\"columns\" :data=\"activities\" ref=\"table\"></Table>\n  </Row>\n  <Modal title=修改数据 v-model=\"dialogFormVisible\" :mask-closable=\"false\" width=\"50%\">\n    <Form :label-width=\"120\">\n      <FormItem label=\"活动id\">\n        <Input v-model=\"activityId\" autocomplete=\"off\" :disabled=\"true\"/>\n      </FormItem>\n      <FormItem label=\"活动xmlid\">\n        <Input v-model=\"templateId\" autocomplete=\"off\" :disabled=\"true\"/>\n      </FormItem>\n      <FormItem label=\"活动起止时间\">\n            <DatePicker v-model=\"activityDuration\"\n                        type=\"datetimerange\"\n                        format=\"yyyy-MM-dd HH:mm:ss\"\n                        placeholder=\"请选择时间日期\"\n                        style=\"width: 50%;max-width: 350px\"\n                        :options=\"disabledDate\">\n            </DatePicker>\n      </FormItem>\n    </Form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <Button @click=\"hideDialog()\">取 消</Button>\n      <Button type=\"primary\" @click=\"changeAct()\">确 定</Button>\n    </div>\n  </Modal>\n</div>\n</template>\n\n<script>\n    import {showActs, changeAct} from \"@/api/index\";\n    import util from \"../../../libs/util\";\n    import BreadcrumbNav from \"../../main-components/breadcrumb-nav\";\n    export default {\n        name: \"showActs\",\n        components: {BreadcrumbNav},\n        mounted() {\n            this.showActs();\n        },\n        data() {\n            return {\n                columns:[\n                    {type: \"index\", width: 60, align: \"center\"},\n                    {title: \"activityId\", key: \"activityId\", width: 100,align: \"center\",render: (h, params) => {return h(\"div\", params.row.activityId);}},\n                    {title: \"templateId\", key: \"templateId\", width: 100,align: \"center\",render: (h, params) => {return h(\"div\", params.row.templateId);}},\n                    {title: \"status\", key: \"status\", width: 200,align: \"center\"},\n                    {title: \"openTime\", key: \"openTime\", width: 200,align: \"center\", render: (h, params) => {return h(\"div\", util.Time2DefaultFormat(params.row.openTime))}},\n                    {title: \"endTime\", key: \"endTime\", width: 200,align: \"center\",render: (h, params) => {return h(\"div\", util.Time2DefaultFormat(params.row.endTime))}},\n                     {title: \"操作\", key: \"action\", width: 200, align: \"center\",\n                        render: (h, params) => {\n                            return h(\"div\", [\n                                h(\"Button\", {props: {type: \"info\", size: \"small\"}, on: {click: () => {this.openEditDialog(params.row);}}}, \"编辑\"),\n                                h(\"Button\", {props: {type: \"error\", size: \"small\"}, on: {click: () => {this.deleteNotice(params.row.id);}}}, \"删除\")]);\n                        }\n                    }\n                    ], \n                \n                activityId: '',\n                templateId: '',\n                activityDuration: [],\n                activities:[],\n                dialogFormVisible: false,\n                 disabledDate: {\n                    disabledDate(date) {\n                        return date.getTime() < new Date(new Date().toLocaleDateString()).getTime();\n                    }\n                }\n            }\n        },\n        methods: {\n            showActs() {\n                showActs().then(res=>{\n                    if (res.status === 200) {\n                        console.log(res.data.activities)\n                        this.activities = res.data.activities;\n                    }\n                })\n            },\n            changeAct() {\n                changeAct({activityId: this.activityId, openTime: this.activityDuration[0].getTime(), endTime: this.activityDuration[1].getTime()}).then(res=>{\n                    if (res.status === 200) {\n                        console.log(res.data.activities)\n                        this.activities = res.data.activities;\n                    }else{\n                       this.$Message.error(res.data); \n                    }\n\n                    this.hideDialog();\n                })\n               \n            },\n            hideDialog() {\n                this.dialogFormVisible = false;\n            },\n            openEditDialog(scopeRow) {\n                this.dialogFormVisible = true;\n                this.activityId = scopeRow.activityId;\n                this.templateId = scopeRow.templateId;\n                this.activityDuration.push(new Date(scopeRow.openTime));\n                this.activityDuration.push(new Date(scopeRow.endTime));\n            },\n        },\n\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}