{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/game/cdkey/cdkey.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/game/cdkey/cdkey.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getOperation, getItemList, addcdkey, getCDkeys, getUseUsers, exportExcel, deleteCDkey} from \"@/api/index\";\nimport util from \"../../../libs/util\";\n\nexport default {\n    name: 'cdkey',\n    mounted() {\n        this.getItemList();\n        this.getOperation();\n    },\n    data() {\n        return {\n            columnsWithOperation: [\n                {type: \"index\", width: 60, align: \"center\"},\n                {\n                    title: \"生成时间\", key: \"createTime\", width: 180, align: \"center\", render: (h, params) => {\n                        return h(\"div\", util.Time2DefaultFormat(params.row.createTime))\n                    }\n                },\n                {\n                    title: \"开始时间\", key: \"startTime\", width: 180, align: \"center\", render: (h, params) => {\n                        return h(\"div\", util.Time2DefaultFormat(params.row.startTime))\n                    }\n                },\n                {\n                    title: \"结束时间\", key: \"endTime\", width: 180, align: \"center\", render: (h, params) => {\n                        return h(\"div\", util.Time2DefaultFormat(params.row.endTime))\n                    }\n                },\n                {\n                    title: \"道具内容\", key: \"rewards\", width: 200, align: \"center\", render: (h, params) => {\n                        return h(\"div\", this.formatReward(params.row.rewards))\n                    }\n                },\n                {title: \"生成数量\", key: \"createNum\", width: 120, align: \"center\",render: (h, params) => {\n                        let discardNum = \"\";\n                        if (params.row.discardNum && params.row.discardNum>0){\n                            discardNum = `(-${params.row.discardNum})`\n                        }\n                        return h(\"div\", params.row.createNum + discardNum)\n                    }},\n                {title: \"可使用次数\", key: \"totalNum\", width: 120, align: \"center\"},\n                {title: \"渠道\", key: \"channel\", width: 120, align: \"center\"},\n                {\n                    title: \"操作\", key: \"action\", width: 100, align: \"center\", render: (h, params) => {\n                        return h(\"div\", [h(\"Button\", {\n                            props: {type: \"primary\", size: \"small\"}, on: {\n                                click: () => {\n                                    this.openCDkeyDialog(params.row);\n                                }\n                            }\n                        }, \"查看\")]);\n                    }\n                }],\n            columnsWithRewards: [\n                {type: \"index\", width: 60, align: \"center\"},\n                {title: \"道具ID\", key: \"id\", width: 120, align: \"center\"},\n                {\n                    title: \"道具名称\", key: \"id\", width: 120, align: \"center\", render: (h, params) => {\n                        return h(\"div\", this.formatItem(params.row.id))\n                    }\n                },\n                {title: \"道具数量\", key: \"num\", width: 120, align: \"center\"},\n                {\n                    title: \"操作\", key: \"action\", width: 100, align: \"center\", render: (h, params) => {\n                        return h(\"div\", [h(\"Button\", {\n                            props: {type: \"error\", size: \"small\"}, on: {\n                                click: () => {\n                                    this.delReward(params.index);\n                                }\n                            }\n                        }, \"删除\")]);\n                    }\n                }\n            ],\n            columnsWithCDkey: [\n                {type: \"index\", width: 60, align: \"center\"},\n                {title: \"兑换码ID\", key: \"key\", width: 110, align: \"center\"},\n                {\n                    title: \"领取状态\", key: \"useNum\", width: 120, align: \"center\", render: (h, params) => {\n                        return h(\"div\", params.row.useNum > 0 ? '已领取' : '未领取')\n                    }\n                },\n                {\n                    title: \"领取时间\", key: \"fistUseTime\", width: 120, align: \"center\", render: (h, params) => {\n                        return h(\"div\", params.row.fistUseTime ? util.Time2DefaultFormat(params.row.fistUseTime) : '未领取')\n                    }\n                },\n                {title: \"用户ID\", key: \"fistUsrUserId\", width: 120, align: \"center\"},\n                {title: \"已使用次数\", key: \"useNum\", width: 110, align: \"center\"},\n                {\n                    title: \"操作\", key: \"action\", width: 200, align: \"center\", render: (h, params) => {\n                        let deleteButton = ''\n                        if (this.$route.meta.permTypes.includes('delete')) {\n                            deleteButton = h(\"Button\", {\n                                props: {type: \"error\", size: \"small\"}, on: {\n                                    click: () => {\n                                        this.deleteCDkey(params.row);\n                                    }\n                                }\n                            }, \"删除\");\n                        }\n                        return h(\"div\", [\n                            h(\"Button\", {\n                                props: {type: \"primary\", size: \"small\"}, on: {\n                                    click: () => {\n                                        this.openSeeUserDialog(params.row.key);\n                                    }\n                                }\n                            }, \"使用详情\"),\n                            deleteButton\n                        ]);\n                    }\n                }],\n            columnsWithUsers: [\n                {type: \"index\", width: 60, align: \"center\"},\n                {title: \"兑换码\", key: \"key\", width: 110, align: \"center\"},\n                {title: \"用户ID\", key: \"userId\", width: 110, align: \"center\"},\n                {\n                    title: \"领取时间\", key: \"useTime\", width: 110, align: \"center\", render: (h, params) => {\n                        return h(\"div\", util.Time2DefaultFormat(params.row.useTime))\n                    }\n                },\n            ],\n            /** 添加礼包对话框显示 */\n            dialogFormVisible: false,\n            /** 礼包查看操作对话框显示 */\n            dialogSeeVisible: false,\n            /** 查看所有用户数据 */\n            dialogSeeUserVisible: false,\n            dialogExportExcelVisible: false,\n            downloadDataLimit: 50000,\n            formLabelWidth: '120px',\n            page: {\n                operation: {\n                    per_page: 10,\n                    cur_page: 1,\n                    total: 0,\n                    channel: ''\n                },\n                cdkey: {\n                    pagesize: 10,\n                    currentpage: 1,\n                    total: 0,\n                    currentOperation: {}\n                },\n                user: {\n                    pagesize: 10,\n                    currentpage: 1,\n                    total: 0,\n                    key: ''\n                }\n            },\n            /** 根据筛选条件后所有礼包数据 */\n            operations: [],\n            /** 查看礼包，当前礼包内的所有cdkey数据 */\n            cdkeys: [],\n            /** 查看cdkey下所有使用用户 */\n            users: [],\n            /** 提交到后端的添加数据 */\n            isDIY: false,\n            form: {\n                diyCdk: '',\n                formTime: [],\n                rewards: [],\n                createNum: '',\n                totalNum: '',\n                channel: ''\n            },\n            /** 道具下拉框，需要请求后端获取道具数据 */\n            itemType: 0,\n            itemList: [],\n            itemLists: [],\n            itemData: {\n                itemList: {},\n                decoShopList: {},\n                staffList: {},\n                goodList: {}\n            },\n            itemTypes: [{type: 0, label: '货币'}, {type: 1, label: '道具'}, {type: 2, label: '家具'}, {\n                type: 3,\n                label: '员工'\n            }, {type: 4, label: '货物'}],\n            addItemId: '',\n            addItemNum: '',\n            /** 时间选择禁止选择当天前的日期 */\n            expireTimeOption: {\n                disabledDate(date) {\n                    return date.getTime() < new Date(new Date().toLocaleDateString()).getTime();\n                }\n            }\n        }\n    },\n    methods: {\n        getItemList() {\n            getItemList().then(res => {\n                if (res.status === 200) {\n                    this.itemData.decoShopList = res.data.decoShopList;\n                    this.itemData.itemList = res.data.itemList;\n                    this.itemData.staffList = res.data.staffList;\n                    this.itemData.goodList = res.data.goodList;\n\n                    /** 显示奖励时用 */\n                    this.itemLists = [{id: -1, name: '经验'}, {id: -2, name: '黄金'}, {id: -3, name: '钻石'}];\n                    res.data.decoShopList.forEach((obj) => {\n                        this.itemLists.push({id: obj.id, name: obj.name});\n                    });\n                    res.data.itemList.forEach((obj) => {\n                        this.itemLists.push({id: obj.id, name: obj.name});\n                    });\n                    res.data.staffList.forEach((obj) => {\n                        this.itemLists.push({id: obj.id, name: obj.name});\n                    });\n                    res.data.goodList.forEach((obj) => {\n                        this.itemLists.push({id: obj.id, name: obj.name});\n                    });\n                }\n            });\n        },\n        changeItemType() {\n            this.itemList = [];\n            this.clearAddItem();\n            switch (this.itemType) {\n                case 0:\n                    this.itemList.push({id: -1, name: '经验'});\n                    this.itemList.push({id: -2, name: '黄金'});\n                    this.itemList.push({id: -3, name: '钻石'});\n                    return;\n                case 1:\n                    this.itemList = this.itemData.itemList;\n                    return;\n                case 2:\n                    this.itemList = this.itemData.decoShopList;\n                    return;\n                case 3:\n                    this.itemList = this.itemData.staffList;\n                    return;\n                case 4:\n                    this.itemList = this.itemData.goodList;\n            }\n        },\n        queryOperation() {\n            this.page.operation.currentpage = 1;\n            this.getOperation();\n        },\n        getOperation() {\n            getOperation(this.page.operation).then(res => {\n                if (res.status === 200) {\n                    this.operations = res.data.operations;\n                    this.page.operation.total = res.data.total;\n                }\n            });\n        },\n        handleSizeChange(value) {\n            this.page.operation.per_page = value;\n            this.getOperation();\n        },\n        handleCurrentChange(value) {\n            this.page.operation.cur_page = value;\n            this.getOperation();\n        },\n        handleCDkeySizeChange(value) {\n            this.page.cdkey.pagesize = value;\n            this.getCDkey();\n        },\n        handleCDkeyCurrentChange(value) {\n            this.page.cdkey.currentpage = value;\n            this.getCDkey();\n        },\n        handleUserSizeChange(value) {\n            this.page.user.pagesize = value;\n            this.getUseUser();\n        },\n        handleUserCurrentChange(value) {\n            this.page.user.currentpage = value;\n            this.getUseUser();\n        },\n        openDialog() {\n            if (this.itemList.length <= 0) {\n                this.getItemList();\n            }\n            this.itemType = 0;\n            this.changeItemType();\n            this.form = {\n                diyCdk: '',\n                rewards: [],\n                createNum: '',\n                totalUseNum: '',\n                channel: '',\n                rewardStr: ''\n            };\n            this.dialogFormVisible = true;\n            this.isDIY = false;\n        },\n        openDialogWithDIY() {\n            this.openDialog();\n            this.isDIY = true;\n        },\n        hideDialog() {\n            this.dialogFormVisible = false;\n        },\n        addcdkey() {\n            if (!this.form.formTime) {\n                this.$Message.error('请选择时间');\n                return;\n            }\n            if (!this.form.rewards || this.form.rewards.length === 0) {\n                this.$Message.error('请添加道具');\n                return;\n            }\n            if (!this.form.channel) {\n                this.$Message.error('请输入渠道');\n                return;\n            }\n            if (!this.form.createNum) {\n                this.form.createNum = 1;\n            }\n            if (!this.form.totalNum) {\n                this.form.totalNum = 1;\n            }\n            if (this.isDIY && !this.form.diyCdk) {\n                this.$Message.error('请输入自定义兑换码');\n                return;\n            }\n            this.form.formTime.forEach((item, index) => {\n                this.form.formTime[index] = item.getTime();\n            });\n            this.form.rewards.forEach((item, index) => {\n                this.form.rewards[index] = item.id + ',' + item.num;\n            })\n            this.form.rewardStr = this.form.rewards.join(';')\n            this.form.isDiy = this.isDIY;\n            this.hideDialog();\n            addcdkey(this.form).then(res => {\n                if (res.status === 200) {\n                    if (res.data.error) {\n                        this.$Message.error(res.data.error);\n                        return\n                    }\n                    if (res.data.insertFail) {\n                        this.$Message.error('兑换码' + res.data.insertFail.slice(0, -1) + '已存在');\n                    }\n                    if (res.data.success > 0) {\n                        this.$Message.success('成功生成' + res.data.success + '条CDkey');\n                    }\n                    this.getOperation();\n                }\n            });\n        },\n        addReward() {\n            if (!this.addItemNum || !this.addItemId || this.addItemNum <= 0) {\n                this.$Message.error('请正确添加');\n                return;\n            }\n            this.form.rewards.push({id: this.addItemId, num: this.addItemNum});\n\n            /** 合并相同id >> 暂时可以不用 */\n            let newArr = []\n            this.form.rewards.forEach(el => {\n                const result = newArr.findIndex(ol => {\n                    return el.id === ol.id\n                })\n                if (result !== -1) {\n                    newArr[result].num = newArr[result].num + el.num\n                } else {\n                    newArr.push(el)\n                }\n            })\n            this.form.rewards = newArr;\n            // this.form.rewards.forEach(obj => {\n            //   const result = this.itemData.staffList.findIndex(ol => {\n            //     return obj.id === ol.id\n            //   })\n            //   if (result !== -1 && obj.num > 1) {\n            //     this.$message({\n            //       type: 'warning',\n            //       message: `员工${obj.id}的数量超过上限，已重置`\n            //     });\n            //     obj.num = 1;\n            //   }\n            // })\n            /** 合并相同id >> end */\n\n            this.clearAddItem();\n        },\n        clearAddItem() {\n            this.addItemId = '';\n            this.addItemNum = '';\n        },\n        clearRewards() {\n            this.form.rewards = [];\n        },\n        delReward(index) {\n            this.form.rewards.splice(index, 1);\n        },\n        openCDkeyDialog(scopeRow) {\n            this.page.cdkey.currentOperation = scopeRow;\n            this.page.cdkey.currentpage = 1;\n            this.getCDkey();\n            this.dialogSeeVisible = true;\n        },\n        getCDkey() {\n            getCDkeys({\n                per_page: this.page.cdkey.pagesize,\n                cur_page: this.page.cdkey.currentpage,\n                operationId: this.page.cdkey.currentOperation.operationId\n            }).then(res => {\n                if (res.status === 200) {\n                    this.page.cdkey.total = res.data.total;\n                    this.cdkeys = res.data.cdkeys;\n                }\n            });\n        },\n        hideCDkeyDialog() {\n            this.dialogSeeVisible = false;\n            this.getOperation();\n        },\n        openSeeUserDialog(key) {\n            this.page.user.key = key;\n            this.page.user.currentpage = 1;\n            this.getUseUser();\n            this.dialogSeeUserVisible = true;\n        },\n        deleteCDkey(row) {\n            if (row.useNum > 0) {\n                this.$Message.error('该条cdkey已被使用');\n                return;\n            }\n            this.$Modal.confirm({\n                title: \"确认删除\",\n                content: \"您确认要删除 \" + row.key + \" ?\",\n                loading: true,\n                onOk: () => {\n                    deleteCDkey({key: row.key}).then(res => {\n                        this.$Modal.remove();\n                        if (res.status === 200) {\n                            if (res.data.error){\n                                this.$Message.error(res.data.error);\n                            } else {\n                                this.$Message.success('成功删除' + res.data.success + '条CDkey');\n                            }\n                            this.getCDkey();\n                        }\n                    })\n                }\n            });\n        },\n        getUseUser() {\n            getUseUsers({\n                per_page: this.page.user.pagesize,\n                cur_page: this.page.user.currentpage,\n                key: this.page.user.key\n            }).then(res => {\n                if (res.status === 200) {\n                    this.page.user.total = res.data.total;\n                    this.users = res.data.users;\n                }\n            });\n        },\n        exportExcel() {\n            if (this.page.cdkey.total > this.downloadDataLimit) {\n                this.dialogExportExcelVisible = true;\n                return;\n            }\n            this.getExportExcel(0, this.page.cdkey.total);\n        },\n        exportExcelInBatches(n) {\n            this.getExportExcel((n - 1) * this.downloadDataLimit, this.downloadDataLimit);\n        },\n        getExportExcel(startIndex, pageSize) {\n            exportExcel({\n                operationId: this.page.cdkey.currentOperation.operationId,\n                startIndex: startIndex,\n                pageSize: pageSize\n            }).then(res => {\n                let url = window.URL.createObjectURL(new Blob([res.data]))\n                let link = document.createElement('a')\n                link.style.display = 'none'\n                link.href = url\n                let fileName = res.headers['content-disposition'].split('filename=');\n                fileName[1] = util.Time2DefaultFormat(new Date().getTime()) + \".xlsx\";\n                link.setAttribute('download', fileName[1]);\n\n                document.body.appendChild(link)\n                link.click()\n            });\n        },\n        hideSeeUserDialog() {\n            this.dialogSeeUserVisible = false;\n        },\n        formatReward(rewardStr) {\n            let rowElement = rewardStr.split(';');\n            let array = [];\n            rowElement.forEach((obj) => {\n                const result = this.itemLists.findIndex(ol => {\n                    return parseInt(obj.split(',')[0]) === ol.id\n                })\n                if (result !== -1) {\n                    array.push(this.itemLists[result].name + '*' + obj.split(',')[1]);\n                } else {\n                    array.push(obj.split(',')[0] + '*' + obj.split(',')[1]);\n                }\n            })\n            return array.join(', ');\n        },\n        formatItem(id) {\n            let name = '';\n            this.itemLists.forEach((o) => {\n                if (o.id === id) {\n                    name = o.name;\n                }\n            })\n            return name;\n        },\n    }\n}\n",{"version":3,"sources":["cdkey.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cdkey.vue","sourceRoot":"src/views/game/cdkey","sourcesContent":["<template>\n  <div>\n    <Row>\n      <Input v-model=\"page.operation.channel\" placeholder=\"请输入渠道\" style=\"width: 200px\"\n             @keyup.enter.native=\"queryOperation()\"></Input>\n      <Button @click='queryOperation()' type=\"primary\">查询</Button>\n      <Button @click='openDialog()'>添加随机兑换码</Button>\n      <Button @click='openDialogWithDIY()'>添加自定义兑换码</Button>\n\n    </Row>\n    <Row>\n      <Table :columns=\"columnsWithOperation\" :data=\"operations\" ref=\"table\" stripe></Table>\n    </Row>\n    <Row type=\"flex\" justify=\"end\" class=\"page\">\n      <Page\n              :current=\"page.operation.cur_page\"\n              :total=\"page.operation.total\"\n              :page-size=\"page.operation.per_page\"\n              @on-change=\"handleCurrentChange\"\n              @on-page-size-change=\"handleSizeChange\"\n              :page-size-opts=\"[10,20,50]\"\n              size=\"small\"\n              show-total\n              show-elevator\n              show-sizer>\n      </Page>\n    </Row>\n\n    <Modal :title=\"isDIY?'添加自定义兑换码礼包':'添加随机兑换码礼包'\" v-model=\"dialogFormVisible\" :mask-closable=\"false\" width=\"50%\">\n      <Form :model=\"form\" :label-width=\"120\">\n\n        <FormItem label=\"礼包起止时间\">\n          <DatePicker v-model=\"form.formTime\"\n                      type=\"datetimerange\"\n                      format=\"yyyy-MM-dd HH:mm:ss\"\n                      placeholder=\"请选择时间日期\"\n                      style=\"width: 50%;max-width: 350px\"\n                      :options=\"expireTimeOption\">\n          </DatePicker>\n        </FormItem>\n\n        <FormItem label=\"道具列表\">\n          <Select v-model=\"itemType\" @on-change=\"changeItemType\">\n            <Option\n                    v-for=\"item in itemTypes\"\n                    :key=\"item.type\"\n                    :label=\"item.label\"\n                    :value=\"item.type\">\n            </Option>\n          </Select>\n          <Select v-model=\"addItemId\">\n            <Option\n                    v-for=\"item in itemList\"\n                    :key=\"item.id\"\n                    :label=\"item.name\"\n                    :value=\"item.id\">\n            </Option>\n          </Select>\n\n          <Input v-model.number=\"addItemNum\" autocomplete=\"off\" style=\"width: 160px\"\n                 placeholder=\"请输入道具数量\" @keyup.enter.native=\"addReward()\"></Input>\n\n          <Button @click='addReward()'>添加</Button>\n\n          <Button @click='clearRewards()'>清空</Button>\n          <Table :columns=\"columnsWithRewards\" :data=\"form.rewards\" ref=\"table\"></Table>\n\n        </FormItem>\n\n        <FormItem :label=\"isDIY?'自定义兑换码':'兑换码数量'\">\n          <Input v-model=\"form.createNum\" autocomplete=\"off\" placeholder=\"请输入生成兑换码数量，默认为1\" v-if=\"!isDIY\"/>\n          <Input v-model=\"form.diyCdk\" autocomplete=\"off\" placeholder=\"请输入要生成的兑换码，英文半角逗号分隔\" v-if=\"isDIY\"/>\n        </FormItem>\n\n        <FormItem label=\"使用次数\">\n          <Input v-model=\"form.totalNum\" autocomplete=\"off\" placeholder=\"请输入兑换码使用次数，默认为1，无限制使用为-1\"/>\n        </FormItem>\n\n        <FormItem label=\"渠道\">\n          <Input v-model=\"form.channel\" autocomplete=\"off\" placeholder=\"请输入渠道\"/>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button @click=\"hideDialog()\">取 消</Button>\n        <Button type=\"primary\" @click=\"addcdkey()\">确定添加</Button>\n      </div>\n    </Modal>\n\n    <Modal title=查看兑换码 v-model=\"dialogSeeVisible\" :mask-closable=\"false\" width=\"900px\">\n      <Table :columns=\"columnsWithCDkey\" :data=\"cdkeys\" ref=\"table\" stripe></Table>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n                :current=\"page.cdkey.currentpage\"\n                :total=\"page.cdkey.total\"\n                :page-size=\"page.cdkey.pagesize\"\n                @on-change=\"handleCDkeyCurrentChange\"\n                @on-page-size-change=\"handleCDkeySizeChange\"\n                :page-size-opts=\"[10,20,50]\"\n                size=\"small\"\n                show-total\n                show-elevator\n                show-sizer>\n        </Page>\n      </Row>\n      <div slot=\"footer\">\n        <Button @click=\"exportExcel\" type=\"primary\">导出Excel</Button>\n        <Button @click=\"hideCDkeyDialog()\">取 消</Button>\n      </div>\n    </Modal>\n\n    <Modal title=导出Excel v-model=\"dialogExportExcelVisible\" :mask-closable=\"false\" width=\"50%\">\n      <span>因数据量太大将采取分批次下载，请选择下载批次！如若下载失败，请联系技术人员！</span>\n      <br>\n      <Button @click=\"exportExcelInBatches(n)\" tBype=\"primary\" :key=\"n\"\n              v-for=\"n in Math.ceil(page.cdkey.total/downloadDataLimit)\"\n              style=\"width: 200px;margin: 10px\">{{(n - 1) * downloadDataLimit +1}}-{{n * downloadDataLimit }}\n      </Button>\n    </Modal>\n\n    <Modal title=已领取玩家 v-model=\"dialogSeeUserVisible\" :mask-closable=\"false\" width=\"50%\">\n      <Table :columns=\"columnsWithUsers\" :data=\"users\" ref=\"table\" stripe></Table>\n      <Row type=\"flex\" justify=\"end\" class=\"page\">\n        <Page\n                :current=\"page.user.currentpage\"\n                :total=\"page.user.total\"\n                :page-size=\"page.user.pagesize\"\n                @on-change=\"handleUserCurrentChange\"\n                @on-page-size-change=\"handleUserSizeChange\"\n                :page-size-opts=\"[10,20,50]\"\n                size=\"small\"\n                show-total\n                show-elevator\n                show-sizer>\n        </Page>\n      </Row>\n      <div slot=\"footer\">\n        <Button @click=\"hideSeeUserDialog()\">取 消</Button>\n      </div>\n    </Modal>\n\n  </div>\n</template>\n\n<script>\n    import {getOperation, getItemList, addcdkey, getCDkeys, getUseUsers, exportExcel, deleteCDkey} from \"@/api/index\";\n    import util from \"../../../libs/util\";\n\n    export default {\n        name: 'cdkey',\n        mounted() {\n            this.getItemList();\n            this.getOperation();\n        },\n        data() {\n            return {\n                columnsWithOperation: [\n                    {type: \"index\", width: 60, align: \"center\"},\n                    {\n                        title: \"生成时间\", key: \"createTime\", width: 180, align: \"center\", render: (h, params) => {\n                            return h(\"div\", util.Time2DefaultFormat(params.row.createTime))\n                        }\n                    },\n                    {\n                        title: \"开始时间\", key: \"startTime\", width: 180, align: \"center\", render: (h, params) => {\n                            return h(\"div\", util.Time2DefaultFormat(params.row.startTime))\n                        }\n                    },\n                    {\n                        title: \"结束时间\", key: \"endTime\", width: 180, align: \"center\", render: (h, params) => {\n                            return h(\"div\", util.Time2DefaultFormat(params.row.endTime))\n                        }\n                    },\n                    {\n                        title: \"道具内容\", key: \"rewards\", width: 200, align: \"center\", render: (h, params) => {\n                            return h(\"div\", this.formatReward(params.row.rewards))\n                        }\n                    },\n                    {title: \"生成数量\", key: \"createNum\", width: 120, align: \"center\",render: (h, params) => {\n                            let discardNum = \"\";\n                            if (params.row.discardNum && params.row.discardNum>0){\n                                discardNum = `(-${params.row.discardNum})`\n                            }\n                            return h(\"div\", params.row.createNum + discardNum)\n                        }},\n                    {title: \"可使用次数\", key: \"totalNum\", width: 120, align: \"center\"},\n                    {title: \"渠道\", key: \"channel\", width: 120, align: \"center\"},\n                    {\n                        title: \"操作\", key: \"action\", width: 100, align: \"center\", render: (h, params) => {\n                            return h(\"div\", [h(\"Button\", {\n                                props: {type: \"primary\", size: \"small\"}, on: {\n                                    click: () => {\n                                        this.openCDkeyDialog(params.row);\n                                    }\n                                }\n                            }, \"查看\")]);\n                        }\n                    }],\n                columnsWithRewards: [\n                    {type: \"index\", width: 60, align: \"center\"},\n                    {title: \"道具ID\", key: \"id\", width: 120, align: \"center\"},\n                    {\n                        title: \"道具名称\", key: \"id\", width: 120, align: \"center\", render: (h, params) => {\n                            return h(\"div\", this.formatItem(params.row.id))\n                        }\n                    },\n                    {title: \"道具数量\", key: \"num\", width: 120, align: \"center\"},\n                    {\n                        title: \"操作\", key: \"action\", width: 100, align: \"center\", render: (h, params) => {\n                            return h(\"div\", [h(\"Button\", {\n                                props: {type: \"error\", size: \"small\"}, on: {\n                                    click: () => {\n                                        this.delReward(params.index);\n                                    }\n                                }\n                            }, \"删除\")]);\n                        }\n                    }\n                ],\n                columnsWithCDkey: [\n                    {type: \"index\", width: 60, align: \"center\"},\n                    {title: \"兑换码ID\", key: \"key\", width: 110, align: \"center\"},\n                    {\n                        title: \"领取状态\", key: \"useNum\", width: 120, align: \"center\", render: (h, params) => {\n                            return h(\"div\", params.row.useNum > 0 ? '已领取' : '未领取')\n                        }\n                    },\n                    {\n                        title: \"领取时间\", key: \"fistUseTime\", width: 120, align: \"center\", render: (h, params) => {\n                            return h(\"div\", params.row.fistUseTime ? util.Time2DefaultFormat(params.row.fistUseTime) : '未领取')\n                        }\n                    },\n                    {title: \"用户ID\", key: \"fistUsrUserId\", width: 120, align: \"center\"},\n                    {title: \"已使用次数\", key: \"useNum\", width: 110, align: \"center\"},\n                    {\n                        title: \"操作\", key: \"action\", width: 200, align: \"center\", render: (h, params) => {\n                            let deleteButton = ''\n                            if (this.$route.meta.permTypes.includes('delete')) {\n                                deleteButton = h(\"Button\", {\n                                    props: {type: \"error\", size: \"small\"}, on: {\n                                        click: () => {\n                                            this.deleteCDkey(params.row);\n                                        }\n                                    }\n                                }, \"删除\");\n                            }\n                            return h(\"div\", [\n                                h(\"Button\", {\n                                    props: {type: \"primary\", size: \"small\"}, on: {\n                                        click: () => {\n                                            this.openSeeUserDialog(params.row.key);\n                                        }\n                                    }\n                                }, \"使用详情\"),\n                                deleteButton\n                            ]);\n                        }\n                    }],\n                columnsWithUsers: [\n                    {type: \"index\", width: 60, align: \"center\"},\n                    {title: \"兑换码\", key: \"key\", width: 110, align: \"center\"},\n                    {title: \"用户ID\", key: \"userId\", width: 110, align: \"center\"},\n                    {\n                        title: \"领取时间\", key: \"useTime\", width: 110, align: \"center\", render: (h, params) => {\n                            return h(\"div\", util.Time2DefaultFormat(params.row.useTime))\n                        }\n                    },\n                ],\n                /** 添加礼包对话框显示 */\n                dialogFormVisible: false,\n                /** 礼包查看操作对话框显示 */\n                dialogSeeVisible: false,\n                /** 查看所有用户数据 */\n                dialogSeeUserVisible: false,\n                dialogExportExcelVisible: false,\n                downloadDataLimit: 50000,\n                formLabelWidth: '120px',\n                page: {\n                    operation: {\n                        per_page: 10,\n                        cur_page: 1,\n                        total: 0,\n                        channel: ''\n                    },\n                    cdkey: {\n                        pagesize: 10,\n                        currentpage: 1,\n                        total: 0,\n                        currentOperation: {}\n                    },\n                    user: {\n                        pagesize: 10,\n                        currentpage: 1,\n                        total: 0,\n                        key: ''\n                    }\n                },\n                /** 根据筛选条件后所有礼包数据 */\n                operations: [],\n                /** 查看礼包，当前礼包内的所有cdkey数据 */\n                cdkeys: [],\n                /** 查看cdkey下所有使用用户 */\n                users: [],\n                /** 提交到后端的添加数据 */\n                isDIY: false,\n                form: {\n                    diyCdk: '',\n                    formTime: [],\n                    rewards: [],\n                    createNum: '',\n                    totalNum: '',\n                    channel: ''\n                },\n                /** 道具下拉框，需要请求后端获取道具数据 */\n                itemType: 0,\n                itemList: [],\n                itemLists: [],\n                itemData: {\n                    itemList: {},\n                    decoShopList: {},\n                    staffList: {},\n                    goodList: {}\n                },\n                itemTypes: [{type: 0, label: '货币'}, {type: 1, label: '道具'}, {type: 2, label: '家具'}, {\n                    type: 3,\n                    label: '员工'\n                }, {type: 4, label: '货物'}],\n                addItemId: '',\n                addItemNum: '',\n                /** 时间选择禁止选择当天前的日期 */\n                expireTimeOption: {\n                    disabledDate(date) {\n                        return date.getTime() < new Date(new Date().toLocaleDateString()).getTime();\n                    }\n                }\n            }\n        },\n        methods: {\n            getItemList() {\n                getItemList().then(res => {\n                    if (res.status === 200) {\n                        this.itemData.decoShopList = res.data.decoShopList;\n                        this.itemData.itemList = res.data.itemList;\n                        this.itemData.staffList = res.data.staffList;\n                        this.itemData.goodList = res.data.goodList;\n\n                        /** 显示奖励时用 */\n                        this.itemLists = [{id: -1, name: '经验'}, {id: -2, name: '黄金'}, {id: -3, name: '钻石'}];\n                        res.data.decoShopList.forEach((obj) => {\n                            this.itemLists.push({id: obj.id, name: obj.name});\n                        });\n                        res.data.itemList.forEach((obj) => {\n                            this.itemLists.push({id: obj.id, name: obj.name});\n                        });\n                        res.data.staffList.forEach((obj) => {\n                            this.itemLists.push({id: obj.id, name: obj.name});\n                        });\n                        res.data.goodList.forEach((obj) => {\n                            this.itemLists.push({id: obj.id, name: obj.name});\n                        });\n                    }\n                });\n            },\n            changeItemType() {\n                this.itemList = [];\n                this.clearAddItem();\n                switch (this.itemType) {\n                    case 0:\n                        this.itemList.push({id: -1, name: '经验'});\n                        this.itemList.push({id: -2, name: '黄金'});\n                        this.itemList.push({id: -3, name: '钻石'});\n                        return;\n                    case 1:\n                        this.itemList = this.itemData.itemList;\n                        return;\n                    case 2:\n                        this.itemList = this.itemData.decoShopList;\n                        return;\n                    case 3:\n                        this.itemList = this.itemData.staffList;\n                        return;\n                    case 4:\n                        this.itemList = this.itemData.goodList;\n                }\n            },\n            queryOperation() {\n                this.page.operation.currentpage = 1;\n                this.getOperation();\n            },\n            getOperation() {\n                getOperation(this.page.operation).then(res => {\n                    if (res.status === 200) {\n                        this.operations = res.data.operations;\n                        this.page.operation.total = res.data.total;\n                    }\n                });\n            },\n            handleSizeChange(value) {\n                this.page.operation.per_page = value;\n                this.getOperation();\n            },\n            handleCurrentChange(value) {\n                this.page.operation.cur_page = value;\n                this.getOperation();\n            },\n            handleCDkeySizeChange(value) {\n                this.page.cdkey.pagesize = value;\n                this.getCDkey();\n            },\n            handleCDkeyCurrentChange(value) {\n                this.page.cdkey.currentpage = value;\n                this.getCDkey();\n            },\n            handleUserSizeChange(value) {\n                this.page.user.pagesize = value;\n                this.getUseUser();\n            },\n            handleUserCurrentChange(value) {\n                this.page.user.currentpage = value;\n                this.getUseUser();\n            },\n            openDialog() {\n                if (this.itemList.length <= 0) {\n                    this.getItemList();\n                }\n                this.itemType = 0;\n                this.changeItemType();\n                this.form = {\n                    diyCdk: '',\n                    rewards: [],\n                    createNum: '',\n                    totalUseNum: '',\n                    channel: '',\n                    rewardStr: ''\n                };\n                this.dialogFormVisible = true;\n                this.isDIY = false;\n            },\n            openDialogWithDIY() {\n                this.openDialog();\n                this.isDIY = true;\n            },\n            hideDialog() {\n                this.dialogFormVisible = false;\n            },\n            addcdkey() {\n                if (!this.form.formTime) {\n                    this.$Message.error('请选择时间');\n                    return;\n                }\n                if (!this.form.rewards || this.form.rewards.length === 0) {\n                    this.$Message.error('请添加道具');\n                    return;\n                }\n                if (!this.form.channel) {\n                    this.$Message.error('请输入渠道');\n                    return;\n                }\n                if (!this.form.createNum) {\n                    this.form.createNum = 1;\n                }\n                if (!this.form.totalNum) {\n                    this.form.totalNum = 1;\n                }\n                if (this.isDIY && !this.form.diyCdk) {\n                    this.$Message.error('请输入自定义兑换码');\n                    return;\n                }\n                this.form.formTime.forEach((item, index) => {\n                    this.form.formTime[index] = item.getTime();\n                });\n                this.form.rewards.forEach((item, index) => {\n                    this.form.rewards[index] = item.id + ',' + item.num;\n                })\n                this.form.rewardStr = this.form.rewards.join(';')\n                this.form.isDiy = this.isDIY;\n                this.hideDialog();\n                addcdkey(this.form).then(res => {\n                    if (res.status === 200) {\n                        if (res.data.error) {\n                            this.$Message.error(res.data.error);\n                            return\n                        }\n                        if (res.data.insertFail) {\n                            this.$Message.error('兑换码' + res.data.insertFail.slice(0, -1) + '已存在');\n                        }\n                        if (res.data.success > 0) {\n                            this.$Message.success('成功生成' + res.data.success + '条CDkey');\n                        }\n                        this.getOperation();\n                    }\n                });\n            },\n            addReward() {\n                if (!this.addItemNum || !this.addItemId || this.addItemNum <= 0) {\n                    this.$Message.error('请正确添加');\n                    return;\n                }\n                this.form.rewards.push({id: this.addItemId, num: this.addItemNum});\n\n                /** 合并相同id >> 暂时可以不用 */\n                let newArr = []\n                this.form.rewards.forEach(el => {\n                    const result = newArr.findIndex(ol => {\n                        return el.id === ol.id\n                    })\n                    if (result !== -1) {\n                        newArr[result].num = newArr[result].num + el.num\n                    } else {\n                        newArr.push(el)\n                    }\n                })\n                this.form.rewards = newArr;\n                // this.form.rewards.forEach(obj => {\n                //   const result = this.itemData.staffList.findIndex(ol => {\n                //     return obj.id === ol.id\n                //   })\n                //   if (result !== -1 && obj.num > 1) {\n                //     this.$message({\n                //       type: 'warning',\n                //       message: `员工${obj.id}的数量超过上限，已重置`\n                //     });\n                //     obj.num = 1;\n                //   }\n                // })\n                /** 合并相同id >> end */\n\n                this.clearAddItem();\n            },\n            clearAddItem() {\n                this.addItemId = '';\n                this.addItemNum = '';\n            },\n            clearRewards() {\n                this.form.rewards = [];\n            },\n            delReward(index) {\n                this.form.rewards.splice(index, 1);\n            },\n            openCDkeyDialog(scopeRow) {\n                this.page.cdkey.currentOperation = scopeRow;\n                this.page.cdkey.currentpage = 1;\n                this.getCDkey();\n                this.dialogSeeVisible = true;\n            },\n            getCDkey() {\n                getCDkeys({\n                    per_page: this.page.cdkey.pagesize,\n                    cur_page: this.page.cdkey.currentpage,\n                    operationId: this.page.cdkey.currentOperation.operationId\n                }).then(res => {\n                    if (res.status === 200) {\n                        this.page.cdkey.total = res.data.total;\n                        this.cdkeys = res.data.cdkeys;\n                    }\n                });\n            },\n            hideCDkeyDialog() {\n                this.dialogSeeVisible = false;\n                this.getOperation();\n            },\n            openSeeUserDialog(key) {\n                this.page.user.key = key;\n                this.page.user.currentpage = 1;\n                this.getUseUser();\n                this.dialogSeeUserVisible = true;\n            },\n            deleteCDkey(row) {\n                if (row.useNum > 0) {\n                    this.$Message.error('该条cdkey已被使用');\n                    return;\n                }\n                this.$Modal.confirm({\n                    title: \"确认删除\",\n                    content: \"您确认要删除 \" + row.key + \" ?\",\n                    loading: true,\n                    onOk: () => {\n                        deleteCDkey({key: row.key}).then(res => {\n                            this.$Modal.remove();\n                            if (res.status === 200) {\n                                if (res.data.error){\n                                    this.$Message.error(res.data.error);\n                                } else {\n                                    this.$Message.success('成功删除' + res.data.success + '条CDkey');\n                                }\n                                this.getCDkey();\n                            }\n                        })\n                    }\n                });\n            },\n            getUseUser() {\n                getUseUsers({\n                    per_page: this.page.user.pagesize,\n                    cur_page: this.page.user.currentpage,\n                    key: this.page.user.key\n                }).then(res => {\n                    if (res.status === 200) {\n                        this.page.user.total = res.data.total;\n                        this.users = res.data.users;\n                    }\n                });\n            },\n            exportExcel() {\n                if (this.page.cdkey.total > this.downloadDataLimit) {\n                    this.dialogExportExcelVisible = true;\n                    return;\n                }\n                this.getExportExcel(0, this.page.cdkey.total);\n            },\n            exportExcelInBatches(n) {\n                this.getExportExcel((n - 1) * this.downloadDataLimit, this.downloadDataLimit);\n            },\n            getExportExcel(startIndex, pageSize) {\n                exportExcel({\n                    operationId: this.page.cdkey.currentOperation.operationId,\n                    startIndex: startIndex,\n                    pageSize: pageSize\n                }).then(res => {\n                    let url = window.URL.createObjectURL(new Blob([res.data]))\n                    let link = document.createElement('a')\n                    link.style.display = 'none'\n                    link.href = url\n                    let fileName = res.headers['content-disposition'].split('filename=');\n                    fileName[1] = util.Time2DefaultFormat(new Date().getTime()) + \".xlsx\";\n                    link.setAttribute('download', fileName[1]);\n\n                    document.body.appendChild(link)\n                    link.click()\n                });\n            },\n            hideSeeUserDialog() {\n                this.dialogSeeUserVisible = false;\n            },\n            formatReward(rewardStr) {\n                let rowElement = rewardStr.split(';');\n                let array = [];\n                rowElement.forEach((obj) => {\n                    const result = this.itemLists.findIndex(ol => {\n                        return parseInt(obj.split(',')[0]) === ol.id\n                    })\n                    if (result !== -1) {\n                        array.push(this.itemLists[result].name + '*' + obj.split(',')[1]);\n                    } else {\n                        array.push(obj.split(',')[0] + '*' + obj.split(',')[1]);\n                    }\n                })\n                return array.join(', ');\n            },\n            formatItem(id) {\n                let name = '';\n                this.itemLists.forEach((o) => {\n                    if (o.id === id) {\n                        name = o.name;\n                    }\n                })\n                return name;\n            },\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n\n"]}]}