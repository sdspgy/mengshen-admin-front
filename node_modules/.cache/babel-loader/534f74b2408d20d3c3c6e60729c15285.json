{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/Main.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport shrinkableMenu from \"./main-components/shrinkable-menu/shrinkable-menu.vue\";\nimport tagsPageOpened from \"./main-components/tags-page-opened.vue\";\nimport breadcrumbNav from \"./main-components/breadcrumb-nav.vue\";\nimport fullScreen from \"./main-components/fullscreen.vue\";\nimport lockScreen from \"./main-components/lockscreen/lockscreen.vue\";\nimport circleLoading from \"@/views/my-components/circle-loading.vue\";\nimport Cookies from \"js-cookie\";\nimport util from \"@/libs/util.js\";\nexport default {\n  components: {\n    shrinkableMenu: shrinkableMenu,\n    tagsPageOpened: tagsPageOpened,\n    breadcrumbNav: breadcrumbNav,\n    fullScreen: fullScreen,\n    lockScreen: lockScreen,\n    circleLoading: circleLoading\n  },\n  data: function data() {\n    return {\n      shrink: false,\n      username: \"\",\n      userId: \"\",\n      isFullScreen: false,\n      openedSubmenuArr: this.$store.state.app.openedSubmenuArr,\n      firstThreeNav: [],\n      lastNav: [],\n      navType: 1\n    };\n  },\n  computed: {\n    loading: function loading() {\n      return this.$store.state.app.loading;\n    },\n    navList: function navList() {\n      return this.$store.state.app.navList;\n    },\n    currNav: function currNav() {\n      return this.$store.state.app.currNav;\n    },\n    currNavTitle: function currNavTitle() {\n      return this.$store.state.app.currNavTitle;\n    },\n    menuList: function menuList() {\n      return this.$store.state.app.menuList;\n    },\n    pageTagsList: function pageTagsList() {\n      return this.$store.state.app.pageOpenedList; // 打开的页面的页面对象\n    },\n    currentPath: function currentPath() {\n      return this.$store.state.app.currentPath; // 当前面包屑数组\n    },\n    avatarPath: function avatarPath() {\n      return localStorage.avatorImgPath;\n    },\n    cachePage: function cachePage() {\n      return this.$store.state.app.cachePage;\n    },\n    lang: function lang() {\n      return this.$store.state.app.lang;\n    },\n    menuTheme: function menuTheme() {\n      return this.$store.state.app.menuTheme;\n    },\n    mesCount: function mesCount() {\n      return this.$store.state.app.messageCount;\n    }\n  },\n  stompClient: {\n    monitorIntervalTime: 100,\n    stompReconnect: true,\n    timeout: function timeout(orgCmd) {}\n  },\n  methods: {\n    init: function init() {\n      var pathArr = util.setCurrentPath(this, this.$route.name); // this.$store.commit(\"updateMenulist\");\n\n      if (pathArr.length >= 2) {\n        this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      }\n\n      var userInfo = JSON.parse(Cookies.get(\"userInfo\"));\n      this.username = userInfo.username;\n      this.userId = userInfo.id;\n      this.checkTag(this.$route.name);\n    },\n    selectNav: function selectNav(name) {\n      this.$store.commit(\"setCurrNav\", name);\n      this.setStore(\"currNav\", name); // 清空所有已打开标签\n      // this.$store.commit(\"clearAllTags\");\n\n      this.$router.push({\n        name: \"home_index\"\n      });\n      util.initRouter(this);\n    },\n    toggleClick: function toggleClick() {\n      this.shrink = !this.shrink;\n    },\n    handleLanDropdown: function handleLanDropdown(name) {\n      this.$i18n.locale = name;\n      this.$store.commit(\"switchLang\", name);\n    },\n    handleClickUserDropdown: function handleClickUserDropdown(name) {\n      if (name == \"ownSpace\") {\n        util.openNewPage(this, \"ownspace_index\");\n        this.$router.push({\n          name: \"ownspace_index\"\n        });\n      } else if (name == \"ownSpaceOld\") {\n        util.openNewPage(this, \"ownspace_old\");\n        this.$router.push({\n          name: \"ownspace_old\"\n        });\n      } else if (name == \"changePass\") {\n        util.openNewPage(this, \"change_pass\");\n        this.$router.push({\n          name: \"change_pass\"\n        });\n      } else if (name == \"loginout\") {\n        // 退出登录\n        this.$store.commit(\"logout\", this);\n        this.$store.commit(\"clearOpenedSubmenu\");\n        this.setStore(\"accessToken\", \"\"); // 强制刷新页面 重新加载router\n\n        location.reload();\n      }\n    },\n    checkTag: function checkTag(name) {\n      var openpageHasTag = this.pageTagsList.some(function (item) {\n        if (item.name == name) {\n          return true;\n        }\n      });\n\n      if (!openpageHasTag) {\n        //  解决关闭当前标签后再点击回退按钮会退到当前页时没有标签的问题\n        util.openNewPage(this, name, this.$route.params || {}, this.$route.query || {});\n      }\n    },\n    handleSubmenuChange: function handleSubmenuChange(val) {// console.log(val)\n    },\n    beforePush: function beforePush(name) {\n      // console.log(name)\n      return true;\n    },\n    fullscreenChange: function fullscreenChange(isFullScreen) {// console.log(isFullScreen);\n    }\n  },\n  watch: {\n    $route: function $route(to) {\n      this.$store.commit(\"setCurrentPageName\", to.name);\n      var pathArr = util.setCurrentPath(this, to.name);\n\n      if (pathArr.length > 2) {\n        this.$store.commit(\"addOpenSubmenu\", pathArr[1].name);\n      }\n\n      this.checkTag(to.name);\n      localStorage.currentPageName = to.name;\n    },\n    lang: function lang() {\n      util.setCurrentPath(this, this.$route.name); // 在切换语言时用于刷新面包屑\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  created: function created() {\n    // 显示打开的页面的列表\n    this.$store.commit(\"setOpenedList\");\n  }\n};",null]}