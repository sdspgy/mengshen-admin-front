{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/change-pass/change-pass.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/change-pass/change-pass.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { changePass } from \"@/api/index\";\nexport default {\n  name: \"change_pass\",\n  data: function data() {\n    var _this = this;\n\n    var valideRePassword = function valideRePassword(rule, value, callback) {\n      if (value !== _this.editPasswordForm.newPass) {\n        callback(new Error(\"两次输入密码不一致\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      savePassLoading: false,\n      tipStyle: \"password-tip-none\",\n      strength: \"无\",\n      strengthValue: 0,\n      editPasswordForm: {\n        oldPass: \"\",\n        newPass: \"\",\n        rePass: \"\"\n      },\n      passwordValidate: {\n        oldPass: [{\n          required: true,\n          message: \"请输入原密码\",\n          trigger: \"blur\"\n        }],\n        newPass: [{\n          required: true,\n          message: \"请输入新密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          message: \"请至少输入6个字符\",\n          trigger: \"blur\"\n        }, {\n          max: 32,\n          message: \"最多输入32个字符\",\n          trigger: \"blur\"\n        }],\n        rePass: [{\n          required: true,\n          message: \"请再次输入新密码\",\n          trigger: \"blur\"\n        }, {\n          validator: valideRePassword,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    init: function init() {},\n    checkStrengthValue: function checkStrengthValue(v) {\n      // 评级制判断密码强度 最高5\n      var grade = 0;\n\n      if (/\\d/.test(v)) {\n        grade++; //数字\n      }\n\n      if (/[a-z]/.test(v)) {\n        grade++; //小写\n      }\n\n      if (/[A-Z]/.test(v)) {\n        grade++; //大写\n      }\n\n      if (/\\W/.test(v)) {\n        grade++; //特殊字符\n      }\n\n      if (v.length >= 10) {\n        grade++;\n      }\n\n      return grade;\n    },\n    strengthChange: function strengthChange() {\n      if (!this.editPasswordForm.newPass) {\n        this.tipStyle = \"password-tip-none\";\n        this.strength = \"无\";\n        this.strengthValue = 0;\n        return;\n      }\n\n      var grade = this.checkStrengthValue(this.editPasswordForm.newPass);\n\n      if (grade <= 1) {\n        this.tipStyle = \"password-tip-weak\";\n        this.strength = \"弱\";\n        this.strengthValue = 33;\n      } else if (grade >= 2 && grade <= 4) {\n        this.tipStyle = \"password-tip-middle\";\n        this.strength = \"中\";\n        this.strengthValue = 66;\n      } else {\n        this.tipStyle = \"password-tip-strong\";\n        this.strength = \"强\";\n        this.strengthValue = 100;\n      }\n    },\n    saveEditPass: function saveEditPass() {\n      var _this2 = this;\n\n      var params = {\n        password: this.editPasswordForm.oldPass,\n        newPass: this.editPasswordForm.newPass,\n        passStrength: this.strength\n      };\n      this.$refs[\"editPasswordForm\"].validate(function (valid) {\n        if (valid) {\n          _this2.savePassLoading = true;\n          changePass(params).then(function (res) {\n            _this2.savePassLoading = false;\n\n            if (res.success) {\n              _this2.$Modal.success({\n                title: \"修改密码成功\",\n                content: \"修改密码成功，需重新登录\",\n                onOk: function onOk() {\n                  _this2.$store.commit(\"logout\", _this2);\n\n                  _this2.$store.commit(\"clearOpenedSubmenu\");\n\n                  _this2.$router.push({\n                    name: \"login\"\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    cancelEditPass: function cancelEditPass() {\n      this.$store.commit(\"removeTag\", \"change_pass\");\n      localStorage.pageOpenedList = JSON.stringify(this.$store.state.app.pageOpenedList);\n      var lastPageName = \"\";\n      var length = this.$store.state.app.pageOpenedList.length;\n\n      if (length > 1) {\n        lastPageName = this.$store.state.app.pageOpenedList[length - 1].name;\n      } else {\n        lastPageName = this.$store.state.app.pageOpenedList[0].name;\n      }\n\n      this.$router.push({\n        name: lastPageName\n      });\n    }\n  },\n  mounted: function mounted() {}\n};",null]}