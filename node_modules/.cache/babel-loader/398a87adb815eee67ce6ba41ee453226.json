{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/TableHeader.js","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/TableHeader.js","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Checkbox from '../Checkbox/Checkbox'; // eslint-disable-line\n\nimport { mixins } from './utils';\n/* eslint-disable no-underscore-dangle */\n\nexport default {\n  name: 'TreeTable__header',\n  mixins: [mixins],\n  data: function data() {\n    return {};\n  },\n  computed: {\n    table: function table() {\n      return this.$parent;\n    }\n  },\n  methods: {\n    toggleAllChecked: function toggleAllChecked(checked) {\n      this.table.bodyData = this.table.bodyData.map(function (row) {\n        return _objectSpread({}, row, {\n          _isChecked: checked\n        });\n      });\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var h = arguments[0];\n\n    // className\n    function getClassName(type, _ref) {\n      var headerAlign = _ref.headerAlign,\n          key = _ref.key;\n      var certainType = this.validateType(type, ['cell', 'inner'], 'getClassName');\n      var classList = [];\n\n      if (key == \"_normalIndex\") {\n        classList.push(\"\".concat(this.prefixCls, \"--center-cell\"));\n      }\n\n      if (certainType.cell) {\n        classList.push(\"\".concat(this.prefixCls, \"__header-cell\"));\n\n        if (this.table.border) {\n          classList.push(\"\".concat(this.prefixCls, \"--border-cell\"));\n        }\n\n        if (['center', 'right'].indexOf(headerAlign) > -1) {\n          classList.push(\"\".concat(this.prefixCls, \"--\").concat(headerAlign, \"-cell\"));\n        }\n      }\n\n      if (certainType.inner) {\n        classList.push(\"\".concat(this.prefixCls, \"__cell-inner\"));\n\n        if (this.table.treeType && this.table.firstProp === key) {\n          classList.push(\"\".concat(this.prefixCls, \"--firstProp-header-inner\"));\n        }\n      }\n\n      return classList.join(' ');\n    } // 根据type渲染单元格Label\n\n\n    function renderLabel(column, columnIndex) {\n      var _this = this;\n\n      if (this.isSelectionCell(this.table, columnIndex) && this.selectType === 'checkbox') {\n        var allCheck = this.table.bodyData.every(function (row) {\n          return row._isChecked;\n        });\n        var indeterminate = !allCheck && this.table.bodyData.some(function (row) {\n          return row._isChecked;\n        });\n        return h(Checkbox, {\n          \"attrs\": {\n            \"indeterminate\": indeterminate,\n            \"value\": allCheck\n          },\n          \"on\": {\n            \"on-change\": function onChange(checked) {\n              return _this.toggleAllChecked(checked);\n            }\n          }\n        });\n      }\n\n      return column.title ? column.title : '';\n    } // Template\n\n\n    return h(\"table\", {\n      \"attrs\": {\n        \"cellspacing\": \"0\",\n        \"cellpadding\": \"0\",\n        \"border\": \"0\"\n      },\n      \"class\": \"\".concat(this.prefixCls, \"__header\")\n    }, [h(\"colgroup\", [this.table.tableColumns.map(function (column) {\n      return h(\"col\", {\n        \"attrs\": {\n          \"width\": column.computedWidth || column.minWidth || column.width\n        }\n      });\n    })]), h(\"thead\", [h(\"tr\", {\n      \"class\": \"\".concat(this.prefixCls, \"__header-row\")\n    }, [this.table.tableColumns.map(function (column, columnIndex) {\n      return h(\"th\", {\n        \"class\": getClassName.call(_this2, 'cell', column)\n      }, [h(\"div\", {\n        \"class\": getClassName.call(_this2, 'inner', column)\n      }, [renderLabel.call(_this2, column, columnIndex)])]);\n    })])])]);\n  }\n};",{"version":3,"sources":["/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/TableHeader.js"],"names":["Checkbox","mixins","name","data","computed","table","$parent","methods","toggleAllChecked","checked","bodyData","map","row","_isChecked","render","getClassName","type","headerAlign","key","certainType","validateType","classList","push","prefixCls","cell","border","indexOf","inner","treeType","firstProp","join","renderLabel","column","columnIndex","isSelectionCell","selectType","allCheck","every","indeterminate","some","title","tableColumns","computedWidth","minWidth","width","call"],"mappings":"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","sourcesContent":["import Checkbox from '../Checkbox/Checkbox'; // eslint-disable-line\nimport { mixins } from './utils';\n\n/* eslint-disable no-underscore-dangle */\nexport default {\n  name: 'TreeTable__header',\n  mixins: [mixins],\n  data() {\n    return {\n\n    };\n  },\n  computed: {\n    table() {\n      return this.$parent;\n    },\n  },\n  methods: {\n    toggleAllChecked(checked) {\n      this.table.bodyData = this.table.bodyData.map(row => ({\n        ...row,\n        _isChecked: checked,\n      }));\n    },\n  },\n  render() {\n    // className\n    function getClassName(type, { headerAlign, key }) {\n      const certainType = this.validateType(type, ['cell', 'inner'], 'getClassName');\n      const classList = [];\n      if(key==\"_normalIndex\"){\n        classList.push(`${this.prefixCls}--center-cell`);\n      }\n      if (certainType.cell) {\n        classList.push(`${this.prefixCls}__header-cell`);\n        if (this.table.border) {\n          classList.push(`${this.prefixCls}--border-cell`);\n        }\n        if (['center', 'right'].indexOf(headerAlign) > -1) {\n          classList.push(`${this.prefixCls}--${headerAlign}-cell`);\n        }\n      }\n      if (certainType.inner) {\n        classList.push(`${this.prefixCls}__cell-inner`);\n        if (this.table.treeType && this.table.firstProp === key) {\n          classList.push(`${this.prefixCls}--firstProp-header-inner`);\n        }\n      }\n      return classList.join(' ');\n    }\n\n    // 根据type渲染单元格Label\n    function renderLabel(column, columnIndex) {\n      if (this.isSelectionCell(this.table, columnIndex) && this.selectType === 'checkbox') {\n        const allCheck = this.table.bodyData.every(row => row._isChecked);\n        const indeterminate = !allCheck && this.table.bodyData.some(row => row._isChecked);\n        return <Checkbox\n          indeterminate={ indeterminate }\n          value={ allCheck }\n          onOn-change={ checked => this.toggleAllChecked(checked) }\n          ></Checkbox>;\n      }\n      return column.title ? column.title : '';\n    }\n\n    // Template\n    return (\n      <table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" class={ `${this.prefixCls}__header` }>\n        <colgroup>\n          { this.table.tableColumns.map(column =>\n            <col width={ column.computedWidth || column.minWidth || column.width }></col>)\n          }\n        </colgroup>\n        <thead>\n          <tr class={ `${this.prefixCls}__header-row` }>\n            { this.table.tableColumns.map((column, columnIndex) =>\n                <th class={ getClassName.call(this, 'cell', column) }>\n                  <div class={ getClassName.call(this, 'inner', column) }>\n                    { renderLabel.call(this, column, columnIndex) }\n                  </div>\n                </th>)\n            }\n          </tr>\n        </thead>\n      </table>\n    );\n  },\n};\n"]}]}