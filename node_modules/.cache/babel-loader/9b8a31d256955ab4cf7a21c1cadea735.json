{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-awesome/components/Icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-awesome/components/Icon.vue","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar icons = {};\nexport default {\n  name: 'fa-icon',\n  props: {\n    name: {\n      type: String,\n      validator: function validator(val) {\n        if (val && !(val in icons)) {\n          console.warn(\"Invalid prop: prop \\\"name\\\" is referring to an unregistered icon \\\"\".concat(val, \"\\\".\") + \"\\nPlease make sure you have imported this icon before using it.\");\n          return false;\n        }\n\n        return true;\n      }\n    },\n    title: String,\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator: function validator(val) {\n        return val === 'horizontal' || val === 'vertical';\n      }\n    },\n    label: String,\n    tabindex: [Number, String]\n  },\n  data: function data() {\n    return {\n      id: getId(),\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    };\n  },\n  computed: {\n    normalizedScale: function normalizedScale() {\n      var scale = this.scale;\n      scale = typeof scale === 'undefined' ? 1 : Number(scale);\n\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(\"Invalid prop: prop \\\"scale\\\" should be a number over 0.\", this);\n        return this.outerScale;\n      }\n\n      return scale * this.outerScale;\n    },\n    klass: function klass() {\n      return _defineProperty({\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse\n      }, this.$options.name, true);\n    },\n    icon: function icon() {\n      if (this.name) {\n        return icons[this.name];\n      }\n\n      return null;\n    },\n    box: function box() {\n      if (this.icon) {\n        return \"0 0 \".concat(this.icon.width, \" \").concat(this.icon.height);\n      }\n\n      return \"0 0 \".concat(this.width, \" \").concat(this.height);\n    },\n    ratio: function ratio() {\n      if (!this.icon) {\n        return 1;\n      }\n\n      var _this$icon = this.icon,\n          width = _this$icon.width,\n          height = _this$icon.height;\n      return Math.max(width, height) / 16;\n    },\n    width: function width() {\n      return this.childrenWidth || this.icon && this.icon.width / this.ratio * this.normalizedScale || 0;\n    },\n    height: function height() {\n      return this.childrenHeight || this.icon && this.icon.height / this.ratio * this.normalizedScale || 0;\n    },\n    style: function style() {\n      if (this.normalizedScale === 1) {\n        return false;\n      }\n\n      return {\n        fontSize: this.normalizedScale + 'em'\n      };\n    },\n    raw: function raw() {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null;\n      }\n\n      var raw = this.icon.raw;\n      var ids = {};\n      raw = raw.replace(/\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g, function (match, quote, id) {\n        var uniqueId = getId();\n        ids[id] = uniqueId;\n        return \" id=\\\"\".concat(uniqueId, \"\\\"\");\n      });\n      raw = raw.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, function (match, rawId, _, pointerId) {\n        var id = rawId || pointerId;\n\n        if (!id || !ids[id]) {\n          return match;\n        }\n\n        return \"#\".concat(ids[id]);\n      });\n      return raw;\n    },\n    focusable: function focusable() {\n      var tabindex = this.tabindex;\n\n      if (tabindex == null) {\n        return 'false';\n      }\n\n      var index = typeof tabindex === 'string' ? parseInt(tabindex, 10) : tabindex;\n\n      if (index >= 0) {\n        return null;\n      }\n\n      return 'false';\n    }\n  },\n  mounted: function mounted() {\n    this.updateStack();\n  },\n  updated: function updated() {\n    this.updateStack();\n  },\n  methods: {\n    updateStack: function updateStack() {\n      var _this = this;\n\n      if (!this.name && this.name !== null && this.$children.length === 0) {\n        console.warn(\"Invalid prop: prop \\\"name\\\" is required.\");\n        return;\n      }\n\n      if (this.icon) {\n        return;\n      }\n\n      var width = 0;\n      var height = 0;\n      this.$children.forEach(function (child) {\n        child.outerScale = _this.normalizedScale;\n        width = Math.max(width, child.width);\n        height = Math.max(height, child.height);\n      });\n      this.childrenWidth = width;\n      this.childrenHeight = height;\n      this.$children.forEach(function (child) {\n        child.x = (width - child.width) / 2;\n        child.y = (height - child.height) / 2;\n      });\n    }\n  },\n  render: function render(h) {\n    if (this.name === null) {\n      return h();\n    }\n\n    var options = {\n      class: this.klass,\n      style: this.style,\n      attrs: {\n        role: this.$attrs.role || (this.label || this.title ? 'img' : null),\n        'aria-label': this.label || null,\n        'aria-hidden': String(!(this.label || this.title)),\n        tabindex: this.tabindex,\n        x: this.x,\n        y: this.y,\n        width: this.width,\n        height: this.height,\n        viewBox: this.box,\n        focusable: this.focusable\n      }\n    };\n    var titleId = \"vat-\".concat(this.id);\n\n    if (this.title) {\n      options.attrs['aria-labelledby'] = titleId;\n    }\n\n    if (this.raw) {\n      var html = this.raw;\n\n      if (this.title) {\n        html = \"<title id=\\\"\".concat(titleId, \"\\\">\").concat(escapeHTML(this.title), \"</title>\").concat(html);\n      }\n\n      options.domProps = {\n        innerHTML: html\n      };\n    }\n\n    var content = this.title ? [h('title', {\n      attrs: {\n        id: titleId\n      }\n    }, this.title)] : [];\n    return h('svg', options, this.raw ? null : content.concat(this.$slots.default || [].concat(_toConsumableArray(this.icon.paths.map(function (path, i) {\n      return h('path', {\n        attrs: path,\n        key: \"path-\".concat(i)\n      });\n    })), _toConsumableArray(this.icon.polygons.map(function (polygon, i) {\n      return h('polygon', {\n        attrs: polygon,\n        key: \"polygon-\".concat(i)\n      });\n    })))));\n  },\n  register: function register(data) {\n    for (var name in data) {\n      var icon = data[name];\n      var _icon$paths = icon.paths,\n          paths = _icon$paths === void 0 ? [] : _icon$paths,\n          d = icon.d,\n          _icon$polygons = icon.polygons,\n          polygons = _icon$polygons === void 0 ? [] : _icon$polygons,\n          points = icon.points;\n\n      if (d) {\n        paths.push({\n          d: d\n        });\n      }\n\n      if (points) {\n        polygons.push({\n          points: points\n        });\n      }\n\n      icons[name] = assign({}, icon, {\n        paths: paths,\n        polygons: polygons\n      });\n    }\n  },\n  icons: icons\n};\n\nfunction assign(obj) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        obj[key] = source[key];\n      }\n    }\n  });\n  return obj;\n}\n\nvar cursor = 0xd4937;\n\nfunction getId() {\n  return \"va-\".concat((cursor++).toString(16));\n}\n\nvar ESCAPE_MAP = {\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '&': '&amp;'\n};\n\nfunction escapeHTML(html) {\n  return html.replace(/[<>\"&]/g, function (c) {\n    return ESCAPE_MAP[c] || c;\n  });\n}",null]}