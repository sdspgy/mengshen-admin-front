{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/TableHeader.js","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/TableHeader.js","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Checkbox from '../Checkbox/Checkbox'; // eslint-disable-line\n\nimport { mixins } from './utils';\n/* eslint-disable no-underscore-dangle */\n\nexport default {\n  name: 'TreeTable__header',\n  mixins: [mixins],\n  data: function data() {\n    return {};\n  },\n  computed: {\n    table: function table() {\n      return this.$parent;\n    }\n  },\n  methods: {\n    toggleAllChecked: function toggleAllChecked(checked) {\n      this.table.bodyData = this.table.bodyData.map(function (row) {\n        return _objectSpread({}, row, {\n          _isChecked: checked\n        });\n      });\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var h = arguments[0];\n\n    // className\n    function getClassName(type, _ref) {\n      var headerAlign = _ref.headerAlign,\n          key = _ref.key;\n      var certainType = this.validateType(type, ['cell', 'inner'], 'getClassName');\n      var classList = [];\n\n      if (key == \"_normalIndex\") {\n        classList.push(\"\".concat(this.prefixCls, \"--center-cell\"));\n      }\n\n      if (certainType.cell) {\n        classList.push(\"\".concat(this.prefixCls, \"__header-cell\"));\n\n        if (this.table.border) {\n          classList.push(\"\".concat(this.prefixCls, \"--border-cell\"));\n        }\n\n        if (['center', 'right'].indexOf(headerAlign) > -1) {\n          classList.push(\"\".concat(this.prefixCls, \"--\").concat(headerAlign, \"-cell\"));\n        }\n      }\n\n      if (certainType.inner) {\n        classList.push(\"\".concat(this.prefixCls, \"__cell-inner\"));\n\n        if (this.table.treeType && this.table.firstProp === key) {\n          classList.push(\"\".concat(this.prefixCls, \"--firstProp-header-inner\"));\n        }\n      }\n\n      return classList.join(' ');\n    } // 根据type渲染单元格Label\n\n\n    function renderLabel(column, columnIndex) {\n      var _this = this;\n\n      if (this.isSelectionCell(this.table, columnIndex) && this.selectType === 'checkbox') {\n        var allCheck = this.table.bodyData.every(function (row) {\n          return row._isChecked;\n        });\n        var indeterminate = !allCheck && this.table.bodyData.some(function (row) {\n          return row._isChecked;\n        });\n        return h(Checkbox, {\n          \"attrs\": {\n            \"indeterminate\": indeterminate,\n            \"value\": allCheck\n          },\n          \"on\": {\n            \"on-change\": function onChange(checked) {\n              return _this.toggleAllChecked(checked);\n            }\n          }\n        });\n      }\n\n      return column.title ? column.title : '';\n    } // Template\n\n\n    return h(\"table\", {\n      \"attrs\": {\n        \"cellspacing\": \"0\",\n        \"cellpadding\": \"0\",\n        \"border\": \"0\"\n      },\n      \"class\": \"\".concat(this.prefixCls, \"__header\")\n    }, [h(\"colgroup\", [this.table.tableColumns.map(function (column) {\n      return h(\"col\", {\n        \"attrs\": {\n          \"width\": column.computedWidth || column.minWidth || column.width\n        }\n      });\n    })]), h(\"thead\", [h(\"tr\", {\n      \"class\": \"\".concat(this.prefixCls, \"__header-row\")\n    }, [this.table.tableColumns.map(function (column, columnIndex) {\n      return h(\"th\", {\n        \"class\": getClassName.call(_this2, 'cell', column)\n      }, [h(\"div\", {\n        \"class\": getClassName.call(_this2, 'inner', column)\n      }, [renderLabel.call(_this2, column, columnIndex)])]);\n    })])])]);\n  }\n};",null]}