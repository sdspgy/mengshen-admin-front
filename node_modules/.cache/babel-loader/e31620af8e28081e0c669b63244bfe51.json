{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/game/time-manager/timeManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/game/time-manager/timeManager.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getServerTime as _getServerTime, updateServerTime as _updateServerTime } from \"@/api/index\";\nimport util from \"../../../libs/util\";\nexport default {\n  name: \"timeManager\",\n  data: function data() {\n    return {\n      timeVal: '',\n      nowTimes: [],\n      results: [],\n      nowTimeColumns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"服务器名称\",\n        key: \"name\",\n        align: \"center\",\n        width: 150\n      }, {\n        title: \"服务器地址\",\n        key: \"address\",\n        align: \"center\",\n        width: 150\n      }, {\n        title: \"端口\",\n        key: \"port\",\n        align: \"center\",\n        width: 100\n      }, {\n        title: \"请求url\",\n        key: \"requestUrl\",\n        align: \"center\",\n        width: 200\n      }, {\n        title: \"请求状态\",\n        key: \"success\",\n        align: \"center\",\n        width: 100\n      }, {\n        title: \"时间 or 错误信息\",\n        key: \"msg\",\n        align: \"center\",\n        width: 300,\n        render: function render(h, params) {\n          var msgOrTime = params.row.msg;\n\n          if (params.row.success) {\n            msgOrTime = util.Time2DefaultFormat(JSON.parse(params.row.msg).data.now);\n          }\n\n          return h(\"div\", msgOrTime);\n        }\n      }],\n      resultColumns: [{\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"服务器名称\",\n        key: \"name\",\n        align: \"center\",\n        width: 150\n      }, {\n        title: \"服务器地址\",\n        key: \"address\",\n        align: \"center\",\n        width: 150\n      }, {\n        title: \"端口\",\n        key: \"port\",\n        align: \"center\",\n        width: 100\n      }, {\n        title: \"请求url\",\n        key: \"requestUrl\",\n        align: \"center\",\n        width: 200\n      }, {\n        title: \"请求状态\",\n        key: \"success\",\n        align: \"center\",\n        width: 100\n      }, {\n        title: \"返回信息\",\n        key: \"msg\",\n        align: \"center\",\n        width: 300\n      }]\n    };\n  },\n  methods: {\n    getServerTime: function getServerTime() {\n      var _this = this;\n\n      _getServerTime().then(function (res) {\n        _this.timeVal = new Date(JSON.parse(res.nowMaster).data.now);\n        _this.nowTimes = res.nowChildrenTimes;\n      });\n    },\n    updateServerTime: function updateServerTime(reset) {\n      var _this2 = this;\n\n      _updateServerTime({\n        newTime: util.formatDate(new Date(this.timeVal), 'yyyy-MM-dd HH:mm:ss'),\n        reset: reset\n      }).then(function (res) {\n        _this2.results = [];\n\n        _this2.getServerTime();\n\n        _this2.$Message.success(\"操作成功\");\n\n        _this2.results = res.result;\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getServerTime();\n  }\n};",{"version":3,"sources":["timeManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SACA,aAAA,IAAA,cADA,EAEA,gBAAA,IAAA,iBAFA,QAGA,aAHA;AAIA,OAAA,IAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,cAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,GAAA,EAAA,YAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,KAAA,EAAA,YAAA;AAAA,QAAA,GAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,GAAA;AAAA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,SAAA,GAAA,MAAA,CAAA,GAAA,CAAA,GAAA;;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,OAAA,EAAA;AACA,YAAA,SAAA,GAAA,IAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,GAAA,CAAA;AACA;;AACA,iBAAA,CAAA,CAAA,KAAA,EAAA,SAAA,CAAA;AACA;AANA,OAPA,CAJA;AAmBA,MAAA,aAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,GAAA,EAAA,YAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,GAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAPA;AAnBA,KAAA;AA6BA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,MAAA,cAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,SAAA,EAAA,IAAA,CAAA,GAAA,CAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,gBAAA;AACA,OAHA;AAKA,KAPA;AAQA,IAAA,gBARA,4BAQA,KARA,EAQA;AAAA;;AACA,MAAA,iBAAA,CAAA;AAAA,QAAA,OAAA,EAAA,IAAA,CAAA,UAAA,CAAA,IAAA,IAAA,CAAA,KAAA,OAAA,CAAA,EAAA,qBAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,EAAA;;AACA,QAAA,MAAA,CAAA,aAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,MAAA;AAGA,OAPA;AAQA;AAjBA,GAjCA;AAoDA,EAAA,OApDA,qBAoDA;AACA,SAAA,aAAA;AACA;AAtDA,CAAA","sourcesContent":["<template>\n  <div>\n    主服务器时间：<DatePicker type=\"datetime\" placeholder=\"选择日期时间\" style=\"width: 200px\" :value=\"timeVal\" @on-change=\"timeVal=$event\" format=\"yyyy-MM-dd HH:mm:ss\"></DatePicker>\n    <Button type=\"primary\" @click=\"updateServerTime('')\">修改所有服务器时间</Button>\n    <Button type=\"error\" @click=\"updateServerTime('1')\">重置所有服务器时间</Button>\n\n    <div v-show=\"nowTimes.length>0\">\n      <h2>子服务器当前时间</h2>\n      <Row>\n        <Table border :columns=\"nowTimeColumns\" :data=\"nowTimes\" ref=\"table\"></Table>\n      </Row>\n    </div>\n\n    <div v-show=\"results.length>0\">\n      <h2>修改服务器时间results</h2>\n      <Row>\n        <Table border :columns=\"resultColumns\" :data=\"results\" ref=\"table\"></Table>\n      </Row>\n    </div>\n\n\n  </div>\n\n</template>\n\n<script>\n    import {\n        getServerTime,\n        updateServerTime\n    } from \"@/api/index\";\n    import util from \"../../../libs/util\";\n\n    export default {\n        name: \"timeManager\",\n        data() {\n            return {\n                timeVal: '',\n                nowTimes: [],\n                results:[],\n                nowTimeColumns: [\n                    {type: \"index\", width: 60, align: \"center\"},\n                    {title: \"服务器名称\", key: \"name\", align: \"center\", width: 150},\n                    {title: \"服务器地址\", key: \"address\", align: \"center\", width: 150,},\n                    {title: \"端口\", key: \"port\", align: \"center\", width: 100,},\n                    {title: \"请求url\", key: \"requestUrl\", align: \"center\", width: 200,},\n                    {title: \"请求状态\", key: \"success\", align: \"center\", width: 100,},\n                    {title: \"时间 or 错误信息\", key: \"msg\", align: \"center\", width: 300,render: (h, params) => {\n                        let msgOrTime = params.row.msg;\n                            if (params.row.success) {\n                                msgOrTime = util.Time2DefaultFormat(JSON.parse(params.row.msg).data.now);\n                            }\n                            return h(\"div\", msgOrTime);\n                        }},\n                ],\n                resultColumns: [\n                    {type: \"index\", width: 60, align: \"center\"},\n                    {title: \"服务器名称\", key: \"name\", align: \"center\", width: 150},\n                    {title: \"服务器地址\", key: \"address\", align: \"center\", width: 150,},\n                    {title: \"端口\", key: \"port\", align: \"center\", width: 100,},\n                    {title: \"请求url\", key: \"requestUrl\", align: \"center\", width: 200,},\n                    {title: \"请求状态\", key: \"success\", align: \"center\", width: 100,},\n                    {title: \"返回信息\", key: \"msg\", align: \"center\", width: 300,},\n                ],\n            };\n        },\n        methods: {\n            getServerTime() {\n                getServerTime().then(res => {\n                    this.timeVal = new Date(JSON.parse(res.nowMaster).data.now);\n                    this.nowTimes = res.nowChildrenTimes;\n                    }\n                );\n            },\n            updateServerTime(reset){\n                updateServerTime({newTime:util.formatDate(new Date(this.timeVal),'yyyy-MM-dd HH:mm:ss'),reset:reset}).then(res =>{\n                    this.results = [];\n                    this.getServerTime();\n                    this.$Message.success(\"操作成功\");\n                    this.results = res.result;\n\n\n                });\n            }\n        },\n        mounted() {\n            this.getServerTime();\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/game/time-manager"}]}