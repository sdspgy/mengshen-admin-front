{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/Table.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\nimport TableFooter from './TableFooter';\nimport { mixins, scrollBarWidth as getSbw } from './utils';\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable no-param-reassign */\n// function getBodyData(data, isTreeType, childrenProp, isFold, level = 1) {\n\nfunction getBodyData(primaryKey, oldBodyData, data, isTreeType, childrenProp, isFold, parentFold) {\n  var level = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\n  var bodyData = [];\n  data.forEach(function (row, index) {\n    var children = row[childrenProp];\n    var childrenLen = Object.prototype.toString.call(children).slice(8, -1) === 'Array' ? children.length : 0;\n    var curIsFold = isFold;\n\n    if (isFold && typeof primaryKey === 'string' && Array.isArray(oldBodyData)) {\n      for (var i = 0; i < oldBodyData.length; i++) {\n        var oldRow = oldBodyData[i];\n\n        if (oldRow[primaryKey] === row[primaryKey]) {\n          if ('_isFold' in oldRow) {\n            curIsFold = oldRow._isFold;\n          }\n\n          break;\n        }\n      }\n    }\n\n    bodyData.push(_objectSpread({\n      _isHover: false,\n      _isExpanded: false,\n      _isChecked: false,\n      _level: level,\n      // _isHide: isFold ? level !== 1 : false,\n      // _isFold: isFold,\n      _isHide: level !== 1 ? isFold && parentFold : false,\n      _isFold: isFold && curIsFold,\n      _childrenLen: childrenLen,\n      _normalIndex: index + 1\n    }, row));\n\n    if (isTreeType) {\n      if (childrenLen > 0) {\n        // bodyData = bodyData.concat(getBodyData(children, true, childrenProp, isFold, level + 1));\n        bodyData = bodyData.concat(getBodyData(primaryKey, oldBodyData, children, true, childrenProp, isFold, curIsFold, level + 1));\n      }\n    }\n  });\n  return bodyData;\n}\n\nfunction initialState(table, expandKey) {\n  return {\n    bodyHeight: 'auto',\n    firstProp: expandKey || table.columns[0] && table.columns[0].key,\n    // bodyData: getBodyData(table.data, table.treeType, table.childrenProp, table.isFold),\n    bodyData: getBodyData(table.primaryKey, table.bodyData, table.data, table.treeType, table.childrenProp, table.isFold, false)\n  };\n}\n\nfunction initialColumns(table, clientWidth) {\n  var columnsWidth = 0;\n  var minWidthColumns = [];\n  var otherColumns = [];\n  var columns = table.columns.concat();\n\n  if (table.expandType) {\n    columns.unshift({\n      width: '50'\n    });\n  }\n\n  if (table.selectable) {\n    columns.unshift({\n      width: '50'\n    });\n  }\n\n  if (table.showIndex) {\n    columns.unshift({\n      width: '50px',\n      key: '_normalIndex',\n      title: table.indexText\n    });\n  }\n\n  columns.forEach(function (column, index) {\n    var width = '';\n    var minWidth = '';\n\n    if (!column.width) {\n      if (column.minWidth) {\n        minWidth = typeof column.minWidth === 'number' ? column.minWidth : parseInt(column.minWidth, 10);\n      } else {\n        minWidth = 80;\n      }\n\n      minWidthColumns.push(_objectSpread({}, column, {\n        minWidth: minWidth,\n        _index: index\n      }));\n    } else {\n      width = typeof column.width === 'number' ? column.width : parseInt(column.width, 10);\n      otherColumns.push(_objectSpread({}, column, {\n        width: width,\n        _index: index\n      }));\n    }\n\n    columnsWidth += minWidth || width;\n  });\n  var scrollBarWidth = getSbw();\n  var totalWidth = columnsWidth + scrollBarWidth;\n  var isScrollX = totalWidth > clientWidth;\n\n  if (!isScrollX) {\n    var extraWidth = clientWidth - totalWidth;\n    var averageExtraWidth = Math.floor(extraWidth / minWidthColumns.length);\n    minWidthColumns.forEach(function (column) {\n      column.computedWidth = column.minWidth + averageExtraWidth;\n    });\n  }\n\n  var tableColumns = otherColumns.concat(minWidthColumns);\n  tableColumns.sort(function (a, b) {\n    return a._index - b._index;\n  });\n  return tableColumns;\n}\n\nexport default {\n  name: 'TreeTable',\n  mixins: [mixins],\n  components: {\n    TableHeader: TableHeader,\n    TableBody: TableBody,\n    TableFooter: TableFooter\n  },\n  props: {\n    data: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    columns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    maxHeight: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    stripe: {\n      type: Boolean,\n      default: false\n    },\n    border: {\n      type: Boolean,\n      default: false\n    },\n    treeType: {\n      type: Boolean,\n      default: true\n    },\n    childrenProp: {\n      type: String,\n      default: 'children'\n    },\n    isFold: {\n      type: Boolean,\n      default: true\n    },\n    expandType: {\n      type: Boolean,\n      default: true\n    },\n    selectable: {\n      type: Boolean,\n      default: true\n    },\n    selectType: {\n      type: String,\n      default: 'checkbox'\n    },\n    emptyText: {\n      type: String,\n      default: '暂无数据'\n    },\n    showHeader: {\n      type: Boolean,\n      default: true\n    },\n    showIndex: {\n      type: Boolean,\n      default: false\n    },\n    indexText: {\n      type: String,\n      default: '#'\n    },\n    showSummary: {\n      type: Boolean,\n      default: false\n    },\n    sumText: {\n      type: String,\n      default: '合计'\n    },\n    primaryKey: String,\n    summaryMethod: Function,\n    showRowHover: {\n      type: Boolean,\n      default: true\n    },\n    rowKey: Function,\n    rowClassName: [String, Function],\n    cellClassName: [String, Function],\n    rowStyle: [Object, Function],\n    cellStyle: [Object, Function],\n    expandKey: String\n  },\n  data: function data() {\n    return _objectSpread({\n      computedWidth: '',\n      computedHeight: '',\n      tableColumns: []\n    }, initialState(this, this.expandKey));\n  },\n  computed: {\n    bodyWrapperStyle: function bodyWrapperStyle() {\n      return {\n        height: this.bodyHeight\n      };\n    },\n    tableClass: function tableClass() {\n      return _defineProperty({}, \"\".concat(this.prefixCls, \"--border\"), this.border);\n    },\n    bodyClass: function bodyClass() {\n      return _defineProperty({}, \"\".concat(this.prefixCls, \"--stripe\"), this.stripe);\n    }\n  },\n  methods: {\n    handleEvent: function handleEvent(type, $event) {\n      this.validateType(type, ['header', 'body', 'footer'], 'handleEvent');\n      var eventType = $event.type;\n\n      if (eventType === 'scroll') {\n        this.$refs['header-wrapper'].scrollLeft = $event.target.scrollLeft;\n        this.$refs['footer-wrapper'].scrollLeft = $event.target.scrollLeft;\n      }\n\n      if (eventType === 'mousewheel') {\n        var deltaX = $event.deltaX;\n        var $body = this.$refs['body-wrapper'];\n\n        if (deltaX > 0) {\n          $body.scrollLeft += 10;\n        } else {\n          $body.scrollLeft -= 10;\n        }\n      }\n\n      return this.$emit(\"\".concat(type, \"-\").concat(eventType), $event);\n    },\n    // computedWidth, computedHeight, tableColumns\n    measure: function measure() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        var _this$$el = _this.$el,\n            clientWidth = _this$$el.clientWidth,\n            clientHeight = _this$$el.clientHeight;\n        _this.computedWidth = clientWidth + 2;\n        _this.computedHeight = clientHeight + 2;\n        var maxHeight = parseInt(_this.maxHeight, 10);\n\n        if (_this.maxHeight !== 'auto' && _this.computedHeight > maxHeight) {\n          _this.bodyHeight = \"\".concat(maxHeight - 83, \"px\");\n        }\n\n        _this.tableColumns = initialColumns(_this, clientWidth);\n      });\n    },\n    getCheckedProp: function getCheckedProp() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'index';\n\n      if (!this.selectable) {\n        return [];\n      }\n\n      var checkedIndexs = [];\n      this.bodyData.forEach(function (item, index) {\n        if (item._isChecked) {\n          if (key === 'index') {\n            checkedIndexs.push(index);\n          } else {\n            checkedIndexs.push(item[key]);\n          }\n        }\n      });\n      return checkedIndexs;\n    }\n  },\n  watch: {\n    $props: {\n      deep: true,\n      handler: function handler() {\n        Object.assign(this.$data, initialState(this, this.expandKey));\n      }\n    }\n  },\n  updated: function updated() {\n    this.measure();\n  },\n  mounted: function mounted() {\n    this.measure();\n    window.addEventListener('resize', this.measure);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.measure);\n  }\n};",{"version":3,"sources":["Table.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n  <div\n    v-if=\"columns.length > 0\"\n    ref=\"table\"\n    :class=\"[prefixCls, tableClass]\">\n    <Spin fix v-if=\"loading\"></Spin>\n    <div\n      v-show=\"showHeader\"\n      ref=\"header-wrapper\"\n      :class=\"`${prefixCls}__header-wrapper`\"\n      @mousewheel=\"handleEvent('header', $event)\">\n      <table-header\n        ref=\"table-header\">\n      </table-header>\n    </div>\n    <div\n      ref=\"body-wrapper\"\n      :style=\"bodyWrapperStyle\"\n      :class=\"`${prefixCls}__body-wrapper`\"\n      @scroll=\"handleEvent('body', $event)\">\n      <table-body\n        ref=\"table-body\"\n        :class=\"bodyClass\">\n      </table-body>\n    </div>\n    <div\n      v-show=\"showSummary && data.length > 0\"\n      ref=\"footer-wrapper\"\n      :class=\"`${prefixCls}__footer-wrapper`\"\n      @mousewheel=\"handleEvent('footer', $event)\">\n      <table-footer\n        ref=\"table-footer\">\n      </table-footer>\n    </div>\n  </div>\n</template>\n\n<script>\n  import TableHeader from './TableHeader';\n  import TableBody from './TableBody';\n  import TableFooter from './TableFooter';\n  import { mixins, scrollBarWidth as getSbw } from './utils';\n\n  /* eslint-disable no-underscore-dangle */\n  /* eslint-disable no-param-reassign */\n\n  // function getBodyData(data, isTreeType, childrenProp, isFold, level = 1) {\n  function getBodyData(primaryKey, oldBodyData, data, isTreeType, childrenProp, isFold,parentFold, level = 1) {\n    let bodyData = [];\n    data.forEach((row, index) => {\n      const children = row[childrenProp];\n      const childrenLen = Object.prototype.toString.call(children).slice(8, -1) === 'Array' ? children.length : 0;\n      let curIsFold = isFold;\n      if (isFold && typeof primaryKey === 'string' && Array.isArray(oldBodyData)) {\n        for (let i = 0; i < oldBodyData.length; i++) {\n          const oldRow = oldBodyData[i];\n          if (oldRow[primaryKey] === row[primaryKey]) {\n            if ('_isFold' in oldRow) {\n              curIsFold = oldRow._isFold;\n            }\n            break;\n          }\n        }\n      }\n      bodyData.push({\n        _isHover: false,\n        _isExpanded: false,\n        _isChecked: false,\n        _level: level,\n        // _isHide: isFold ? level !== 1 : false,\n        // _isFold: isFold,\n        _isHide: (level !== 1) ? (isFold && parentFold) : false,\n        _isFold: isFold && curIsFold,\n        _childrenLen: childrenLen,\n        _normalIndex: index + 1,\n        ...row,\n      });\n      if (isTreeType) {\n        if (childrenLen > 0) {\n          // bodyData = bodyData.concat(getBodyData(children, true, childrenProp, isFold, level + 1));\n          bodyData = bodyData.concat(getBodyData(primaryKey, oldBodyData, children, true, childrenProp, isFold, curIsFold, level + 1));\n        }\n      }\n    });\n    return bodyData;\n  }\n\n  function initialState(table, expandKey) {\n    return {\n      bodyHeight: 'auto',\n      firstProp: expandKey || (table.columns[0] && table.columns[0].key),\n      // bodyData: getBodyData(table.data, table.treeType, table.childrenProp, table.isFold),\n      bodyData: getBodyData(table.primaryKey, table.bodyData, table.data, table.treeType, table.childrenProp, table.isFold, false),\n    };\n  }\n\n  function initialColumns(table, clientWidth) {\n    let columnsWidth = 0;\n    const minWidthColumns = [];\n    const otherColumns = [];\n    const columns = table.columns.concat();\n    if (table.expandType) {\n      columns.unshift({\n        width: '50',\n      });\n    }\n    if (table.selectable) {\n      columns.unshift({\n        width: '50',\n      });\n    }\n    if (table.showIndex) {\n      columns.unshift({\n        width: '50px',\n        key: '_normalIndex',\n        title: table.indexText,\n      });\n    }\n    columns.forEach((column, index) => {\n      let width = '';\n      let minWidth = '';\n      if (!column.width) {\n        if (column.minWidth) {\n          minWidth = typeof column.minWidth === 'number' ? column.minWidth : parseInt(column.minWidth, 10);\n        } else {\n          minWidth = 80;\n        }\n        minWidthColumns.push({\n          ...column,\n          minWidth,\n          _index: index,\n        });\n      } else {\n        width = typeof column.width === 'number' ? column.width : parseInt(column.width, 10);\n        otherColumns.push({\n          ...column,\n          width,\n          _index: index,\n        });\n      }\n      columnsWidth += minWidth || width;\n    });\n    const scrollBarWidth = getSbw();\n    const totalWidth = columnsWidth + scrollBarWidth;\n    const isScrollX = totalWidth > clientWidth;\n    if (!isScrollX) {\n      const extraWidth = clientWidth - totalWidth;\n      const averageExtraWidth = Math.floor(extraWidth / minWidthColumns.length);\n      minWidthColumns.forEach((column) => {\n        column.computedWidth = column.minWidth + averageExtraWidth;\n      });\n    }\n    const tableColumns = otherColumns.concat(minWidthColumns);\n    tableColumns.sort((a, b) => a._index - b._index);\n    return tableColumns;\n  }\n\n  export default {\n    name: 'TreeTable',\n    mixins: [mixins],\n    components: {\n      TableHeader,\n      TableBody,\n      TableFooter,\n    },\n    props: {\n      data: {\n        type: Array,\n        default: () => [],\n      },\n      columns: {\n        type: Array,\n        default: () => [],\n      },\n      loading: {\n        type: Boolean,\n        default: false,\n      },\n      maxHeight: {\n        type: [String, Number],\n        default: 'auto',\n      },\n      stripe: {\n        type: Boolean,\n        default: false,\n      },\n      border: {\n        type: Boolean,\n        default: false,\n      },\n      treeType: {\n        type: Boolean,\n        default: true,\n      },\n      childrenProp: {\n        type: String,\n        default: 'children',\n      },\n      isFold: {\n        type: Boolean,\n        default: true,\n      },\n      expandType: {\n        type: Boolean,\n        default: true,\n      },\n      selectable: {\n        type: Boolean,\n        default: true,\n      },\n      selectType: {\n        type: String,\n        default: 'checkbox',\n      },\n      emptyText: {\n        type: String,\n        default: '暂无数据',\n      },\n      showHeader: {\n        type: Boolean,\n        default: true,\n      },\n      showIndex: {\n        type: Boolean,\n        default: false,\n      },\n      indexText: {\n        type: String,\n        default: '#',\n      },\n      showSummary: {\n        type: Boolean,\n        default: false,\n      },\n      sumText: {\n        type: String,\n        default: '合计',\n      },\n      primaryKey: String,\n      summaryMethod: Function,\n      showRowHover: {\n        type: Boolean,\n        default: true,\n      },\n      rowKey: Function,\n      rowClassName: [String, Function],\n      cellClassName: [String, Function],\n      rowStyle: [Object, Function],\n      cellStyle: [Object, Function],\n      expandKey: String,\n    },\n    data() {\n      return {\n        computedWidth: '',\n        computedHeight: '',\n        tableColumns: [],\n        ...initialState(this, this.expandKey),\n      };\n    },\n    computed: {\n      bodyWrapperStyle() {\n        return {\n          height: this.bodyHeight,\n        };\n      },\n      tableClass() {\n        return {\n          [`${this.prefixCls}--border`]: this.border,\n        };\n      },\n      bodyClass() {\n        return {\n          [`${this.prefixCls}--stripe`]: this.stripe,\n        };\n      },\n    },\n    methods: {\n      handleEvent(type, $event) {\n        this.validateType(type, ['header', 'body', 'footer'], 'handleEvent');\n        const eventType = $event.type;\n        if (eventType === 'scroll') {\n          this.$refs['header-wrapper'].scrollLeft = $event.target.scrollLeft;\n          this.$refs['footer-wrapper'].scrollLeft = $event.target.scrollLeft;\n        }\n        if (eventType === 'mousewheel') {\n          const deltaX = $event.deltaX;\n          const $body = this.$refs['body-wrapper'];\n          if (deltaX > 0) {\n            $body.scrollLeft += 10;\n          } else {\n            $body.scrollLeft -= 10;\n          }\n        }\n        return this.$emit(`${type}-${eventType}`, $event);\n      },\n      // computedWidth, computedHeight, tableColumns\n      measure() {\n        this.$nextTick(() => {\n          const { clientWidth, clientHeight } = this.$el;\n          this.computedWidth = clientWidth + 2;\n          this.computedHeight = clientHeight + 2;\n\n          const maxHeight = parseInt(this.maxHeight, 10);\n          if (this.maxHeight !== 'auto' && this.computedHeight > maxHeight) {\n            this.bodyHeight = `${maxHeight - 83}px`;\n          }\n          this.tableColumns = initialColumns(this, clientWidth);\n        });\n      },\n      getCheckedProp(key = 'index') {\n        if (!this.selectable) {\n          return [];\n        }\n        const checkedIndexs = [];\n        this.bodyData.forEach((item, index) => {\n          if (item._isChecked) {\n            if (key === 'index') {\n              checkedIndexs.push(index);\n            } else {\n              checkedIndexs.push(item[key]);\n            }\n          }\n        });\n        return checkedIndexs;\n      },\n    },\n    watch: {\n      $props: {\n        deep: true,\n        handler() {\n          Object.assign(this.$data, initialState(this, this.expandKey));\n        },\n      },\n    },\n    updated() {\n      this.measure();\n    },\n    mounted() {\n      this.measure();\n      window.addEventListener('resize', this.measure);\n    },\n    beforeDestroy() {\n      window.removeEventListener('resize', this.measure);\n    },\n  };\n</script>\n\n<style lang=\"less\" src=\"./Table.less\"></style>\n"],"sourceRoot":"src/views/my-components/tree-table/Table"}]}