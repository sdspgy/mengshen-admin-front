{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/user-manage/userManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/user-manage/userManage.vue","mtime":1577936875615},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getUserListData, getAllRoleList, addUser, editUser, enableUser, disableUser, deleteUser, getAllUserData, resetUserPass } from \"@/api/index\";\nimport expandRow from \"./expand.vue\";\nimport { validateMobile, validatePassword } from \"@/libs/validate\";\nimport uploadPicInput from \"../../my-components/rbac/upload-pic-input\";\nimport circleLoading from \"../../my-components/circle-loading.vue\";\nimport checkPassword from \"@/views/my-components/rbac/check-password\";\nexport default {\n  name: \"user-manage\",\n  components: {\n    circleLoading: circleLoading,\n    expandRow: expandRow,\n    uploadPicInput: uploadPicInput,\n    checkPassword: checkPassword\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      loading: true,\n      operationLoading: false,\n      loadingExport: true,\n      modalExportAll: false,\n      drop: false,\n      dropDownContent: \"展开\",\n      dropDownIcon: \"ios-arrow-down\",\n      selectCount: 0,\n      selectList: [],\n      dataDep: [],\n      searchKey: \"\",\n      searchForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      selectDate: null,\n      modalType: 0,\n      userModalVisible: false,\n      modalTitle: \"\",\n      userForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"保密\",\n        type: 0,\n        avatar: \"\",\n        roles: []\n      },\n      userRoles: [],\n      roleList: [],\n      errorPass: \"\",\n\n      /** 表单验证，未使用 */\n      userFormValidate: {\n        username: [{\n          required: true,\n          message: \"账号不能为空\",\n          trigger: \"blur\"\n        }],\n        mobile: [{\n          required: true,\n          message: \"手机号不能为空\",\n          trigger: \"blur\"\n        }, {\n          validator: validateMobile,\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"请输入邮箱地址\"\n        }, {\n          type: \"email\",\n          message: \"邮箱格式不正确\"\n        }]\n      },\n      submitLoading: false,\n      columns: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        type: \"expand\",\n        width: 50,\n        fixed: \"left\",\n        render: function render(h, params) {\n          return h(expandRow, {\n            props: {\n              row: params.row\n            }\n          });\n        }\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\",\n        fixed: \"left\"\n      }, {\n        title: \"用户名\",\n        key: \"username\",\n        minWidth: 145,\n        sortable: true,\n        fixed: \"left\"\n      }, {\n        title: \"头像\",\n        key: \"avatar\",\n        width: 80,\n        align: \"center\",\n        render: function render(h, params) {\n          return h(\"Avatar\", {\n            props: {\n              src: params.row.avatar\n            }\n          });\n        }\n      }, {\n        title: \"手机\",\n        key: \"mobile\",\n        width: 115,\n        sortable: true\n      }, {\n        title: \"邮箱\",\n        key: \"email\",\n        width: 180,\n        sortable: true\n      }, {\n        title: \"性别\",\n        key: \"sex\",\n        width: 70,\n        align: \"center\"\n      }, {\n        title: \"用户类型\",\n        key: \"type\",\n        align: \"center\",\n        width: 100,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.type == 1) {\n            re = \"管理员\";\n          } else if (params.row.type == 0) {\n            re = \"普通用户\";\n          }\n\n          return h(\"div\", re);\n        }\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 140,\n        render: function render(h, params) {\n          if (params.row.status == 0) {\n            return h(\"div\", [h(\"Badge\", {\n              props: {\n                status: \"success\",\n                text: \"正常启用\"\n              }\n            })]);\n          } else if (params.row.status == -1) {\n            return h(\"div\", [h(\"Badge\", {\n              props: {\n                status: \"error\",\n                text: \"禁用\"\n              }\n            })]);\n          }\n        },\n        filters: [{\n          label: \"正常启用\",\n          value: 0\n        }, {\n          label: \"禁用\",\n          value: -1\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value == 0) {\n            return row.status == 0;\n          } else if (value == -1) {\n            return row.status == -1;\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        sortable: true,\n        sortType: \"desc\",\n        width: 150\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 200,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          var enableOrDisable = \"\";\n          var editButton = h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\",\n              disabled: !_this.$route.meta.permTypes.includes('edit')\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\");\n\n          if (params.row.status == 0) {\n            enableOrDisable = h(\"Button\", {\n              props: {\n                size: \"small\",\n                disabled: !_this.$route.meta.permTypes.includes('disable')\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.disable(params.row);\n                }\n              }\n            }, \"禁用\");\n          } else {\n            enableOrDisable = h(\"Button\", {\n              props: {\n                type: \"success\",\n                size: \"small\",\n                disabled: !_this.$route.meta.permTypes.includes('enable')\n              },\n              style: {\n                marginRight: \"5px\"\n              },\n              on: {\n                click: function click() {\n                  _this.enable(params.row);\n                }\n              }\n            }, \"启用\");\n          }\n\n          ;\n          var deleteButton = h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\",\n              disabled: !_this.$route.meta.permTypes.includes('delete')\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\");\n          return h(\"div\", [editButton, enableOrDisable, deleteButton]);\n        }\n      }],\n      exportColumns: [{\n        title: \"用户名\",\n        key: \"username\"\n      }, {\n        title: \"头像\",\n        key: \"avatar\"\n      }, {\n        title: \"手机\",\n        key: \"mobile\"\n      }, {\n        title: \"邮箱\",\n        key: \"email\"\n      }, {\n        title: \"性别\",\n        key: \"sex\"\n      }, {\n        title: \"用户类型\",\n        key: \"type\"\n      }, {\n        title: \"状态\",\n        key: \"status\"\n      }, {\n        title: \"删除标志\",\n        key: \"delFlag\"\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\"\n      }, {\n        title: \"更新时间\",\n        key: \"updateTime\"\n      }],\n      data: [],\n      exportData: [],\n      total: 0,\n      dictSex: this.$store.state.dict.sex\n    };\n  },\n  methods: {\n    init: function init() {\n      this.getUserList();\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getUserList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getUserList();\n    },\n    selectDateRange: function selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getUserList: function getUserList() {\n      var _this2 = this;\n\n      if (!this.$route.meta.permTypes.includes('view')) {\n        this.loading = false;\n        return;\n      } // 多条件搜索用户列表\n\n\n      this.loading = true; // 避免后台默认值\n\n      if (!this.searchForm.type) {\n        this.searchForm.type = \"\";\n      }\n\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n\n      getUserListData(this.searchForm).then(function (res) {\n        _this2.loading = false;\n\n        if (res.success) {\n          _this2.data = res.result.records;\n          _this2.total = res.result.total;\n\n          if (res.result.content || res.result.totalElements) {\n            _this2.data = res.result.content;\n            _this2.total = res.result.totalElements;\n          }\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getUserList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.selectDep = []; // 重新加载数据\n\n      this.getUserList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getUserList();\n    },\n    getRoleList: function getRoleList() {\n      var _this3 = this;\n\n      getAllRoleList().then(function (res) {\n        if (res.success) {\n          _this3.roleList = res.result;\n        }\n      });\n    },\n    handleDropdown: function handleDropdown(name) {\n      var _this4 = this;\n\n      if (name == \"refresh\") {\n        this.getUserList();\n      } else if (name == \"reset\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要重置密码的用户\");\n          return;\n        }\n\n        this.$refs.checkPass.show();\n      } else if (name == \"exportData\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要导出的数据\");\n          return;\n        }\n\n        this.$Modal.confirm({\n          title: \"确认导出\",\n          content: \"您确认要导出所选 \" + this.selectCount + \" 条数据?\",\n          onOk: function onOk() {\n            _this4.$refs.exportTable.exportCsv({\n              filename: \"用户数据\"\n            });\n          }\n        });\n      } else if (name == \"exportAll\") {\n        this.modalExportAll = true;\n      }\n    },\n    exportAll: function exportAll() {\n      var _this5 = this;\n\n      getAllUserData().then(function (res) {\n        _this5.modalExportAll = false;\n\n        if (res.success) {\n          _this5.exportData = res.result;\n          setTimeout(function () {\n            _this5.$refs.exportTable.exportCsv({\n              filename: \"用户全部数据\"\n            });\n          }, 1000);\n        }\n      });\n    },\n    resetPass: function resetPass() {\n      var _this6 = this;\n\n      this.$Modal.confirm({\n        title: \"确认重置\",\n        content: \"您确认要重置所选的 \" + this.selectCount + \" 条用户数据密码为【123456】?\",\n        loading: true,\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this6.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1);\n          resetUserPass({\n            ids: ids\n          }).then(function (res) {\n            _this6.$Modal.remove();\n\n            if (res.success) {\n              _this6.$Message.success(\"操作成功\");\n\n              _this6.clearSelectAll();\n\n              _this6.getUserList();\n            }\n          });\n        }\n      });\n    },\n    submitUser: function submitUser() {\n      var _this7 = this;\n\n      this.$refs.userForm.validate(function (valid) {\n        if (valid) {\n          if (_this7.modalType == 0) {\n            // 添加用户 避免编辑后传入id\n            delete _this7.userForm.id;\n            delete _this7.userForm.status;\n\n            if (_this7.userForm.password == \"\" || _this7.userForm.password == undefined) {\n              _this7.errorPass = \"密码不能为空\";\n              return;\n            }\n\n            if (_this7.userForm.password.length < 6) {\n              _this7.errorPass = \"密码长度不得少于6位\";\n              return;\n            }\n\n            _this7.submitLoading = true;\n            addUser({\n              username: _this7.userForm.username,\n              password: _this7.userForm.password,\n              mobile: _this7.userForm.mobile,\n              email: _this7.userForm.email,\n              sex: _this7.userForm.sex,\n              type: _this7.userForm.type,\n              avatar: _this7.userForm.avatar,\n              roles0: _this7.userForm.roles\n            }).then(function (res) {\n              _this7.submitLoading = false;\n\n              if (res.success) {\n                _this7.$Message.success(\"操作成功\");\n\n                _this7.getUserList();\n\n                _this7.userModalVisible = false;\n              }\n            });\n          } else {\n            // 编辑\n            _this7.submitLoading = true;\n            editUser({\n              id: _this7.userForm.id,\n              username: _this7.userForm.username,\n              mobile: _this7.userForm.mobile,\n              email: _this7.userForm.email,\n              sex: _this7.userForm.sex,\n              type: _this7.userForm.type,\n              avatar: _this7.userForm.avatar,\n              status: _this7.userForm.status,\n              roles0: _this7.userForm.roles\n            }).then(function (res) {\n              _this7.submitLoading = false;\n\n              if (res.success) {\n                _this7.$Message.success(\"操作成功\");\n\n                _this7.getUserList();\n\n                _this7.userModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    add: function add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加用户\";\n      this.$refs.userForm.resetFields();\n      this.userModalVisible = true;\n    },\n    edit: function edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑用户\";\n      this.$refs.userForm.resetFields(); // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var data = JSON.parse(str);\n      this.userForm = data;\n      var selectRolesId = [];\n      this.userForm.roles.forEach(function (e) {\n        selectRolesId.push(e.id);\n      });\n      this.userForm.roles = selectRolesId;\n      this.userModalVisible = true;\n    },\n    enable: function enable(v) {\n      var _this8 = this;\n\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        content: \"您确认要启用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: function onOk() {\n          enableUser(v.id).then(function (res) {\n            _this8.$Modal.remove();\n\n            if (res.success) {\n              _this8.$Message.success(\"操作成功\");\n\n              _this8.getUserList();\n            }\n          });\n        }\n      });\n    },\n    disable: function disable(v) {\n      var _this9 = this;\n\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        content: \"您确认要禁用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: function onOk() {\n          disableUser(v.id).then(function (res) {\n            _this9.$Modal.remove();\n\n            if (res.success) {\n              _this9.$Message.success(\"操作成功\");\n\n              _this9.getUserList();\n            }\n          });\n        }\n      });\n    },\n    remove: function remove(v) {\n      var _this10 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: function onOk() {\n          deleteUser(v.id).then(function (res) {\n            _this10.$Modal.remove();\n\n            if (res.success) {\n              _this10.$Message.success(\"删除成功\");\n\n              _this10.getUserList();\n            }\n          });\n        }\n      });\n    },\n    dropDown: function dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n\n      this.drop = !this.drop;\n    },\n    showSelect: function showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll: function delAll() {\n      var _this11 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this11.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1);\n          deleteUser(ids).then(function (res) {\n            _this11.$Modal.remove();\n\n            if (res.success) {\n              _this11.$Message.success(\"删除成功\");\n\n              _this11.clearSelectAll();\n\n              _this11.getUserList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.getRoleList();\n  }\n};",{"version":3,"sources":["userManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA,SACA,eADA,EAEA,cAFA,EAGA,OAHA,EAIA,QAJA,EAKA,UALA,EAMA,WANA,EAOA,UAPA,EAQA,cARA,EASA,aATA,QAUA,aAVA;AAWA,OAAA,SAAA,MAAA,cAAA;AACA,SAAA,cAAA,EAAA,gBAAA,QAAA,iBAAA;AACA,OAAA,cAAA,MAAA,2CAAA;AACA,OAAA,aAAA,MAAA,wCAAA;AACA,OAAA,aAAA,MAAA,2CAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,cAAA,EAAA,cAHA;AAIA,IAAA,aAAA,EAAA;AAJA,GAFA;AAQA,EAAA,IARA,kBAQA;AAAA;;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,gBAAA,EAAA,KAFA;AAGA,MAAA,aAAA,EAAA,IAHA;AAIA,MAAA,cAAA,EAAA,KAJA;AAKA,MAAA,IAAA,EAAA,KALA;AAMA,MAAA,eAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA,gBAPA;AAQA,MAAA,WAAA,EAAA,CARA;AASA,MAAA,UAAA,EAAA,EATA;AAUA,MAAA,OAAA,EAAA,EAVA;AAWA,MAAA,SAAA,EAAA,EAXA;AAYA,MAAA,UAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,IAAA,EAAA,EALA;AAMA,QAAA,MAAA,EAAA,EANA;AAOA,QAAA,UAAA,EAAA,CAPA;AAQA,QAAA,QAAA,EAAA,EARA;AASA,QAAA,IAAA,EAAA,YATA;AAUA,QAAA,KAAA,EAAA,MAVA;AAWA,QAAA,SAAA,EAAA,EAXA;AAYA,QAAA,OAAA,EAAA;AAZA,OAZA;AA0BA,MAAA,UAAA,EAAA,IA1BA;AA2BA,MAAA,SAAA,EAAA,CA3BA;AA4BA,MAAA,gBAAA,EAAA,KA5BA;AA6BA,MAAA,UAAA,EAAA,EA7BA;AA8BA,MAAA,QAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,GAAA,EAAA,IAJA;AAKA,QAAA,IAAA,EAAA,CALA;AAMA,QAAA,MAAA,EAAA,EANA;AAOA,QAAA,KAAA,EAAA;AAPA,OA9BA;AAuCA,MAAA,SAAA,EAAA,EAvCA;AAwCA,MAAA,QAAA,EAAA,EAxCA;AAyCA,MAAA,SAAA,EAAA,EAzCA;;AA0CA;AACA,MAAA,gBAAA,EAAA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,QAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,MAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,SAAA,EAAA,cAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CAJA;AAQA,QAAA,KAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,IAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AARA,OA3CA;AAwDA,MAAA,aAAA,EAAA,KAxDA;AAyDA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OADA,EAOA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,MAHA;AAIA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,iBAAA,CAAA,CAAA,SAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,GAAA,EAAA,MAAA,CAAA;AADA;AADA,WAAA,CAAA;AAKA;AAVA,OAPA,EAmBA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAnBA,EAyBA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,GAAA,EAAA,UAFA;AAGA,QAAA,QAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA,IAJA;AAKA,QAAA,KAAA,EAAA;AALA,OAzBA,EAgCA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA,QAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,iBAAA,CAAA,CAAA,QAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,GAAA,EAAA,MAAA,CAAA,GAAA,CAAA;AADA;AADA,WAAA,CAAA;AAKA;AAXA,OAhCA,EA6CA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OA7CA,EAmDA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,OAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OAnDA,EAyDA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA,EAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAzDA,EA+DA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,EAAA,GAAA,EAAA;;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,YAAA,EAAA,GAAA,KAAA;AACA,WAFA,MAEA,IAAA,MAAA,CAAA,GAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,YAAA,EAAA,GAAA,MAAA;AACA;;AACA,iBAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA;AACA;AAbA,OA/DA,EA8EA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,QAHA;AAIA,QAAA,KAAA,EAAA,GAJA;AAKA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CAAA,OAAA,EAAA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,MAAA,EAAA,SADA;AAEA,gBAAA,IAAA,EAAA;AAFA;AADA,aAAA,CADA,CAAA,CAAA;AAQA,WATA,MASA,IAAA,MAAA,CAAA,GAAA,CAAA,MAAA,IAAA,CAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,KAAA,EAAA,CACA,CAAA,CAAA,OAAA,EAAA;AACA,cAAA,KAAA,EAAA;AACA,gBAAA,MAAA,EAAA,OADA;AAEA,gBAAA,IAAA,EAAA;AAFA;AADA,aAAA,CADA,CAAA,CAAA;AAQA;AACA,SAzBA;AA0BA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,KAAA,EAAA;AAFA,SADA,EAKA;AACA,UAAA,KAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,CAAA;AAFA,SALA,CA1BA;AAoCA,QAAA,cAAA,EAAA,KApCA;AAqCA,QAAA,YArCA,wBAqCA,KArCA,EAqCA,GArCA,EAqCA;AACA,cAAA,KAAA,IAAA,CAAA,EAAA;AACA,mBAAA,GAAA,CAAA,MAAA,IAAA,CAAA;AACA,WAFA,MAEA,IAAA,KAAA,IAAA,CAAA,CAAA,EAAA;AACA,mBAAA,GAAA,CAAA,MAAA,IAAA,CAAA,CAAA;AACA;AACA;AA3CA,OA9EA,EA2HA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,YAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,QAAA,EAAA,MAJA;AAKA,QAAA,KAAA,EAAA;AALA,OA3HA,EAkIA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,QAFA;AAGA,QAAA,KAAA,EAAA,GAHA;AAIA,QAAA,KAAA,EAAA,QAJA;AAKA,QAAA,KAAA,EAAA,OALA;AAMA,QAAA,MAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA;AACA,cAAA,eAAA,GAAA,EAAA;AACA,cAAA,UAAA,GAAA,CAAA,CAAA,QAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA,cAAA,IAAA,EAAA,SAAA;AAAA,cAAA,IAAA,EAAA,OAAA;AAAA,cAAA,QAAA,EAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,MAAA;AAAA,aAAA;AAAA,YAAA,KAAA,EAAA;AAAA,cAAA,WAAA,EAAA;AAAA,aAAA;AAAA,YAAA,EAAA,EAAA;AAAA,cAAA,KAAA,EAAA,iBAAA;AAAA,gBAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA;AAAA;AAAA;AAAA,WAAA,EAAA,IAAA,CAAA;;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,YAAA,eAAA,GAAA,CAAA,CAAA,QAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,OAAA;AAAA,gBAAA,QAAA,EAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,SAAA;AAAA,eAAA;AAAA,cAAA,KAAA,EAAA;AAAA,gBAAA,WAAA,EAAA;AAAA,eAAA;AAAA,cAAA,EAAA,EAAA;AAAA,gBAAA,KAAA,EAAA,iBAAA;AAAA,kBAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA;AAAA;AAAA;AAAA,aAAA,EAAA,IAAA,CAAA;AACA,WAFA,MAEA;AACA,YAAA,eAAA,GAAA,CAAA,CAAA,QAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA,gBAAA,IAAA,EAAA,SAAA;AAAA,gBAAA,IAAA,EAAA,OAAA;AAAA,gBAAA,QAAA,EAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,QAAA;AAAA,eAAA;AAAA,cAAA,KAAA,EAAA;AAAA,gBAAA,WAAA,EAAA;AAAA,eAAA;AAAA,cAAA,EAAA,EAAA;AAAA,gBAAA,KAAA,EAAA,iBAAA;AAAA,kBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AAAA;AAAA;AAAA,aAAA,EAAA,IAAA,CAAA;AACA;;AAAA;AACA,cAAA,YAAA,GAAA,CAAA,CAAA,QAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA,cAAA,IAAA,EAAA,OAAA;AAAA,cAAA,IAAA,EAAA,OAAA;AAAA,cAAA,QAAA,EAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,QAAA;AAAA,aAAA;AAAA,YAAA,EAAA,EAAA;AAAA,cAAA,KAAA,EAAA,iBAAA;AAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA;AAAA;AAAA;AAAA,WAAA,EAAA,IAAA,CAAA;AACA,iBAAA,CAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,YAAA,CAAA,CAAA;AACA;AAhBA,OAlIA,CAzDA;AA8MA,MAAA,aAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,KADA;AAEA,QAAA,GAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAjBA,EAqBA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA;AAFA,OArBA,EAyBA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAzBA,EA6BA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA;AAFA,OA7BA,EAiCA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAjCA,EAqCA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA;AAFA,OArCA,CA9MA;AAwPA,MAAA,IAAA,EAAA,EAxPA;AAyPA,MAAA,UAAA,EAAA,EAzPA;AA0PA,MAAA,KAAA,EAAA,CA1PA;AA2PA,MAAA,OAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AA3PA,KAAA;AA6PA,GAtQA;AAuQA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,WAAA;AACA,KAHA;AAIA,IAAA,UAJA,sBAIA,CAJA,EAIA;AACA,WAAA,UAAA,CAAA,UAAA,GAAA,CAAA;AACA,WAAA,WAAA;AACA,WAAA,cAAA;AACA,KARA;AASA,IAAA,cATA,0BASA,CATA,EASA;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,CAAA;AACA,WAAA,WAAA;AACA,KAZA;AAaA,IAAA,eAbA,2BAaA,CAbA,EAaA;AACA,UAAA,CAAA,EAAA;AACA,aAAA,UAAA,CAAA,SAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,aAAA,UAAA,CAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,KAlBA;AAmBA,IAAA,WAnBA,yBAmBA;AAAA;;AACA,UAAA,CAAA,KAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,MAAA,CAAA,EAAA;AACA,aAAA,OAAA,GAAA,KAAA;AACA;AACA,OAJA,CAKA;;;AACA,WAAA,OAAA,GAAA,IAAA,CANA,CAOA;;AACA,UAAA,CAAA,KAAA,UAAA,CAAA,IAAA,EAAA;AACA,aAAA,UAAA,CAAA,IAAA,GAAA,EAAA;AACA;;AACA,UAAA,CAAA,KAAA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,UAAA,CAAA,MAAA,GAAA,EAAA;AACA;;AACA,MAAA,eAAA,CAAA,KAAA,UAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,MAAA,CAAA,KAAA;;AACA,cAAA,GAAA,CAAA,MAAA,CAAA,OAAA,IAAA,GAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA;AACA,YAAA,MAAA,CAAA,KAAA,GAAA,GAAA,CAAA,MAAA,CAAA,aAAA;AACA;AACA;AACA,OAVA;AAWA,KA5CA;AA6CA,IAAA,YA7CA,0BA6CA;AACA,WAAA,UAAA,CAAA,UAAA,GAAA,CAAA;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,EAAA;AACA,WAAA,WAAA;AACA,KAjDA;AAkDA,IAAA,WAlDA,yBAkDA;AACA,WAAA,KAAA,CAAA,UAAA,CAAA,WAAA;AACA,WAAA,UAAA,CAAA,UAAA,GAAA,CAAA;AACA,WAAA,UAAA,CAAA,QAAA,GAAA,EAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,UAAA,CAAA,SAAA,GAAA,EAAA;AACA,WAAA,UAAA,CAAA,OAAA,GAAA,EAAA;AACA,WAAA,SAAA,GAAA,EAAA,CAPA,CAQA;;AACA,WAAA,WAAA;AACA,KA5DA;AA6DA,IAAA,UA7DA,sBA6DA,CA7DA,EA6DA;AACA,WAAA,UAAA,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA;AACA,WAAA,UAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA;;AACA,UAAA,CAAA,CAAA,KAAA,IAAA,QAAA,EAAA;AACA,aAAA,UAAA,CAAA,KAAA,GAAA,EAAA;AACA;;AACA,WAAA,WAAA;AACA,KApEA;AAqEA,IAAA,WArEA,yBAqEA;AAAA;;AACA,MAAA,cAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,GAAA,CAAA,MAAA;AACA;AACA,OAJA;AAKA,KA3EA;AA4EA,IAAA,cA5EA,0BA4EA,IA5EA,EA4EA;AAAA;;AACA,UAAA,IAAA,IAAA,SAAA,EAAA;AACA,aAAA,WAAA;AACA,OAFA,MAEA,IAAA,IAAA,IAAA,OAAA,EAAA;AACA,YAAA,KAAA,WAAA,IAAA,CAAA,EAAA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,eAAA;AACA;AACA;;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,IAAA;AACA,OANA,MAMA,IAAA,IAAA,IAAA,YAAA,EAAA;AACA,YAAA,KAAA,WAAA,IAAA,CAAA,EAAA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA;AACA;;AACA,aAAA,MAAA,CAAA,OAAA,CAAA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,OAAA,EAAA,cAAA,KAAA,WAAA,GAAA,OAFA;AAGA,UAAA,IAAA,EAAA,gBAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA;AACA,cAAA,QAAA,EAAA;AADA,aAAA;AAGA;AAPA,SAAA;AASA,OAdA,MAcA,IAAA,IAAA,IAAA,WAAA,EAAA;AACA,aAAA,cAAA,GAAA,IAAA;AACA;AACA,KAtGA;AAuGA,IAAA,SAvGA,uBAuGA;AAAA;;AACA,MAAA,cAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,cAAA,GAAA,KAAA;;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,MAAA;AACA,UAAA,UAAA,CAAA,YAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA;AACA,cAAA,QAAA,EAAA;AADA,aAAA;AAGA,WAJA,EAIA,IAJA,CAAA;AAKA;AACA,OAVA;AAWA,KAnHA;AAoHA,IAAA,SApHA,uBAoHA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EACA,eACA,KAAA,WADA,GAEA,oBALA;AAMA,QAAA,OAAA,EAAA,IANA;AAOA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,GAAA,GAAA,EAAA;;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,IAAA,CAAA,CAAA,EAAA,GAAA,GAAA;AACA,WAFA;;AAGA,UAAA,GAAA,GAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,UAAA,aAAA,CAAA;AAAA,YAAA,GAAA,EAAA;AAAA,WAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,MAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,cAAA;;AACA,cAAA,MAAA,CAAA,WAAA;AACA;AACA,WAPA;AAQA;AArBA,OAAA;AAuBA,KA5IA;AA6IA,IAAA,UA7IA,wBA6IA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,MAAA,CAAA,SAAA,IAAA,CAAA,EAAA;AACA;AACA,mBAAA,MAAA,CAAA,QAAA,CAAA,EAAA;AACA,mBAAA,MAAA,CAAA,QAAA,CAAA,MAAA;;AACA,gBACA,MAAA,CAAA,QAAA,CAAA,QAAA,IAAA,EAAA,IACA,MAAA,CAAA,QAAA,CAAA,QAAA,IAAA,SAFA,EAGA;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,QAAA;AACA;AACA;;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,cAAA,MAAA,CAAA,SAAA,GAAA,YAAA;AACA;AACA;;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AACA,YAAA,OAAA,CAAA;AACA,cAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA,QADA;AAEA,cAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA,QAFA;AAGA,cAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA,MAHA;AAIA,cAAA,KAAA,EAAA,MAAA,CAAA,QAAA,CAAA,KAJA;AAKA,cAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAAA,GALA;AAMA,cAAA,IAAA,EAAA,MAAA,CAAA,QAAA,CAAA,IANA;AAOA,cAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA,MAPA;AAQA,cAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AARA,aAAA,CAAA,CASA,IATA,CASA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,MAAA,CAAA,WAAA;;AACA,gBAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA;AACA,aAhBA;AAiBA,WAjCA,MAiCA;AACA;AACA,YAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AACA,YAAA,QAAA,CAAA;AACA,cAAA,EAAA,EAAA,MAAA,CAAA,QAAA,CAAA,EADA;AAEA,cAAA,QAAA,EAAA,MAAA,CAAA,QAAA,CAAA,QAFA;AAGA,cAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA,MAHA;AAIA,cAAA,KAAA,EAAA,MAAA,CAAA,QAAA,CAAA,KAJA;AAKA,cAAA,GAAA,EAAA,MAAA,CAAA,QAAA,CAAA,GALA;AAMA,cAAA,IAAA,EAAA,MAAA,CAAA,QAAA,CAAA,IANA;AAOA,cAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA,MAPA;AAQA,cAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA,MARA;AASA,cAAA,MAAA,EAAA,MAAA,CAAA,QAAA,CAAA;AATA,aAAA,CAAA,CAUA,IAVA,CAUA,UAAA,GAAA,EAAA;AACA,cAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AACA,kBAAA,GAAA,CAAA,OAAA,EAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,gBAAA,MAAA,CAAA,WAAA;;AACA,gBAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA;AACA,aAjBA;AAkBA;AACA;AACA,OA1DA;AA2DA,KAzMA;AA0MA,IAAA,GA1MA,iBA0MA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,MAAA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,WAAA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,KA/MA;AAgNA,IAAA,IAhNA,gBAgNA,CAhNA,EAgNA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,MAAA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,WAAA,GAHA,CAIA;;AACA,WAAA,IAAA,IAAA,IAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,IAAA,EAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA;AACA;;AACA,UAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,UAAA,aAAA,GAAA,EAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,OAFA;AAGA,WAAA,QAAA,CAAA,KAAA,GAAA,aAAA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,KAnOA;AAoOA,IAAA,MApOA,kBAoOA,CApOA,EAoOA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,cAAA,CAAA,CAAA,QAAA,GAAA,IAFA;AAGA,QAAA,OAAA,EAAA,IAHA;AAIA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,MAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,WAAA;AACA;AACA,WANA;AAOA;AAZA,OAAA;AAcA,KAnPA;AAoPA,IAAA,OApPA,mBAoPA,CApPA,EAoPA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,cAAA,CAAA,CAAA,QAAA,GAAA,IAFA;AAGA,QAAA,OAAA,EAAA,IAHA;AAIA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,WAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,MAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,MAAA,CAAA,WAAA;AACA;AACA,WANA;AAOA;AAZA,OAAA;AAcA,KAnQA;AAoQA,IAAA,MApQA,kBAoQA,CApQA,EAoQA;AAAA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,cAAA,CAAA,CAAA,QAAA,GAAA,IAFA;AAGA,QAAA,OAAA,EAAA,IAHA;AAIA,QAAA,IAAA,EAAA,gBAAA;AACA,UAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,MAAA,CAAA,MAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,OAAA,CAAA,WAAA;AACA;AACA,WANA;AAOA;AAZA,OAAA;AAcA,KAnRA;AAoRA,IAAA,QApRA,sBAoRA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,aAAA,eAAA,GAAA,IAAA;AACA,aAAA,YAAA,GAAA,gBAAA;AACA,OAHA,MAGA;AACA,aAAA,eAAA,GAAA,IAAA;AACA,aAAA,YAAA,GAAA,cAAA;AACA;;AACA,WAAA,IAAA,GAAA,CAAA,KAAA,IAAA;AACA,KA7RA;AA8RA,IAAA,UA9RA,sBA8RA,CA9RA,EA8RA;AACA,WAAA,UAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,CAAA;AACA,WAAA,WAAA,GAAA,CAAA,CAAA,MAAA;AACA,KAlSA;AAmSA,IAAA,cAnSA,4BAmSA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,KArSA;AAsSA,IAAA,MAtSA,oBAsSA;AAAA;;AACA,UAAA,KAAA,WAAA,IAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,eAAA,KAAA,WAAA,GAAA,OAFA;AAGA,QAAA,OAAA,EAAA,IAHA;AAIA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,GAAA,GAAA,EAAA;;AACA,UAAA,OAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,IAAA,CAAA,CAAA,EAAA,GAAA,GAAA;AACA,WAFA;;AAGA,UAAA,GAAA,GAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,UAAA,UAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,OAAA,CAAA,MAAA,CAAA,MAAA;;AACA,gBAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;;AACA,cAAA,OAAA,CAAA,cAAA;;AACA,cAAA,OAAA,CAAA,WAAA;AACA;AACA,WAPA;AAQA;AAlBA,OAAA;AAoBA;AA/TA,GAvQA;AAwkBA,EAAA,OAxkBA,qBAwkBA;AACA,SAAA,IAAA;AACA,SAAA,WAAA;AACA;AA3kBA,CAAA","sourcesContent":["<style lang=\"less\">\n@import \"./userManage.less\";\n</style>\n<template>\n  <div class=\"search\">\n    <Row>\n      <Col>\n        <Card>\n          <Row>\n            <Form ref=\"searchForm\" :model=\"searchForm\" inline :label-width=\"70\" class=\"search-form\" v-show=\"this.$route.meta.permTypes.includes('view')\">\n              <Form-item label=\"用户名称\" prop=\"username\">\n                <Input\n                  type=\"text\"\n                  v-model=\"searchForm.username\"\n                  clearable\n                  placeholder=\"请输入用户名\"\n                  style=\"width: 200px\"\n                />\n              </Form-item>\n              <span v-if=\"drop\">\n                <Form-item label=\"手机号\" prop=\"mobile\">\n                  <Input\n                    type=\"text\"\n                    v-model=\"searchForm.mobile\"\n                    clearable\n                    placeholder=\"请输入手机号\"\n                    style=\"width: 200px\"\n                  />\n                </Form-item>\n                <Form-item label=\"邮箱\" prop=\"email\">\n                  <Input\n                    type=\"text\"\n                    v-model=\"searchForm.email\"\n                    clearable\n                    placeholder=\"请输入邮箱\"\n                    style=\"width: 200px\"\n                  />\n                </Form-item>\n                <Form-item label=\"性别\" prop=\"sex\">\n                  <Select v-model=\"searchForm.sex\" placeholder=\"请选择\" clearable style=\"width: 200px\">\n                    <Option v-for=\"(item, i) in dictSex\" :key=\"i\" :value=\"item.value\">{{item.title}}</Option>\n                  </Select>\n                </Form-item>\n                <Form-item label=\"用户类型\" prop=\"type\">\n                  <Select\n                    v-model=\"searchForm.type\"\n                    placeholder=\"请选择\"\n                    clearable\n                    style=\"width: 200px\"\n                  >\n                    <Option value=\"0\">普通用户</Option>\n                    <Option value=\"1\">管理员</Option>\n                  </Select>\n                </Form-item>\n                <Form-item label=\"用户状态\" prop=\"status\">\n                  <Select\n                    v-model=\"searchForm.status\"\n                    placeholder=\"请选择\"\n                    clearable\n                    style=\"width: 200px\"\n                  >\n                    <Option value=\"0\">正常</Option>\n                    <Option value=\"-1\">禁用</Option>\n                  </Select>\n                </Form-item>\n                <Form-item label=\"创建时间\">\n                  <DatePicker\n                    v-model=\"selectDate\"\n                    type=\"daterange\"\n                    format=\"yyyy-MM-dd\"\n                    clearable\n                    @on-change=\"selectDateRange\"\n                    placeholder=\"选择起始时间\"\n                    style=\"width: 200px\"\n                  ></DatePicker>\n                </Form-item>\n              </span>\n              <Form-item style=\"margin-left:-35px;\" class=\"br\">\n                <Button @click=\"handleSearch\" type=\"primary\" icon=\"ios-search\">搜索</Button>\n                <Button @click=\"handleReset\">重置</Button>\n                <a class=\"drop-down\" @click=\"dropDown\">\n                  {{dropDownContent}}\n                  <Icon :type=\"dropDownIcon\"></Icon>\n                </a>\n              </Form-item>\n            </Form>\n          </Row>\n          <Row class=\"operation\">\n            <Button @click=\"add\" type=\"primary\" icon=\"md-add\" v-show=\"this.$route.meta.permTypes.includes('add')\">添加用户</Button>\n            <Button @click=\"delAll\" icon=\"md-trash\" v-show=\"this.$route.meta.permTypes.includes('delete')\">批量删除</Button>\n            <Dropdown @on-click=\"handleDropdown\">\n              <Button>\n                更多操作\n                <Icon type=\"md-arrow-dropdown\" />\n              </Button>\n              <DropdownMenu slot=\"list\">\n                <DropdownItem name=\"refresh\">刷新</DropdownItem>\n                <DropdownItem name=\"reset\" v-show=\"this.$route.meta.permTypes.includes('other')\">重置用户密码</DropdownItem>\n                <DropdownItem name=\"exportData\">导出所选数据</DropdownItem>\n                <DropdownItem name=\"exportAll\">导出全部数据</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n            <circleLoading v-if=\"operationLoading\" />\n          </Row>\n          <Row>\n            <Alert show-icon>\n              已选择\n              <span class=\"select-count\">{{selectCount}}</span> 项\n              <a class=\"select-clear\" @click=\"clearSelectAll\">清空</a>\n            </Alert>\n          </Row>\n          <Row>\n            <Table\n              :loading=\"loading\"\n              border\n              :columns=\"columns\"\n              :data=\"data\"\n              sortable=\"custom\"\n              @on-sort-change=\"changeSort\"\n              @on-selection-change=\"showSelect\"\n              ref=\"table\"\n            ></Table>\n            <Table\n              :columns=\"exportColumns\"\n              :data=\"exportData\"\n              ref=\"exportTable\"\n              style=\"display:none\"\n            ></Table>\n          </Row>\n          <Row type=\"flex\" justify=\"end\" class=\"page\">\n            <Page\n              :current=\"searchForm.pageNumber\"\n              :total=\"total\"\n              :page-size=\"searchForm.pageSize\"\n              @on-change=\"changePage\"\n              @on-page-size-change=\"changePageSize\"\n              :page-size-opts=\"[10,20,50]\"\n              size=\"small\"\n              show-total\n              show-elevator\n              show-sizer\n            ></Page>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n    <Modal\n      :title=\"modalTitle\"\n      v-model=\"userModalVisible\"\n      :mask-closable=\"false\"\n      :width=\"500\"\n      :styles=\"{top: '30px'}\"\n    >\n      <Form ref=\"userForm\" :model=\"userForm\" :label-width=\"70\">\n        <FormItem label=\"用户名\" prop=\"username\">\n          <Input v-model=\"userForm.username\" autocomplete=\"off\" />\n        </FormItem>\n        <FormItem label=\"密码\" prop=\"password\" v-if=\"modalType==0\" :error=\"errorPass\">\n          <Input type=\"password\" v-model=\"userForm.password\" autocomplete=\"off\" />\n        </FormItem>\n        <FormItem label=\"邮箱\" prop=\"email\">\n          <Input v-model=\"userForm.email\" />\n        </FormItem>\n        <FormItem label=\"手机号\" prop=\"mobile\">\n          <Input v-model=\"userForm.mobile\" />\n        </FormItem>\n        <FormItem label=\"性别\" prop=\"sex\">\n          <RadioGroup v-model=\"userForm.sex\">\n            <Radio v-for=\"(item, i) in dictSex\" :key=\"i\" :label=\"item.value\">{{item.title}}</Radio>\n          </RadioGroup>\n        </FormItem>\n        <Form-item label=\"头像\" prop=\"avatar\">\n          <upload-pic-input v-model=\"userForm.avatar\"></upload-pic-input>\n        </Form-item>\n        <FormItem label=\"用户类型\" prop=\"type\">\n          <Select v-model=\"userForm.type\" placeholder=\"请选择\">\n            <Option :value=\"0\">普通用户</Option>\n            <Option :value=\"1\">管理员</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"角色分配\" prop=\"roles\">\n          <Select v-model=\"userForm.roles\" multiple>\n            <Option v-for=\"item in roleList\" :value=\"item.id\" :key=\"item.id\" :label=\"item.name\">\n              <span style=\"margin-right:10px;\">{{ item.name }}</span>\n              <span style=\"color:#ccc;\">{{ item.description }}</span>\n            </Option>\n          </Select>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"userModalVisible = false\">取消</Button>\n        <Button type=\"primary\" :loading=\"submitLoading\" @click=\"submitUser\">提交</Button>\n      </div>\n    </Modal>\n    <Modal v-model=\"modalExportAll\" title=\"确认导出\" :loading=\"loadingExport\" @on-ok=\"exportAll\">\n      <p>您确认要导出全部 {{total}} 条数据？</p>\n    </Modal>\n\n    <check-password ref=\"checkPass\" @on-success=\"resetPass\" />\n  </div>\n</template>\n\n<script>\nimport {\n  getUserListData,\n  getAllRoleList,\n  addUser,\n  editUser,\n  enableUser,\n  disableUser,\n  deleteUser,\n  getAllUserData,\n  resetUserPass\n} from \"@/api/index\";\nimport expandRow from \"./expand.vue\";\nimport { validateMobile, validatePassword } from \"@/libs/validate\";\nimport uploadPicInput from \"../../my-components/rbac/upload-pic-input\";\nimport circleLoading from \"../../my-components/circle-loading.vue\";\nimport checkPassword from \"@/views/my-components/rbac/check-password\";\nexport default {\n  name: \"user-manage\",\n  components: {\n    circleLoading,\n    expandRow,\n    uploadPicInput,\n    checkPassword\n  },\n  data() {\n    return {\n      loading: true,\n      operationLoading: false,\n      loadingExport: true,\n      modalExportAll: false,\n      drop: false,\n      dropDownContent: \"展开\",\n      dropDownIcon: \"ios-arrow-down\",\n      selectCount: 0,\n      selectList: [],\n      dataDep: [],\n      searchKey: \"\",\n      searchForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"\",\n        type: \"\",\n        status: \"\",\n        pageNumber: 1,\n        pageSize: 10,\n        sort: \"createTime\",\n        order: \"desc\",\n        startDate: \"\",\n        endDate: \"\"\n      },\n      selectDate: null,\n      modalType: 0,\n      userModalVisible: false,\n      modalTitle: \"\",\n      userForm: {\n        username: \"\",\n        mobile: \"\",\n        email: \"\",\n        sex: \"保密\",\n        type: 0,\n        avatar: \"\",\n        roles: [],\n      },\n      userRoles: [],\n      roleList: [],\n      errorPass: \"\",\n      /** 表单验证，未使用 */\n      userFormValidate: {\n        username: [\n          { required: true, message: \"账号不能为空\", trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"手机号不能为空\", trigger: \"blur\" },\n          { validator: validateMobile, trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"请输入邮箱地址\" },\n          { type: \"email\", message: \"邮箱格式不正确\" }\n        ]\n      },\n      submitLoading: false,\n      columns: [\n        {\n          type: \"selection\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          type: \"expand\",\n          width: 50,\n          fixed: \"left\",\n          render: (h, params) => {\n            return h(expandRow, {\n              props: {\n                row: params.row\n              }\n            });\n          }\n        },\n        {\n          type: \"index\",\n          width: 60,\n          align: \"center\",\n          fixed: \"left\"\n        },\n        {\n          title: \"用户名\",\n          key: \"username\",\n          minWidth: 145,\n          sortable: true,\n          fixed: \"left\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\",\n          width: 80,\n          align: \"center\",\n          render: (h, params) => {\n            return h(\"Avatar\", {\n              props: {\n                src: params.row.avatar\n              }\n            });\n          }\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\",\n          width: 115,\n          sortable: true\n        },\n        {\n          title: \"邮箱\",\n          key: \"email\",\n          width: 180,\n          sortable: true\n        },\n        {\n          title: \"性别\",\n          key: \"sex\",\n          width: 70,\n          align: \"center\"\n        },\n        {\n          title: \"用户类型\",\n          key: \"type\",\n          align: \"center\",\n          width: 100,\n          render: (h, params) => {\n            let re = \"\";\n            if (params.row.type == 1) {\n              re = \"管理员\";\n            } else if (params.row.type == 0) {\n              re = \"普通用户\";\n            }\n            return h(\"div\", re);\n          }\n        },\n        {\n          title: \"状态\",\n          key: \"status\",\n          align: \"center\",\n          width: 140,\n          render: (h, params) => {\n            if (params.row.status == 0) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"success\",\n                    text: \"正常启用\"\n                  }\n                })\n              ]);\n            } else if (params.row.status == -1) {\n              return h(\"div\", [\n                h(\"Badge\", {\n                  props: {\n                    status: \"error\",\n                    text: \"禁用\"\n                  }\n                })\n              ]);\n            }\n          },\n          filters: [\n            {\n              label: \"正常启用\",\n              value: 0\n            },\n            {\n              label: \"禁用\",\n              value: -1\n            }\n          ],\n          filterMultiple: false,\n          filterMethod(value, row) {\n            if (value == 0) {\n              return row.status == 0;\n            } else if (value == -1) {\n              return row.status == -1;\n            }\n          }\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\",\n          sortable: true,\n          sortType: \"desc\",\n          width: 150\n        },\n        {\n          title: \"操作\",\n          key: \"action\",\n          width: 200,\n          align: \"center\",\n          fixed: \"right\",\n          render: (h, params) => {\n            let enableOrDisable = \"\";\n            let editButton = h(\"Button\", {props: {type: \"primary\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('edit')}, style: {marginRight: \"5px\"}, on: {click: () => {this.edit(params.row);}}}, \"编辑\");\n            if (params.row.status == 0) {\n              enableOrDisable = h(\"Button\", {props: {size: \"small\",disabled:!this.$route.meta.permTypes.includes('disable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.disable(params.row);}}}, \"禁用\");\n            } else {\n              enableOrDisable = h(\"Button\", {props: {type: \"success\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('enable')}, style: {marginRight: \"5px\"}, on: {click: () => {this.enable(params.row);}}}, \"启用\");\n            };\n            let deleteButton =  h(\"Button\", {props: {type: \"error\", size: \"small\",disabled:!this.$route.meta.permTypes.includes('delete')}, on: {click: () => {this.remove(params.row);}}}, \"删除\");\n            return h(\"div\", [editButton, enableOrDisable, deleteButton]);\n          }\n        }\n      ],\n      exportColumns: [\n        {\n          title: \"用户名\",\n          key: \"username\"\n        },\n        {\n          title: \"头像\",\n          key: \"avatar\"\n        },\n        {\n          title: \"手机\",\n          key: \"mobile\"\n        },\n        {\n          title: \"邮箱\",\n          key: \"email\"\n        },\n        {\n          title: \"性别\",\n          key: \"sex\"\n        },\n        {\n          title: \"用户类型\",\n          key: \"type\"\n        },\n        {\n          title: \"状态\",\n          key: \"status\"\n        },\n        {\n          title: \"删除标志\",\n          key: \"delFlag\"\n        },\n        {\n          title: \"创建时间\",\n          key: \"createTime\"\n        },\n        {\n          title: \"更新时间\",\n          key: \"updateTime\"\n        }\n      ],\n      data: [],\n      exportData: [],\n      total: 0,\n      dictSex: this.$store.state.dict.sex\n    };\n  },\n  methods: {\n    init() {\n      this.getUserList();\n    },\n    changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getUserList();\n      this.clearSelectAll();\n    },\n    changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getUserList();\n    },\n    selectDateRange(v) {\n      if (v) {\n        this.searchForm.startDate = v[0];\n        this.searchForm.endDate = v[1];\n      }\n    },\n    getUserList() {\n      if (!this.$route.meta.permTypes.includes('view')){\n        this.loading = false;\n        return;\n      }\n      // 多条件搜索用户列表\n      this.loading = true;\n      // 避免后台默认值\n      if (!this.searchForm.type) {\n        this.searchForm.type = \"\";\n      }\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n      getUserListData(this.searchForm).then(res => {\n        this.loading = false;\n        if (res.success) {\n            this.data = res.result.records;\n            this.total = res.result.total\n            if (res.result.content || res.result.totalElements){\n                this.data =  res.result.content;\n                this.total = res.result.totalElements;\n            }\n        }\n      });\n    },\n    handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getUserList();\n    },\n    handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.selectDate = null;\n      this.searchForm.startDate = \"\";\n      this.searchForm.endDate = \"\";\n      this.selectDep = [];\n      // 重新加载数据\n      this.getUserList();\n    },\n    changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n      this.getUserList();\n    },\n    getRoleList() {\n      getAllRoleList().then(res => {\n        if (res.success) {\n          this.roleList = res.result;\n        }\n      });\n    },\n    handleDropdown(name) {\n      if (name == \"refresh\") {\n        this.getUserList();\n      } else if (name == \"reset\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要重置密码的用户\");\n          return;\n        }\n        this.$refs.checkPass.show();\n      } else if (name == \"exportData\") {\n        if (this.selectCount <= 0) {\n          this.$Message.warning(\"您还未选择要导出的数据\");\n          return;\n        }\n        this.$Modal.confirm({\n          title: \"确认导出\",\n          content: \"您确认要导出所选 \" + this.selectCount + \" 条数据?\",\n          onOk: () => {\n            this.$refs.exportTable.exportCsv({\n              filename: \"用户数据\"\n            });\n          }\n        });\n      } else if (name == \"exportAll\") {\n        this.modalExportAll = true;\n      }\n    },\n    exportAll() {\n      getAllUserData().then(res => {\n        this.modalExportAll = false;\n        if (res.success) {\n          this.exportData = res.result;\n          setTimeout(() => {\n            this.$refs.exportTable.exportCsv({\n              filename: \"用户全部数据\"\n            });\n          }, 1000);\n        }\n      });\n    },\n    resetPass() {\n      this.$Modal.confirm({\n        title: \"确认重置\",\n        content:\n          \"您确认要重置所选的 \" +\n          this.selectCount +\n          \" 条用户数据密码为【123456】?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          resetUserPass({ ids: ids }).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.clearSelectAll();\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    submitUser() {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          if (this.modalType == 0) {\n            // 添加用户 避免编辑后传入id\n            delete this.userForm.id;\n            delete this.userForm.status;\n            if (\n              this.userForm.password == \"\" ||\n              this.userForm.password == undefined\n            ) {\n              this.errorPass = \"密码不能为空\";\n              return;\n            }\n            if (this.userForm.password.length < 6) {\n              this.errorPass = \"密码长度不得少于6位\";\n              return;\n            }\n            this.submitLoading = true;\n            addUser({\n                username: this.userForm.username,\n                password:this.userForm.password,\n                mobile: this.userForm.mobile,\n                email: this.userForm.email,\n                sex: this.userForm.sex,\n                type: this.userForm.type,\n                avatar: this.userForm.avatar,\n                roles0: this.userForm.roles,\n            }).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getUserList();\n                this.userModalVisible = false;\n              }\n            });\n          } else {\n            // 编辑\n            this.submitLoading = true;\n            editUser({\n                id:this.userForm.id,\n                username: this.userForm.username,\n                mobile: this.userForm.mobile,\n                email: this.userForm.email,\n                sex: this.userForm.sex,\n                type: this.userForm.type,\n                avatar: this.userForm.avatar,\n                status:this.userForm.status,\n                roles0: this.userForm.roles,\n            }).then(res => {\n              this.submitLoading = false;\n              if (res.success) {\n                this.$Message.success(\"操作成功\");\n                this.getUserList();\n                this.userModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    add() {\n      this.modalType = 0;\n      this.modalTitle = \"添加用户\";\n      this.$refs.userForm.resetFields();\n      this.userModalVisible = true;\n    },\n    edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑用户\";\n      this.$refs.userForm.resetFields();\n      // 转换null为\"\"\n      for (let attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n      let str = JSON.stringify(v);\n      let data = JSON.parse(str);\n      this.userForm = data;\n      let selectRolesId = [];\n      this.userForm.roles.forEach(function(e) {\n        selectRolesId.push(e.id);\n      });\n      this.userForm.roles = selectRolesId;\n      this.userModalVisible = true;\n    },\n    enable(v) {\n      this.$Modal.confirm({\n        title: \"确认启用\",\n        content: \"您确认要启用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          enableUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    disable(v) {\n      this.$Modal.confirm({\n        title: \"确认禁用\",\n        content: \"您确认要禁用用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          disableUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"操作成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    remove(v) {\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除用户 \" + v.username + \" ?\",\n        loading: true,\n        onOk: () => {\n          deleteUser(v.id).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.getUserList();\n            }\n          });\n        }\n      });\n    },\n    dropDown() {\n      if (this.drop) {\n        this.dropDownContent = \"展开\";\n        this.dropDownIcon = \"ios-arrow-down\";\n      } else {\n        this.dropDownContent = \"收起\";\n        this.dropDownIcon = \"ios-arrow-up\";\n      }\n      this.drop = !this.drop;\n    },\n    showSelect(e) {\n      this.exportData = e;\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    delAll() {\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: () => {\n          let ids = \"\";\n          this.selectList.forEach(function(e) {\n            ids += e.id + \",\";\n          });\n          ids = ids.substring(0, ids.length - 1);\n          deleteUser(ids).then(res => {\n            this.$Modal.remove();\n            if (res.success) {\n              this.$Message.success(\"删除成功\");\n              this.clearSelectAll();\n              this.getUserList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted() {\n    this.init();\n    this.getRoleList();\n  }\n};\n</script>\n"],"sourceRoot":"src/views/sys/user-manage"}]}