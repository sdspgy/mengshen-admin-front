{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/main-components/tags-page-opened.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/main-components/tags-page-opened.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport VueI18n from \"vue-i18n\";\nVue.use(VueI18n);\nexport default {\n  name: \"tagsPageOpened\",\n  data: function data() {\n    return {\n      currentPageName: this.$route.name,\n      tagBodyLeft: 0,\n      refsTag: [],\n      tagsCount: 1\n    };\n  },\n  props: {\n    pageTagsList: Array,\n    beforePush: {\n      type: Function,\n      default: function _default(item) {\n        return true;\n      }\n    }\n  },\n  computed: {\n    title: function title() {\n      return this.$store.state.app.currentTitle;\n    },\n    tagsList: function tagsList() {\n      return this.$store.state.app.pageOpenedList;\n    }\n  },\n  methods: {\n    itemTitle: function itemTitle(item) {\n      if (_typeof(item.title) == \"object\") {\n        return this.$t(item.title.i18n);\n      } else {\n        return item.title;\n      }\n    },\n    closePage: function closePage(event, name) {\n      var pageOpenedList = this.$store.state.app.pageOpenedList;\n      var lastPageObj = pageOpenedList[0];\n\n      if (this.currentPageName == name) {\n        var len = pageOpenedList.length;\n\n        for (var i = 1; i < len; i++) {\n          if (pageOpenedList[i].name == name) {\n            if (i < len - 1) {\n              lastPageObj = pageOpenedList[i + 1];\n            } else {\n              lastPageObj = pageOpenedList[i - 1];\n            }\n\n            break;\n          }\n        }\n      } else {\n        var tagWidth = event.target.parentNode.offsetWidth;\n        this.tagBodyLeft = Math.min(this.tagBodyLeft + tagWidth, 0);\n      }\n\n      this.$store.commit(\"removeTag\", name);\n      this.$store.commit(\"closePage\", name);\n      pageOpenedList = this.$store.state.app.pageOpenedList;\n      localStorage.pageOpenedList = JSON.stringify(pageOpenedList);\n\n      if (this.currentPageName == name) {\n        this.linkTo(lastPageObj);\n      }\n    },\n    linkTo: function linkTo(item) {\n      var routerObj = {};\n      routerObj.name = item.name;\n\n      if (item.argu) {\n        routerObj.params = item.argu;\n      }\n\n      if (item.query) {\n        routerObj.query = item.query;\n      }\n\n      if (this.beforePush(item)) {\n        this.$router.push(routerObj);\n      }\n    },\n    handlescroll: function handlescroll(e) {\n      var type = e.type;\n      var delta = 0;\n\n      if (type == \"DOMMouseScroll\" || type == \"mousewheel\") {\n        delta = e.wheelDelta ? e.wheelDelta : -(e.detail || 0) * 40;\n      }\n\n      var left = 0;\n\n      if (delta > 0) {\n        left = Math.min(0, this.tagBodyLeft + delta);\n      } else {\n        if (this.$refs.scrollCon.offsetWidth - 100 < this.$refs.scrollBody.offsetWidth) {\n          if (this.tagBodyLeft < -(this.$refs.scrollBody.offsetWidth - this.$refs.scrollCon.offsetWidth + 100)) {\n            left = this.tagBodyLeft;\n          } else {\n            left = Math.max(this.tagBodyLeft + delta, this.$refs.scrollCon.offsetWidth - this.$refs.scrollBody.offsetWidth - 100);\n          }\n        } else {\n          this.tagBodyLeft = 0;\n        }\n      }\n\n      this.tagBodyLeft = left;\n    },\n    handleTagsOption: function handleTagsOption(type) {\n      if (type == \"clearAll\") {\n        this.$store.commit(\"clearAllTags\");\n        this.$router.push({\n          name: \"home_index\"\n        });\n      } else {\n        this.$store.commit(\"clearOtherTags\", this);\n      }\n\n      this.tagBodyLeft = 0;\n    },\n    moveToView: function moveToView(tag) {\n      if (tag.offsetLeft < -this.tagBodyLeft) {\n        // 标签在可视区域左侧\n        this.tagBodyLeft = -tag.offsetLeft + 10;\n      } else if (tag.offsetLeft + 10 > -this.tagBodyLeft && tag.offsetLeft + tag.offsetWidth < -this.tagBodyLeft + this.$refs.scrollCon.offsetWidth - 100) {\n        // 标签在可视区域\n        this.tagBodyLeft = Math.min(0, this.$refs.scrollCon.offsetWidth - 100 - tag.offsetWidth - tag.offsetLeft - 20);\n      } else {\n        // 标签在可视区域右侧\n        this.tagBodyLeft = -(tag.offsetLeft - (this.$refs.scrollCon.offsetWidth - 100 - tag.offsetWidth) + 20);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.refsTag = this.$refs.tagsPageOpened;\n    setTimeout(function () {\n      _this.refsTag.forEach(function (item, index) {\n        if (_this.$route.name == item.name) {\n          var tag = _this.refsTag[index].$el;\n\n          _this.moveToView(tag);\n        }\n      });\n    }, 1); // 这里不设定时器就会有偏移bug\n\n    this.tagsCount = this.tagsList.length;\n  },\n  watch: {\n    $route: function $route(to) {\n      var _this2 = this;\n\n      this.currentPageName = to.name;\n      this.$nextTick(function () {\n        _this2.refsTag.forEach(function (item, index) {\n          if (to.name == item.name) {\n            var tag = _this2.refsTag[index].$el;\n\n            _this2.moveToView(tag);\n          }\n        });\n      });\n      this.tagsCount = this.tagsList.length;\n    }\n  }\n};",null]}