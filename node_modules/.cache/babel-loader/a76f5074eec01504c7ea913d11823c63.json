{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/dict-manage/dictManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/sys/dict-manage/dictManage.vue","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAllDictList, addDict, editDict, deleteDict, searchDict, getAllDictDataList, addDictData, editDictData, deleteData } from \"@/api/index\";\nexport default {\n  name: \"dic-manage\",\n  data: function data() {\n    var _this = this;\n\n    return {\n      treeLoading: false,\n      // 树加载状态\n      maxHeight: \"500px\",\n      loading: false,\n      // 表格加载状态\n      editTitle: \"\",\n      // 编辑节点名称\n      searchKey: \"\",\n      // 搜索树\n      expand: true,\n      span: 18,\n      expandIcon: \"ios-arrow-back\",\n      selectNode: {},\n      treeData: [],\n      // 树数据\n      selectCount: 0,\n      // 多选计数\n      selectList: [],\n      // 多选数据\n      searchForm: {\n        // 搜索框对应data对象\n        name: \"\",\n        status: \"\",\n        pageNumber: 1,\n        // 当前页数\n        pageSize: 10,\n        // 页面大小\n        sort: \"sortOrder\",\n        // 默认排序字段\n        order: \"asc\" // 默认排序方式\n\n      },\n      modalType: 0,\n      // 添加或编辑标识\n      modalVisible: false,\n      // 添加或编辑显示\n      dictModalVisible: false,\n      dictModalTitle: \"\",\n      modalTitle: \"\",\n      // 添加或编辑标题\n      dictForm: {\n        title: \"\",\n        type: \"\",\n        description: \"\",\n        sortOrder: 0\n      },\n      form: {\n        // 添加或编辑表单对象初始化数据\n        title: \"\",\n        value: \"\",\n        status: 0,\n        description: \"\",\n        sortOrder: 0\n      },\n      dictFormValidate: {\n        // 表单验证规则\n        title: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        type: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      formValidate: {\n        // 表单验证规则\n        title: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }],\n        value: [{\n          required: true,\n          message: \"不能为空\",\n          trigger: \"blur\"\n        }]\n      },\n      columns: [// 表头\n      {\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        type: \"index\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"名称\",\n        key: \"title\",\n        minWidth: 150,\n        sortable: true\n      }, {\n        title: \"数据值\",\n        key: \"value\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"备注\",\n        key: \"description\",\n        width: 150,\n        sortable: true\n      }, {\n        title: \"排序值\",\n        key: \"sortOrder\",\n        width: 100,\n        sortable: true,\n        sortType: \"asc\"\n      }, {\n        title: \"状态\",\n        key: \"status\",\n        align: \"center\",\n        width: 130,\n        render: function render(h, params) {\n          var re = \"\";\n\n          if (params.row.status == 0) {\n            return h(\"div\", [h(\"Badge\", {\n              props: {\n                status: \"success\",\n                text: \"正常启用\"\n              }\n            })]);\n          } else if (params.row.status == -1) {\n            return h(\"div\", [h(\"Badge\", {\n              props: {\n                status: \"error\",\n                text: \"禁用\"\n              }\n            })]);\n          }\n        }\n      }, {\n        title: \"创建时间\",\n        key: \"createTime\",\n        width: 250,\n        sortable: true\n      }, {\n        title: \"操作\",\n        key: \"action\",\n        width: 160,\n        align: \"center\",\n        fixed: \"right\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"primary\",\n              size: \"small\"\n            },\n            style: {\n              marginRight: \"5px\"\n            },\n            on: {\n              click: function click() {\n                _this.edit(params.row);\n              }\n            }\n          }, \"编辑\"), h(\"Button\", {\n            props: {\n              type: \"error\",\n              size: \"small\"\n            },\n            on: {\n              click: function click() {\n                _this.remove(params.row);\n              }\n            }\n          }, \"删除\")]);\n        }\n      }],\n      submitLoading: false,\n      // 添加或编辑提交状态\n      data: [],\n      //表单数据\n      total: 0 // 表单数据总数\n\n    };\n  },\n  methods: {\n    init: function init() {\n      // 获取树数据\n      this.getAllDict(); // 获取表单数据\n\n      this.getDataList();\n    },\n    getAllDict: function getAllDict() {\n      var _this2 = this;\n\n      if (!this.$route.meta.permTypes.includes('view')) {\n        this.treeLoading = false;\n        return;\n      }\n\n      this.treeLoading = true;\n      getAllDictList().then(function (res) {\n        _this2.treeLoading = false;\n\n        if (res.success) {\n          _this2.treeData = res.result;\n        }\n      });\n    },\n    search: function search() {\n      var _this3 = this;\n\n      // 搜索树\n      if (this.searchKey) {\n        this.treeLoading = true;\n        searchDict({\n          key: this.searchKey\n        }).then(function (res) {\n          _this3.treeLoading = false;\n\n          if (res.success) {\n            _this3.treeData = res.result;\n          }\n        });\n      } else {\n        // 为空重新加载\n        this.getAllDict();\n      }\n    },\n    selectTree: function selectTree(v) {\n      if (v.length > 0) {\n        this.$refs.dictForm.resetFields(); // 转换null为\"\"\n\n        for (var attr in v[0]) {\n          if (v[0][attr] == null) {\n            v[0][attr] = \"\";\n          }\n        }\n\n        var str = JSON.stringify(v[0]);\n        var data = JSON.parse(str);\n        this.selectNode = data;\n        this.dictForm = data;\n        this.editTitle = data.title + \"(\" + data.type + \")\"; // 重新加载表\n\n        this.searchForm.pageNumber = 1;\n        this.searchForm.pageSize = 10;\n        this.getDataList();\n      } else {\n        this.cancelEdit();\n      }\n    },\n    cancelEdit: function cancelEdit() {\n      var data = this.$refs.tree.getSelectedNodes()[0];\n\n      if (data) {\n        data.selected = false;\n      } // 取消选择后获取全部数据\n\n\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    changeSelect: function changeSelect(v) {\n      this.selectCount = v.length;\n      this.selectList = v;\n    },\n    changeExpand: function changeExpand() {\n      this.expand = !this.expand;\n\n      if (this.expand) {\n        this.expandIcon = \"ios-arrow-back\";\n        this.span = 18;\n      } else {\n        this.expandIcon = \"ios-arrow-forward\";\n        this.span = 23;\n      }\n    },\n    changePage: function changePage(v) {\n      this.searchForm.pageNumber = v;\n      this.getDataList();\n      this.clearSelectAll();\n    },\n    changePageSize: function changePageSize(v) {\n      this.searchForm.pageSize = v;\n      this.getDataList();\n    },\n    getDataList: function getDataList() {\n      var _this4 = this;\n\n      if (!this.$route.meta.permTypes.includes('other')) {\n        this.treeLoading = false;\n        return;\n      }\n\n      this.loading = true;\n\n      if (this.selectNode.id) {\n        this.searchForm.dictId = this.selectNode.id;\n      } else {\n        delete this.searchForm.dictId;\n      }\n\n      if (!this.searchForm.status) {\n        this.searchForm.status = \"\";\n      }\n\n      getAllDictDataList(this.searchForm).then(function (res) {\n        _this4.loading = false;\n\n        if (res.success) {\n          _this4.data = res.result.records;\n          _this4.total = res.result.total;\n\n          if (res.result.content || res.result.totalElements) {\n            _this4.data = res.result.content;\n            _this4.total = res.result.totalElements;\n          }\n        }\n      });\n    },\n    handleSearch: function handleSearch() {\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10;\n      this.getDataList();\n    },\n    handleReset: function handleReset() {\n      this.$refs.searchForm.resetFields();\n      this.searchForm.pageNumber = 1;\n      this.searchForm.pageSize = 10; // 重新加载数据\n\n      this.getDataList();\n    },\n    changeSort: function changeSort(e) {\n      this.searchForm.sort = e.key;\n      this.searchForm.order = e.order;\n\n      if (e.order == \"normal\") {\n        this.searchForm.order = \"\";\n      }\n\n      this.getDataList();\n    },\n    showSelect: function showSelect(e) {\n      this.selectList = e;\n      this.selectCount = e.length;\n    },\n    clearSelectAll: function clearSelectAll() {\n      this.$refs.table.selectAll(false);\n    },\n    refreshDict: function refreshDict() {\n      this.getAllDict();\n      this.selectNode = {};\n      this.editTitle = \"\";\n      this.getDataList();\n    },\n    handleDropdown: function handleDropdown(name) {\n      if (name == \"editDcit\") {\n        if (!this.selectNode.id) {\n          this.$Message.warning(\"您还未选择要编辑的字典\");\n          return;\n        }\n\n        this.editDcit();\n      } else if (name == \"delDcit\") {\n        this.delDcit();\n      } else if (name == \"refreshDcit\") {\n        this.refreshDict();\n      }\n    },\n    addDcit: function addDcit() {\n      this.modalType = 0;\n      this.dictModalTitle = \"添加字典\";\n      this.$refs.dictForm.resetFields();\n      this.dictModalVisible = true;\n    },\n    editDcit: function editDcit() {\n      this.modalType = 1;\n      this.dictModalTitle = \"编辑字典\";\n      this.dictModalVisible = true;\n    },\n    delDcit: function delDcit() {\n      var _this5 = this;\n\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"您还未选择要删除的字典\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        loading: true,\n        content: \"您确认要删除 \" + this.selectNode.title + \" ?\",\n        onOk: function onOk() {\n          // 删除\n          deleteDict(_this5.selectNode.id).then(function (res) {\n            _this5.$Modal.remove();\n\n            if (res.success) {\n              _this5.$Message.success(\"操作成功\");\n\n              _this5.refreshDict();\n            }\n          });\n        }\n      });\n    },\n    add: function add() {\n      if (!this.selectNode.id) {\n        this.$Message.warning(\"请先选择一个字典类别\");\n        return;\n      }\n\n      this.modalType = 0;\n      this.modalTitle = \"添加字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields();\n      this.modalVisible = true;\n    },\n    edit: function edit(v) {\n      this.modalType = 1;\n      this.modalTitle = \"编辑字典 \" + this.editTitle + \" 的数据\";\n      this.$refs.form.resetFields(); // 转换null为\"\"\n\n      for (var attr in v) {\n        if (v[attr] == null) {\n          v[attr] = \"\";\n        }\n      }\n\n      var str = JSON.stringify(v);\n      var data = JSON.parse(str);\n      this.form = data;\n      this.modalVisible = true;\n    },\n    handelSubmitDict: function handelSubmitDict() {\n      var _this6 = this;\n\n      this.$refs.dictForm.validate(function (valid) {\n        if (valid) {\n          _this6.submitLoading = true;\n\n          if (_this6.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete _this6.dictForm.id;\n            addDict(_this6.dictForm).then(function (res) {\n              _this6.submitLoading = false;\n\n              if (res.success) {\n                _this6.$Message.success(\"操作成功\");\n\n                _this6.getAllDict();\n\n                _this6.dictModalVisible = false;\n              }\n            });\n          } else if (_this6.modalType == 1) {\n            // 编辑\n            editDict(_this6.dictForm).then(function (res) {\n              _this6.submitLoading = false;\n\n              if (res.success) {\n                _this6.$Message.success(\"操作成功\");\n\n                _this6.getAllDict();\n\n                _this6.dictModalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    handelSubmit: function handelSubmit() {\n      var _this7 = this;\n\n      this.$refs.form.validate(function (valid) {\n        if (valid) {\n          _this7.submitLoading = true;\n\n          if (_this7.modalType == 0) {\n            // 添加 避免编辑后传入id等数据 记得删除\n            delete _this7.form.id;\n            _this7.form.dictId = _this7.selectNode.id;\n            addDictData(_this7.form).then(function (res) {\n              _this7.submitLoading = false;\n\n              if (res.success) {\n                _this7.$Message.success(\"操作成功\");\n\n                _this7.getDataList();\n\n                _this7.modalVisible = false;\n              }\n            });\n          } else if (_this7.modalType == 1) {\n            // 编辑\n            editDictData(_this7.form).then(function (res) {\n              _this7.submitLoading = false;\n\n              if (res.success) {\n                _this7.$Message.success(\"操作成功\");\n\n                _this7.getDataList();\n\n                _this7.modalVisible = false;\n              }\n            });\n          }\n        }\n      });\n    },\n    remove: function remove(v) {\n      var _this8 = this;\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除 \" + v.title + \" ?\",\n        loading: true,\n        onOk: function onOk() {\n          // 删除\n          deleteData(v.id).then(function (res) {\n            _this8.$Modal.remove();\n\n            if (res.success) {\n              _this8.$Message.success(\"操作成功\");\n\n              _this8.getDataList();\n            }\n          });\n        }\n      });\n    },\n    delAll: function delAll() {\n      var _this9 = this;\n\n      if (this.selectCount <= 0) {\n        this.$Message.warning(\"您还未选择要删除的数据\");\n        return;\n      }\n\n      this.$Modal.confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除所选的 \" + this.selectCount + \" 条数据?\",\n        loading: true,\n        onOk: function onOk() {\n          var ids = \"\";\n\n          _this9.selectList.forEach(function (e) {\n            ids += e.id + \",\";\n          });\n\n          ids = ids.substring(0, ids.length - 1); // 批量删除\n\n          deleteData(ids).then(function (res) {\n            _this9.$Modal.remove();\n\n            if (res.success) {\n              _this9.$Message.success(\"操作成功\");\n\n              _this9.clearSelectAll();\n\n              _this9.getDataList();\n            }\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    // 计算高度\n    var height = document.documentElement.clientHeight;\n    this.maxHeight = Number(height - 287) + \"px\";\n    this.init();\n  }\n};",null]}