{"remainingRequest":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js!/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/utils/mixins.js","dependencies":[{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/utils/mixins.js","mtime":1574132205000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  data: function data() {\n    return {\n      prefixCls: 'zk-table'\n    };\n  },\n  methods: {\n    validateType: function validateType(type, validTypes, funcName) {\n      var isReturn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      if (validTypes.indexOf(type) < 0) throw new Error(\"\".concat(funcName, \"'s type must is \").concat(validTypes.join(' or '), \".\"));\n\n      if (isReturn) {\n        var certainType = {};\n        validTypes.forEach(function (item) {\n          certainType[item] = item === type;\n        });\n        return certainType;\n      }\n\n      return true;\n    },\n    isExpandCell: function isExpandCell(table, columnIndex) {\n      return table.expandType && (table.showIndex && columnIndex === 1 || !table.showIndex && columnIndex === 0);\n    },\n    isSelectionCell: function isSelectionCell(table, columnIndex) {\n      return table.selectable && (table.showIndex && table.expandType && columnIndex === 2 || !table.showIndex && table.expandType && columnIndex === 1 || table.showIndex && !table.expandType && columnIndex === 1 || !table.showIndex && !table.expandType && columnIndex === 0);\n    }\n  }\n};",{"version":3,"sources":["/Users/hoolai/Documents/tyz/workspace-ws/baobao-admin-front/src/views/my-components/tree-table/Table/utils/mixins.js"],"names":["data","prefixCls","methods","validateType","type","validTypes","funcName","isReturn","indexOf","Error","join","certainType","forEach","item","isExpandCell","table","columnIndex","expandType","showIndex","isSelectionCell","selectable"],"mappings":"AAAA,eAAe;AACbA,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,SAAS,EAAE;AADN,KAAP;AAGD,GALY;AAMbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMC,IADN,EACYC,UADZ,EACwBC,QADxB,EACmD;AAAA,UAAjBC,QAAiB,uEAAN,IAAM;AACxD,UAAIF,UAAU,CAACG,OAAX,CAAmBJ,IAAnB,IAA2B,CAA/B,EAAkC,MAAM,IAAIK,KAAJ,WAAaH,QAAb,6BAAwCD,UAAU,CAACK,IAAX,CAAgB,MAAhB,CAAxC,OAAN;;AAClC,UAAIH,QAAJ,EAAc;AACZ,YAAMI,WAAW,GAAG,EAApB;AACAN,QAAAA,UAAU,CAACO,OAAX,CAAmB,UAACC,IAAD,EAAU;AAC3BF,UAAAA,WAAW,CAACE,IAAD,CAAX,GAAoBA,IAAI,KAAKT,IAA7B;AACD,SAFD;AAGA,eAAOO,WAAP;AACD;;AACD,aAAO,IAAP;AACD,KAXM;AAYPG,IAAAA,YAZO,wBAYMC,KAZN,EAYaC,WAZb,EAY0B;AAC/B,aAAOD,KAAK,CAACE,UAAN,KACJF,KAAK,CAACG,SAAN,IAAmBF,WAAW,KAAK,CAApC,IACC,CAACD,KAAK,CAACG,SAAP,IAAoBF,WAAW,KAAK,CAFhC,CAAP;AAID,KAjBM;AAkBPG,IAAAA,eAlBO,2BAkBSJ,KAlBT,EAkBgBC,WAlBhB,EAkB6B;AAClC,aAAOD,KAAK,CAACK,UAAN,KACJL,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACE,UAAzB,IAAuCD,WAAW,KAAK,CAAxD,IACC,CAACD,KAAK,CAACG,SAAP,IAAoBH,KAAK,CAACE,UAA1B,IAAwCD,WAAW,KAAK,CADzD,IAECD,KAAK,CAACG,SAAN,IAAmB,CAACH,KAAK,CAACE,UAA1B,IAAwCD,WAAW,KAAK,CAFzD,IAGC,CAACD,KAAK,CAACG,SAAP,IAAoB,CAACH,KAAK,CAACE,UAA3B,IAAyCD,WAAW,KAAK,CAJrD,CAAP;AAMD;AAzBM;AANI,CAAf","sourcesContent":["export default {\n  data() {\n    return {\n      prefixCls: 'zk-table',\n    };\n  },\n  methods: {\n    validateType(type, validTypes, funcName, isReturn = true) {\n      if (validTypes.indexOf(type) < 0) throw new Error(`${funcName}'s type must is ${validTypes.join(' or ')}.`);\n      if (isReturn) {\n        const certainType = {};\n        validTypes.forEach((item) => {\n          certainType[item] = item === type;\n        });\n        return certainType;\n      }\n      return true;\n    },\n    isExpandCell(table, columnIndex) {\n      return table.expandType && (\n        (table.showIndex && columnIndex === 1) ||\n        (!table.showIndex && columnIndex === 0)\n      );\n    },\n    isSelectionCell(table, columnIndex) {\n      return table.selectable && (\n        (table.showIndex && table.expandType && columnIndex === 2) ||\n        (!table.showIndex && table.expandType && columnIndex === 1) ||\n        (table.showIndex && !table.expandType && columnIndex === 1) ||\n        (!table.showIndex && !table.expandType && columnIndex === 0)\n      );\n    },\n  },\n};\n"]}]}